id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: GUPS.EasyPerformanceMonitor
  commentId: N:GUPS.EasyPerformanceMonitor
  language: CSharp
  name:
    CSharp: GUPS.EasyPerformanceMonitor
    VB: GUPS.EasyPerformanceMonitor
  nameWithType:
    CSharp: GUPS.EasyPerformanceMonitor
    VB: GUPS.EasyPerformanceMonitor
  qualifiedName:
    CSharp: GUPS.EasyPerformanceMonitor
    VB: GUPS.EasyPerformanceMonitor
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: GUPS.EasyPerformanceMonitor.PerformanceMonitor
    commentId: T:GUPS.EasyPerformanceMonitor.PerformanceMonitor
    language: CSharp
    name:
      CSharp: PerformanceMonitor
      VB: PerformanceMonitor
    nameWithType:
      CSharp: PerformanceMonitor
      VB: PerformanceMonitor
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.PerformanceMonitor
      VB: GUPS.EasyPerformanceMonitor.PerformanceMonitor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor
    source:
      id: PerformanceMonitor
      path: ''
      startLine: 2436
    summary: "\nThe singleton class responsible for managing and controlling the display of performance monitor windows.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.PerformanceMonitor\" data-throw-if-not-resolved=\"false\"></xref> class ensures that only one instance of the performance monitor exists,\nand it provides functionality to show or hide monitor windows. It also supports configuration options to control\nits behavior, such as restricting activation to editor or development builds, and specifying whether to show the\nmonitor windows on startup.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PerformanceMonitor : PersistentSingleton<PerformanceMonitor>'
        VB: >-
          Public Class PerformanceMonitor

              Inherits PersistentSingleton(Of PerformanceMonitor)
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.PerformanceMonitor.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.PerformanceMonitor.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: PerformanceMonitor.Awake()
        VB: PerformanceMonitor.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.PerformanceMonitor.Awake()
        VB: GUPS.EasyPerformanceMonitor.PerformanceMonitor.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor
      source:
        id: Awake
        path: ''
        startLine: 2458
      summary: "\nSetup the singleton and add the needed performance components (if they are supported for the current platform).\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: GUPS.EasyPerformanceMonitor.PerformanceMonitor.Awake*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.PerformanceMonitor.GetMonitorWindows
      commentId: M:GUPS.EasyPerformanceMonitor.PerformanceMonitor.GetMonitorWindows
      language: CSharp
      name:
        CSharp: GetMonitorWindows()
        VB: GetMonitorWindows()
      nameWithType:
        CSharp: PerformanceMonitor.GetMonitorWindows()
        VB: PerformanceMonitor.GetMonitorWindows()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.PerformanceMonitor.GetMonitorWindows()
        VB: GUPS.EasyPerformanceMonitor.PerformanceMonitor.GetMonitorWindows()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor
      source:
        id: GetMonitorWindows
        path: ''
        startLine: 2487
      summary: "\nGet all monitor windows in the children.\n"
      example: []
      syntax:
        content:
          CSharp: public List<MonitorWindow> GetMonitorWindows()
          VB: Public Function GetMonitorWindows As List(Of MonitorWindow)
        return:
          type: GUPS.EasyPerformanceMonitor.List{MonitorWindow}
          description: A list of monitor windows.
      overload: GUPS.EasyPerformanceMonitor.PerformanceMonitor.GetMonitorWindows*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      GUPS.EasyPerformanceMonitor.PerformanceMonitor: 
- id: GUPS.EasyPerformanceMonitor.Editor
  commentId: N:GUPS.EasyPerformanceMonitor.Editor
  language: CSharp
  name:
    CSharp: GUPS.EasyPerformanceMonitor.Editor
    VB: GUPS.EasyPerformanceMonitor.Editor
  nameWithType:
    CSharp: GUPS.EasyPerformanceMonitor.Editor
    VB: GUPS.EasyPerformanceMonitor.Editor
  qualifiedName:
    CSharp: GUPS.EasyPerformanceMonitor.Editor
    VB: GUPS.EasyPerformanceMonitor.Editor
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor
    language: CSharp
    name:
      CSharp: PerformanceMonitorEditor
      VB: PerformanceMonitorEditor
    nameWithType:
      CSharp: PerformanceMonitorEditor
      VB: PerformanceMonitorEditor
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor
      VB: GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Editor
    source:
      id: PerformanceMonitorEditor
      path: ''
      startLine: 1176
    summary: "\nCustom editor for the performance monitor.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PerformanceMonitorEditor : UnityEditor.Editor'
        VB: >-
          Public Class PerformanceMonitorEditor

              Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor.OnInspectorGUI
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: PerformanceMonitorEditor.OnInspectorGUI()
        VB: PerformanceMonitorEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor.OnInspectorGUI()
        VB: GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 1195
      summary: "\nOverride of the default inspector GUI to provide a custom interface for configuring the performance monitor.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor
    language: CSharp
    name:
      CSharp: PerformanceProviderEditor
      VB: PerformanceProviderEditor
    nameWithType:
      CSharp: PerformanceProviderEditor
      VB: PerformanceProviderEditor
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor
      VB: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Editor
    source:
      id: PerformanceProviderEditor
      path: ''
      startLine: 1253
    summary: "\nCustom editor for managing and configuring performance providers in the Unity editor.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PerformanceProviderEditor : UnityEditor.Editor'
        VB: >-
          Public Class PerformanceProviderEditor

              Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: PerformanceProviderEditor.OnEnable()
        VB: PerformanceProviderEditor.OnEnable()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable()
        VB: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnEnable
        path: ''
        startLine: 1266
      summary: "\nCalled when the editor is enabled, initializing serialized properties.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnEnable()
          VB: Protected Overridable Sub OnEnable
      overload: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: PerformanceProviderEditor.OnInspectorGUI()
        VB: PerformanceProviderEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI()
        VB: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 1280
      summary: "\nOverride of the default inspector GUI to provide a custom interface for configuring performance providers.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor
    language: CSharp
    name:
      CSharp: GameObjectTagCountProviderEditor
      VB: GameObjectTagCountProviderEditor
    nameWithType:
      CSharp: GameObjectTagCountProviderEditor
      VB: GameObjectTagCountProviderEditor
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor
      VB: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Editor
    source:
      id: GameObjectTagCountProviderEditor
      path: ''
      startLine: 1351
    summary: "\nCustom editor for configuring and inspecting GameObjectTagCountProvider instances in the Unity Editor.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor\" data-throw-if-not-resolved=\"false\"></xref> class provides a custom interface within the Unity Editor\nfor configuring and inspecting <see cref=\"!:GameObjectTagCountProvider\"></see> instances. It extends the functionality of\nthe base <xref href=\"GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor\" data-throw-if-not-resolved=\"false\"></xref> and introduces specific settings related to tracking the count of\nGameObjects with a specified tag in the scene.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GameObjectTagCountProviderEditor : PerformanceProviderEditor'
        VB: >-
          Public Class GameObjectTagCountProviderEditor

              Inherits PerformanceProviderEditor
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnEnable
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: GameObjectTagCountProviderEditor.OnEnable()
        VB: GameObjectTagCountProviderEditor.OnEnable()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnEnable()
        VB: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnEnable
        path: ''
        startLine: 1362
      summary: "\nCalled when the editor is enabled, initializing serialized properties.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnEnable*
      overridden: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnInspectorGUI
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: GameObjectTagCountProviderEditor.OnInspectorGUI()
        VB: GameObjectTagCountProviderEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnInspectorGUI()
        VB: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 1374
      summary: "\nOverride of the default inspector GUI to provide a custom interface for configuring performance providers.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnInspectorGUI*
      overridden: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    references:
      GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor: 
      GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor: 
  - id: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor
    language: CSharp
    name:
      CSharp: UnityProfilerProviderEditor
      VB: UnityProfilerProviderEditor
    nameWithType:
      CSharp: UnityProfilerProviderEditor
      VB: UnityProfilerProviderEditor
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor
      VB: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Editor
    source:
      id: UnityProfilerProviderEditor
      path: ''
      startLine: 1421
    syntax:
      content:
        CSharp: 'public class UnityProfilerProviderEditor : PerformanceProviderEditor'
        VB: >-
          Public Class UnityProfilerProviderEditor

              Inherits PerformanceProviderEditor
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnEnable
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: UnityProfilerProviderEditor.OnEnable()
        VB: UnityProfilerProviderEditor.OnEnable()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnEnable()
        VB: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnEnable
        path: ''
        startLine: 1462
      summary: "\nCalled when the editor is enabled, initializing serialized properties.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnEnable*
      overridden: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnInspectorGUI
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: UnityProfilerProviderEditor.OnInspectorGUI()
        VB: UnityProfilerProviderEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnInspectorGUI()
        VB: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 1500
      summary: "\nOverride of the default inspector GUI to provide a custom interface for configuring performance providers.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnInspectorGUI*
      overridden: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor
    language: CSharp
    name:
      CSharp: BarRendererEditor
      VB: BarRendererEditor
    nameWithType:
      CSharp: BarRendererEditor
      VB: BarRendererEditor
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor
      VB: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Editor
    source:
      id: BarRendererEditor
      path: ''
      startLine: 1602
    summary: "\nCustom editor for inspecting and modifying the BarRenderer component in the Unity editor.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BarRendererEditor : UnityEditor.Editor'
        VB: >-
          Public Class BarRendererEditor

              Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.OnInspectorGUI
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: BarRendererEditor.OnInspectorGUI()
        VB: BarRendererEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.OnInspectorGUI()
        VB: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 1628
      summary: "\nOverrides the default inspector GUI to display custom options for the RatedTextRenderer component.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.GetProvider
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.GetProvider
      language: CSharp
      name:
        CSharp: GetProvider()
        VB: GetProvider()
      nameWithType:
        CSharp: BarRendererEditor.GetProvider()
        VB: BarRendererEditor.GetProvider()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.GetProvider()
        VB: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.GetProvider()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: GetProvider
        path: ''
        startLine: 1699
      summary: "\nGet all performance provider of the target object.\n"
      example: []
      syntax:
        content:
          CSharp: protected IPerformanceProvider[] GetProvider()
          VB: Protected Function GetProvider As IPerformanceProvider()
        return:
          type: GUPS.EasyPerformanceMonitor.IPerformanceProvider[]
          description: An array of performance provider.
      overload: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.GetProvider*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor
    language: CSharp
    name:
      CSharp: ColoredMultiGraphRendererEditor
      VB: ColoredMultiGraphRendererEditor
    nameWithType:
      CSharp: ColoredMultiGraphRendererEditor
      VB: ColoredMultiGraphRendererEditor
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor
      VB: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Editor
    source:
      id: ColoredMultiGraphRendererEditor
      path: ''
      startLine: 1727
    summary: "\nCustom editor for managing and configuring colored multi graph renderers in the Unity editor.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ColoredMultiGraphRendererEditor : GraphRendererEditor'
        VB: >-
          Public Class ColoredMultiGraphRendererEditor

              Inherits GraphRendererEditor
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnEnable
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: ColoredMultiGraphRendererEditor.OnEnable()
        VB: ColoredMultiGraphRendererEditor.OnEnable()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnEnable()
        VB: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnEnable
        path: ''
        startLine: 1738
      summary: "\nCalled when the editor is enabled, initializing serialized properties.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnEnable*
      overridden: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnInspectorGUI
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: ColoredMultiGraphRendererEditor.OnInspectorGUI()
        VB: ColoredMultiGraphRendererEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnInspectorGUI()
        VB: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 1752
      summary: "\nOverride of the default inspector GUI to provide a custom interface for configuring graph renderers.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnInspectorGUI*
      overridden: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor
    language: CSharp
    name:
      CSharp: ColoredSingleGraphRendererEditor
      VB: ColoredSingleGraphRendererEditor
    nameWithType:
      CSharp: ColoredSingleGraphRendererEditor
      VB: ColoredSingleGraphRendererEditor
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor
      VB: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Editor
    source:
      id: ColoredSingleGraphRendererEditor
      path: ''
      startLine: 1827
    summary: "\nCustom editor for managing and configuring colored single graph renderers in the Unity editor.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ColoredSingleGraphRendererEditor : GraphRendererEditor'
        VB: >-
          Public Class ColoredSingleGraphRendererEditor

              Inherits GraphRendererEditor
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnEnable
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: ColoredSingleGraphRendererEditor.OnEnable()
        VB: ColoredSingleGraphRendererEditor.OnEnable()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnEnable()
        VB: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnEnable
        path: ''
        startLine: 1837
      summary: "\nCalled when the editor is enabled, initializing serialized properties.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnEnable*
      overridden: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnInspectorGUI
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: ColoredSingleGraphRendererEditor.OnInspectorGUI()
        VB: ColoredSingleGraphRendererEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnInspectorGUI()
        VB: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 1850
      summary: "\nOverride of the default inspector GUI to provide a custom interface for configuring graph renderers.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnInspectorGUI*
      overridden: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor
    language: CSharp
    name:
      CSharp: GraphRendererEditor
      VB: GraphRendererEditor
    nameWithType:
      CSharp: GraphRendererEditor
      VB: GraphRendererEditor
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor
      VB: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Editor
    source:
      id: GraphRendererEditor
      path: ''
      startLine: 1917
    summary: "\nCustom editor for inspecting and modifying the IGraphRenderer component in the Unity editor.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GraphRendererEditor : UnityEditor.Editor'
        VB: >-
          Public Class GraphRendererEditor

              Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: GraphRendererEditor.OnEnable()
        VB: GraphRendererEditor.OnEnable()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable()
        VB: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnEnable
        path: ''
        startLine: 1932
      summary: "\nCalled when the editor is enabled, initializing serialized properties.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnEnable()
          VB: Protected Overridable Sub OnEnable
      overload: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: GraphRendererEditor.OnInspectorGUI()
        VB: GraphRendererEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI()
        VB: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 1946
      summary: "\nOverride of the default inspector GUI to provide a custom interface for configuring graph renderers.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider
      language: CSharp
      name:
        CSharp: GetProvider()
        VB: GetProvider()
      nameWithType:
        CSharp: GraphRendererEditor.GetProvider()
        VB: GraphRendererEditor.GetProvider()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider()
        VB: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: GetProvider
        path: ''
        startLine: 1981
      summary: "\nGet all performance provider of the target object.\n"
      example: []
      syntax:
        content:
          CSharp: protected IPerformanceProvider[] GetProvider()
          VB: Protected Function GetProvider As IPerformanceProvider()
        return:
          type: GUPS.EasyPerformanceMonitor.IPerformanceProvider[]
          description: An array of performance provider.
      overload: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor
    language: CSharp
    name:
      CSharp: RatedSingleGraphRendererEditor
      VB: RatedSingleGraphRendererEditor
    nameWithType:
      CSharp: RatedSingleGraphRendererEditor
      VB: RatedSingleGraphRendererEditor
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor
      VB: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Editor
    source:
      id: RatedSingleGraphRendererEditor
      path: ''
      startLine: 2010
    summary: "\nCustom editor for managing and configuring rated single graph renderers in the Unity editor.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class RatedSingleGraphRendererEditor : GraphRendererEditor'
        VB: >-
          Public Class RatedSingleGraphRendererEditor

              Inherits GraphRendererEditor
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnEnable
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: RatedSingleGraphRendererEditor.OnEnable()
        VB: RatedSingleGraphRendererEditor.OnEnable()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnEnable()
        VB: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnEnable
        path: ''
        startLine: 2026
      summary: "\nCalled when the editor is enabled, initializing serialized properties.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnEnable*
      overridden: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnInspectorGUI
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: RatedSingleGraphRendererEditor.OnInspectorGUI()
        VB: RatedSingleGraphRendererEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnInspectorGUI()
        VB: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 2043
      summary: "\nOverride of the default inspector GUI to provide a custom interface for configuring graph renderers.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnInspectorGUI*
      overridden: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor
    language: CSharp
    name:
      CSharp: NormalizedTextRendererEditor
      VB: NormalizedTextRendererEditor
    nameWithType:
      CSharp: NormalizedTextRendererEditor
      VB: NormalizedTextRendererEditor
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor
      VB: GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Editor
    source:
      id: NormalizedTextRendererEditor
      path: ''
      startLine: 2155
    summary: "\nCustom editor for inspecting and modifying the RatedTextRenderer component in the Unity editor.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class NormalizedTextRendererEditor : TextRendererEditor'
        VB: >-
          Public Class NormalizedTextRendererEditor

              Inherits TextRendererEditor
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider
    - GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider``1
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor.OnInspectorGUI
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: NormalizedTextRendererEditor.OnInspectorGUI()
        VB: NormalizedTextRendererEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor.OnInspectorGUI()
        VB: GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 2179
      summary: "\nOverrides the default inspector GUI to display custom options for the RatedTextRenderer component.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor
    language: CSharp
    name:
      CSharp: RatedTextRendererEditor
      VB: RatedTextRendererEditor
    nameWithType:
      CSharp: RatedTextRendererEditor
      VB: RatedTextRendererEditor
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor
      VB: GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Editor
    source:
      id: RatedTextRendererEditor
      path: ''
      startLine: 2260
    summary: "\nCustom editor for inspecting and modifying the RatedTextRenderer component in the Unity editor.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class RatedTextRendererEditor : TextRendererEditor'
        VB: >-
          Public Class RatedTextRendererEditor

              Inherits TextRendererEditor
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider
    - GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider``1
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor.OnInspectorGUI
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor.OnInspectorGUI
      language: CSharp
      name:
        CSharp: OnInspectorGUI()
        VB: OnInspectorGUI()
      nameWithType:
        CSharp: RatedTextRendererEditor.OnInspectorGUI()
        VB: RatedTextRendererEditor.OnInspectorGUI()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor.OnInspectorGUI()
        VB: GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor.OnInspectorGUI()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: OnInspectorGUI
        path: ''
        startLine: 2286
      summary: "\nOverrides the default inspector GUI to display custom options for the RatedTextRenderer component.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnInspectorGUI()
          VB: Public Overrides Sub OnInspectorGUI
      overload: GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor.OnInspectorGUI*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor
    language: CSharp
    name:
      CSharp: TextRendererEditor
      VB: TextRendererEditor
    nameWithType:
      CSharp: TextRendererEditor
      VB: TextRendererEditor
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor
      VB: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Editor
    source:
      id: TextRendererEditor
      path: ''
      startLine: 2376
    summary: "\nCustom editor for inspecting and modifying the ITextRenderer component in the Unity editor.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class TextRendererEditor : UnityEditor.Editor'
        VB: >-
          Public Class TextRendererEditor

              Inherits UnityEditor.Editor
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider
      language: CSharp
      name:
        CSharp: GetProvider()
        VB: GetProvider()
      nameWithType:
        CSharp: TextRendererEditor.GetProvider()
        VB: TextRendererEditor.GetProvider()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider()
        VB: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: GetProvider
        path: ''
        startLine: 2383
      summary: "\nGet all provider of the target object.\n"
      example: []
      syntax:
        content:
          CSharp: protected IProvider[] GetProvider()
          VB: Protected Function GetProvider As IProvider()
        return:
          type: GUPS.EasyPerformanceMonitor.IProvider[]
          description: An array of provider.
      overload: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider``1
      commentId: M:GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider``1
      language: CSharp
      name:
        CSharp: GetProvider<TProvider>()
        VB: GetProvider(Of TProvider)()
      nameWithType:
        CSharp: TextRendererEditor.GetProvider<TProvider>()
        VB: TextRendererEditor.GetProvider(Of TProvider)()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider<TProvider>()
        VB: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider(Of TProvider)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Editor
      source:
        id: GetProvider
        path: ''
        startLine: 2400
      summary: "\nGet all provider of the target object.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            protected TProvider[] GetProvider<TProvider>()

                where TProvider : IProvider
          VB: Protected Function GetProvider(Of TProvider As IProvider) As TProvider()
        typeParameters:
        - id: TProvider
          description: The type of the provider.
        return:
          type: '{TProvider}[]'
          description: An array of provider.
      overload: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
- id: GUPS.EasyPerformanceMonitor.Observer
  commentId: N:GUPS.EasyPerformanceMonitor.Observer
  language: CSharp
  name:
    CSharp: GUPS.EasyPerformanceMonitor.Observer
    VB: GUPS.EasyPerformanceMonitor.Observer
  nameWithType:
    CSharp: GUPS.EasyPerformanceMonitor.Observer
    VB: GUPS.EasyPerformanceMonitor.Observer
  qualifiedName:
    CSharp: GUPS.EasyPerformanceMonitor.Observer
    VB: GUPS.EasyPerformanceMonitor.Observer
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData
    commentId: T:GUPS.EasyPerformanceMonitor.Observer.IProvidedData
    language: CSharp
    name:
      CSharp: IProvidedData
      VB: IProvidedData
    nameWithType:
      CSharp: IProvidedData
      VB: IProvidedData
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Observer.IProvidedData
      VB: GUPS.EasyPerformanceMonitor.Observer.IProvidedData
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Observer
    source:
      id: IProvidedData
      path: ''
      startLine: 2505
    summary: "\nBase interface for data provided by an <see cref=\"!:IProvider\"></see> interface.\n"
    example: []
    syntax:
      content:
        CSharp: public interface IProvidedData
        VB: Public Interface IProvidedData
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender
      commentId: P:GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender
      language: CSharp
      name:
        CSharp: Sender
        VB: Sender
      nameWithType:
        CSharp: IProvidedData.Sender
        VB: IProvidedData.Sender
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender
        VB: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Observer
      source:
        id: Sender
        path: ''
        startLine: 2510
      summary: "\nThe sender of the data.\n"
      example: []
      syntax:
        content:
          CSharp: IProvider Sender { get; }
          VB: ReadOnly Property Sender As IProvider
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.IProvider
      overload: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
      commentId: P:GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: IProvidedData.Value
        VB: IProvidedData.Value
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
        VB: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Observer
      source:
        id: Value
        path: ''
        startLine: 2515
      summary: "\nThe value of the data.\n"
      example: []
      syntax:
        content:
          CSharp: object Value { get; }
          VB: ReadOnly Property Value As Object
        parameters: []
        return:
          type: System.Object
      overload: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
  - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1
    commentId: T:GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1
    language: CSharp
    name:
      CSharp: IProvidedData<TValue>
      VB: IProvidedData(Of TValue)
    nameWithType:
      CSharp: IProvidedData<TValue>
      VB: IProvidedData(Of TValue)
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Observer.IProvidedData<TValue>
      VB: GUPS.EasyPerformanceMonitor.Observer.IProvidedData(Of TValue)
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Observer
    source:
      id: IProvidedData
      path: ''
      startLine: 2523
    summary: "\nBase interface for data provided by an <see cref=\"!:IProvider\"></see> interface, extending the <xref href=\"GUPS.EasyPerformanceMonitor.Observer.IProvidedData\" data-throw-if-not-resolved=\"false\"></xref> interface\nwith a generic value property.\n"
    example: []
    syntax:
      content:
        CSharp: 'public interface IProvidedData<out TValue> : IProvidedData'
        VB: >-
          Public Interface IProvidedData(Of Out TValue)

              Inherits IProvidedData
      typeParameters:
      - id: TValue
        description: The type of the value.
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1.Value
      commentId: P:GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: IProvidedData<TValue>.Value
        VB: IProvidedData(Of TValue).Value
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Observer.IProvidedData<TValue>.Value
        VB: GUPS.EasyPerformanceMonitor.Observer.IProvidedData(Of TValue).Value
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Observer
      source:
        id: Value
        path: ''
        startLine: 2528
      summary: "\nThe value of the data.\n"
      example: []
      syntax:
        content:
          CSharp: TValue Value { get; }
          VB: ReadOnly Property Value As TValue
        parameters: []
        return:
          type: '{TValue}'
      overload: GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1.Value*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    references:
      GUPS.EasyPerformanceMonitor.Observer.IProvidedData: 
  - id: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1
    commentId: T:GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1
    language: CSharp
    name:
      CSharp: ProvidedData<TValue>
      VB: ProvidedData(Of TValue)
    nameWithType:
      CSharp: ProvidedData<TValue>
      VB: ProvidedData(Of TValue)
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Observer.ProvidedData<TValue>
      VB: GUPS.EasyPerformanceMonitor.Observer.ProvidedData(Of TValue)
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Observer
    source:
      id: ProvidedData
      path: ''
      startLine: 2539
    summary: "\nSimple struct implementation of data provided by an <see cref=\"!:IProvider\"></see> interface.\n"
    example: []
    syntax:
      content:
        CSharp: 'public struct ProvidedData<TValue> : IProvidedData<TValue>, IProvidedData'
        VB: >-
          Public Structure ProvidedData(Of TValue)

              Implements IProvidedData(Of TValue), IProvidedData
      typeParameters:
      - id: TValue
    implements:
    - GUPS.EasyPerformanceMonitor.Observer.IProvidedData{{TValue}}
    - GUPS.EasyPerformanceMonitor.Observer.IProvidedData
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.Sender
      commentId: P:GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.Sender
      language: CSharp
      name:
        CSharp: Sender
        VB: Sender
      nameWithType:
        CSharp: ProvidedData<TValue>.Sender
        VB: ProvidedData(Of TValue).Sender
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Observer.ProvidedData<TValue>.Sender
        VB: GUPS.EasyPerformanceMonitor.Observer.ProvidedData(Of TValue).Sender
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Observer
      source:
        id: Sender
        path: ''
        startLine: 2544
      summary: "\nThe sender of the data.\n"
      example: []
      syntax:
        content:
          CSharp: public IProvider Sender { readonly get; set; }
          VB: Public Property Sender As IProvider
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.IProvider
      overload: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.Sender*
      implements:
      - GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender
      modifiers:
        CSharp:
        - public
        - readonly get
        - set
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.Value
      commentId: P:GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: ProvidedData<TValue>.Value
        VB: ProvidedData(Of TValue).Value
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Observer.ProvidedData<TValue>.Value
        VB: GUPS.EasyPerformanceMonitor.Observer.ProvidedData(Of TValue).Value
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Observer
      source:
        id: Value
        path: ''
        startLine: 2549
      summary: "\nThe value of the data.\n"
      example: []
      syntax:
        content:
          CSharp: public TValue Value { readonly get; set; }
          VB: Public Property Value As TValue
        parameters: []
        return:
          type: '{TValue}'
      overload: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.Value*
      implements:
      - GUPS.EasyPerformanceMonitor.Observer.IProvidedData{{TValue}}.Value
      modifiers:
        CSharp:
        - public
        - readonly get
        - set
        VB:
        - Public
    - isEii: true
      id: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.GUPS#EasyPerformanceMonitor#Observer#IProvidedData#Value
      commentId: P:GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.GUPS#EasyPerformanceMonitor#Observer#IProvidedData#Value
      language: CSharp
      name:
        CSharp: IProvidedData.Value
        VB: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
      nameWithType:
        CSharp: ProvidedData<TValue>.IProvidedData.Value
        VB: ProvidedData(Of TValue).GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Observer.ProvidedData<TValue>.GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
        VB: GUPS.EasyPerformanceMonitor.Observer.ProvidedData(Of TValue).GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Observer
      source:
        id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
        path: ''
        startLine: 2554
      summary: "\nThe value of the data.\n"
      example: []
      syntax:
        content:
          CSharp: readonly object IProvidedData.Value { get; }
          VB: ReadOnly WriteOnly Property GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value As Object Implements IProvidedData.Value
        parameters: []
        return:
          type: System.Object
      overload: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.GUPS#EasyPerformanceMonitor#Observer#IProvidedData#Value*
      implements:
      - GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
      modifiers:
        CSharp:
        - readonly
        - get
        VB:
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.#ctor(IProvider,`0)
      commentId: M:GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.#ctor(IProvider,`0)
      language: CSharp
      name:
        CSharp: ProvidedData(IProvider, TValue)
        VB: ProvidedData(IProvider, TValue)
      nameWithType:
        CSharp: ProvidedData<TValue>.ProvidedData(IProvider, TValue)
        VB: ProvidedData(Of TValue).ProvidedData(IProvider, TValue)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Observer.ProvidedData<TValue>.ProvidedData(IProvider, TValue)
        VB: GUPS.EasyPerformanceMonitor.Observer.ProvidedData(Of TValue).ProvidedData(IProvider, TValue)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Observer
      source:
        id: .ctor
        path: ''
        startLine: 2561
      summary: "\nInitializes a new instance of the ProvidedData struct.\n"
      example: []
      syntax:
        content:
          CSharp: public ProvidedData(IProvider _Sender, TValue _Value)
          VB: Public Sub New(_Sender As IProvider, _Value As TValue)
        parameters:
        - id: _Sender
          type: GUPS.EasyPerformanceMonitor.IProvider
          description: The provider sender.
        - id: _Value
          type: '{TValue}'
          description: The value of the data.
      overload: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: GUPS.EasyPerformanceMonitor.Platform
  commentId: N:GUPS.EasyPerformanceMonitor.Platform
  language: CSharp
  name:
    CSharp: GUPS.EasyPerformanceMonitor.Platform
    VB: GUPS.EasyPerformanceMonitor.Platform
  nameWithType:
    CSharp: GUPS.EasyPerformanceMonitor.Platform
    VB: GUPS.EasyPerformanceMonitor.Platform
  qualifiedName:
    CSharp: GUPS.EasyPerformanceMonitor.Platform
    VB: GUPS.EasyPerformanceMonitor.Platform
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: GUPS.EasyPerformanceMonitor.Platform.EPlatform
    commentId: T:GUPS.EasyPerformanceMonitor.Platform.EPlatform
    language: CSharp
    name:
      CSharp: EPlatform
      VB: EPlatform
    nameWithType:
      CSharp: EPlatform
      VB: EPlatform
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Platform.EPlatform
      VB: GUPS.EasyPerformanceMonitor.Platform.EPlatform
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Platform
    source:
      id: EPlatform
      path: ''
      startLine: 2962
    summary: "\nRepresents the possible platforms that an application or system can target.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Platform.EPlatform\" data-throw-if-not-resolved=\"false\"></xref> enum is used to categorize different types of platforms,\nfacilitating conditional logic and platform-specific behavior in software development.\n"
    example:
    - "\nThe following example demonstrates how to use the <xref href=\"GUPS.EasyPerformanceMonitor.Platform.EPlatform\" data-throw-if-not-resolved=\"false\"></xref> enum:\n<pre><code>// Check if the current platform is a desktop environment\nif (currentPlatform == EPlatform.Desktop)\n{\n    // Perform desktop-specific operations\n    Console.WriteLine(&quot;Running on a desktop platform.&quot;);\n}</code></pre>\n"
    syntax:
      content:
        CSharp: 'public enum EPlatform : byte'
        VB: Public Enum EPlatform As Byte
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: GUPS.EasyPerformanceMonitor.Platform.EPlatform.Unknown
      commentId: F:GUPS.EasyPerformanceMonitor.Platform.EPlatform.Unknown
      language: CSharp
      name:
        CSharp: Unknown
        VB: Unknown
      nameWithType:
        CSharp: EPlatform.Unknown
        VB: EPlatform.Unknown
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Platform.EPlatform.Unknown
        VB: GUPS.EasyPerformanceMonitor.Platform.EPlatform.Unknown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Platform
      source:
        id: Unknown
        path: ''
        startLine: 2970
      summary: "\nRepresents an unknown or undefined platform.\n"
      remarks: "\nThis value is typically used as a default or fallback when the platform information is not available or cannot be determined.\n"
      example: []
      syntax:
        content:
          CSharp: Unknown = 0
          VB: Unknown = 0
        return:
          type: GUPS.EasyPerformanceMonitor.Platform.EPlatform
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Platform.EPlatform.Desktop
      commentId: F:GUPS.EasyPerformanceMonitor.Platform.EPlatform.Desktop
      language: CSharp
      name:
        CSharp: Desktop
        VB: Desktop
      nameWithType:
        CSharp: EPlatform.Desktop
        VB: EPlatform.Desktop
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Platform.EPlatform.Desktop
        VB: GUPS.EasyPerformanceMonitor.Platform.EPlatform.Desktop
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Platform
      source:
        id: Desktop
        path: ''
        startLine: 2978
      summary: "\nRepresents a desktop platform.\n"
      remarks: "\nDesktop platforms include traditional personal computers and workstations.\n"
      example: []
      syntax:
        content:
          CSharp: Desktop = 1
          VB: Desktop = 1
        return:
          type: GUPS.EasyPerformanceMonitor.Platform.EPlatform
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Platform.EPlatform.Mobile
      commentId: F:GUPS.EasyPerformanceMonitor.Platform.EPlatform.Mobile
      language: CSharp
      name:
        CSharp: Mobile
        VB: Mobile
      nameWithType:
        CSharp: EPlatform.Mobile
        VB: EPlatform.Mobile
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Platform.EPlatform.Mobile
        VB: GUPS.EasyPerformanceMonitor.Platform.EPlatform.Mobile
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Platform
      source:
        id: Mobile
        path: ''
        startLine: 2986
      summary: "\nRepresents a mobile platform.\n"
      remarks: "\nMobile platforms include smartphones, tablets, and other handheld devices.\n"
      example: []
      syntax:
        content:
          CSharp: Mobile = 2
          VB: Mobile = 2
        return:
          type: GUPS.EasyPerformanceMonitor.Platform.EPlatform
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Platform.EPlatform.Console
      commentId: F:GUPS.EasyPerformanceMonitor.Platform.EPlatform.Console
      language: CSharp
      name:
        CSharp: Console
        VB: Console
      nameWithType:
        CSharp: EPlatform.Console
        VB: EPlatform.Console
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Platform.EPlatform.Console
        VB: GUPS.EasyPerformanceMonitor.Platform.EPlatform.Console
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Platform
      source:
        id: Console
        path: ''
        startLine: 2994
      summary: "\nRepresents a console platform.\n"
      remarks: "\nConsole platforms include dedicated gaming consoles and similar devices.\n"
      example: []
      syntax:
        content:
          CSharp: Console = 3
          VB: Console = 3
        return:
          type: GUPS.EasyPerformanceMonitor.Platform.EPlatform
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      GUPS.EasyPerformanceMonitor.Platform.EPlatform: 
  - id: GUPS.EasyPerformanceMonitor.Platform.PlatformHelper
    commentId: T:GUPS.EasyPerformanceMonitor.Platform.PlatformHelper
    language: CSharp
    name:
      CSharp: PlatformHelper
      VB: PlatformHelper
    nameWithType:
      CSharp: PlatformHelper
      VB: PlatformHelper
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Platform.PlatformHelper
      VB: GUPS.EasyPerformanceMonitor.Platform.PlatformHelper
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Platform
    source:
      id: PlatformHelper
      path: ''
      startLine: 3034
    summary: "\nProvides utility methods for retrieving information about the current platform in a cross-platform manner.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Platform.PlatformHelper\" data-throw-if-not-resolved=\"false\"></xref> class includes a method, <xref href=\"GUPS.EasyPerformanceMonitor.Platform.PlatformHelper.GetCurrentPlatform\" data-throw-if-not-resolved=\"false\"></xref>, which returns\nan instance of the <xref href=\"GUPS.EasyPerformanceMonitor.Platform.EPlatform\" data-throw-if-not-resolved=\"false\"></xref> enum based on the runtime platform of the application.\n"
    example:
    - "\nThe following example demonstrates how to use the <xref href=\"GUPS.EasyPerformanceMonitor.Platform.PlatformHelper\" data-throw-if-not-resolved=\"false\"></xref> class to obtain the current platform:\n<pre><code>// Retrieve the current platform\nEPlatform currentPlatform = PlatformHelper.GetCurrentPlatform();\n\n// Perform platform-specific operations\nswitch (currentPlatform)\n{\n    case EPlatform.Desktop:\n        Console.WriteLine(&quot;Running on a desktop platform.&quot;);\n        break;\n    case EPlatform.Mobile:\n        Console.WriteLine(&quot;Running on a mobile platform.&quot;);\n        break;\n    case EPlatform.Console:\n        Console.WriteLine(&quot;Running on a console platform.&quot;);\n        break;\n    case EPlatform.Unknown:\n        Console.WriteLine(&quot;Platform information is unknown.&quot;);\n        break;\n}</code></pre>\n"
    syntax:
      content:
        CSharp: public static class PlatformHelper
        VB: Public Module PlatformHelper
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: GUPS.EasyPerformanceMonitor.Platform.PlatformHelper.GetCurrentPlatform
      commentId: M:GUPS.EasyPerformanceMonitor.Platform.PlatformHelper.GetCurrentPlatform
      language: CSharp
      name:
        CSharp: GetCurrentPlatform()
        VB: GetCurrentPlatform()
      nameWithType:
        CSharp: PlatformHelper.GetCurrentPlatform()
        VB: PlatformHelper.GetCurrentPlatform()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Platform.PlatformHelper.GetCurrentPlatform()
        VB: GUPS.EasyPerformanceMonitor.Platform.PlatformHelper.GetCurrentPlatform()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Platform
      source:
        id: GetCurrentPlatform
        path: ''
        startLine: 3046
      summary: "\nRetrieves the current platform based on the runtime platform of the application.\n"
      remarks: "\nThe method uses the Unity <see cref=\"!:Application.platform\"></see> property to determine the runtime platform,\nand maps it to the corresponding <xref href=\"GUPS.EasyPerformanceMonitor.Platform.EPlatform\" data-throw-if-not-resolved=\"false\"></xref> enum value.\n"
      example: []
      syntax:
        content:
          CSharp: public static EPlatform GetCurrentPlatform()
          VB: Public Shared Function GetCurrentPlatform As EPlatform
        return:
          type: GUPS.EasyPerformanceMonitor.Platform.EPlatform
          description: "\nAn instance of the <xref href=\"GUPS.EasyPerformanceMonitor.Platform.EPlatform\" data-throw-if-not-resolved=\"false\"></xref> enum representing the current platform.\n"
      overload: GUPS.EasyPerformanceMonitor.Platform.PlatformHelper.GetCurrentPlatform*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        GUPS.EasyPerformanceMonitor.Platform.EPlatform: 
    references:
      GUPS.EasyPerformanceMonitor.Platform.PlatformHelper: 
      GUPS.EasyPerformanceMonitor.Platform.PlatformHelper.GetCurrentPlatform: 
      GUPS.EasyPerformanceMonitor.Platform.EPlatform: 
- id: GUPS.EasyPerformanceMonitor.Provider
  commentId: N:GUPS.EasyPerformanceMonitor.Provider
  language: CSharp
  name:
    CSharp: GUPS.EasyPerformanceMonitor.Provider
    VB: GUPS.EasyPerformanceMonitor.Provider
  nameWithType:
    CSharp: GUPS.EasyPerformanceMonitor.Provider
    VB: GUPS.EasyPerformanceMonitor.Provider
  qualifiedName:
    CSharp: GUPS.EasyPerformanceMonitor.Provider
    VB: GUPS.EasyPerformanceMonitor.Provider
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    language: CSharp
    name:
      CSharp: APerformanceProvider
      VB: APerformanceProvider
    nameWithType:
      CSharp: APerformanceProvider
      VB: APerformanceProvider
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
      VB: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: APerformanceProvider
      path: ''
      startLine: 3095
    syntax:
      content:
        CSharp: 'public abstract class APerformanceProvider : AProvider<PerformanceData>, IPerformanceProvider, IProvider'
        VB: >-
          Public MustInherit Class APerformanceProvider

              Inherits AProvider(Of PerformanceData)

              Implements IPerformanceProvider, IProvider
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    implements:
    - GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    - GUPS.EasyPerformanceMonitor.Provider.IProvider
    - GUPS.EasyPerformanceMonitor.IObservable{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ObserverList
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Name
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsSupported
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsActive
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ProvidedDataType
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Subscribe(IObserver{IProvidedData})
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Dispose
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
      language: CSharp
      name:
        CSharp: IsScaleAble
        VB: IsScaleAble
      nameWithType:
        CSharp: APerformanceProvider.IsScaleAble
        VB: APerformanceProvider.IsScaleAble
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
        VB: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsScaleAble
        path: ''
        startLine: 3108
      summary: "\nGets or sets whether the provided data is scaleable.\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsScaleAble { get; }
          VB: Public ReadOnly Property IsScaleAble As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble*
      implements:
      - GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
      language: CSharp
      name:
        CSharp: ScaleFactor
        VB: ScaleFactor
      nameWithType:
        CSharp: APerformanceProvider.ScaleFactor
        VB: APerformanceProvider.ScaleFactor
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
        VB: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: ScaleFactor
        path: ''
        startLine: 3119
      summary: "\nGets or sets the scale factor for the provided data.\n"
      example: []
      syntax:
        content:
          CSharp: public int ScaleFactor { get; }
          VB: Public ReadOnly Property ScaleFactor As Integer
        parameters: []
        return:
          type: System.Int32
      overload: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor*
      implements:
      - GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
      language: CSharp
      name:
        CSharp: ScaleSuffixes
        VB: ScaleSuffixes
      nameWithType:
        CSharp: APerformanceProvider.ScaleSuffixes
        VB: APerformanceProvider.ScaleSuffixes
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
        VB: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: ScaleSuffixes
        path: ''
        startLine: 3130
      summary: "\nGets or sets the scale suffixes for the provided data.\n"
      example: []
      syntax:
        content:
          CSharp: public String[] ScaleSuffixes { get; }
          VB: Public ReadOnly Property ScaleSuffixes As String()
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String[]
      overload: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes*
      implements:
      - GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
      language: CSharp
      name:
        CSharp: Unit
        VB: Unit
      nameWithType:
        CSharp: APerformanceProvider.Unit
        VB: APerformanceProvider.Unit
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
        VB: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Unit
        path: ''
        startLine: 3135
      summary: "\nGets or sets the default unit of the provided data.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract String Unit { get; }
          VB: Public MustOverride ReadOnly Property Unit As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit*
      implements:
      - GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: APerformanceProvider.Awake()
        VB: APerformanceProvider.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake()
        VB: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Awake
        path: ''
        startLine: 3188
      summary: "\nInitialize the performance provider and check if is supported.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Awake
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: APerformanceProvider.Update()
        VB: APerformanceProvider.Update()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update()
        VB: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Update
        path: ''
        startLine: 3200
      summary: "\nFetch the performance value if the fetch interval is reached.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
      language: CSharp
      name:
        CSharp: GetNextValue()
        VB: GetNextValue()
      nameWithType:
        CSharp: APerformanceProvider.GetNextValue()
        VB: APerformanceProvider.GetNextValue()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue()
        VB: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: GetNextValue
        path: ''
        startLine: 3300
      summary: "\nGets the next value of the performance provider.\n"
      example: []
      syntax:
        content:
          CSharp: protected abstract float GetNextValue()
          VB: Protected MustOverride Function GetNextValue As Single
        return:
          type: System.Single
          description: The next value of the performance provider.
      overload: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
      language: CSharp
      name:
        CSharp: Refresh()
        VB: Refresh()
      nameWithType:
        CSharp: APerformanceProvider.Refresh()
        VB: APerformanceProvider.Refresh()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh()
        VB: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Refresh
        path: ''
        startLine: 3326
      summary: "\nRefresh the performance provider through the Inspector.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Refresh()
          VB: Public Overridable Sub Refresh
      overload: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.AProvider`1
    language: CSharp
    name:
      CSharp: AProvider<TProvidedData>
      VB: AProvider(Of TProvidedData)
    nameWithType:
      CSharp: AProvider<TProvidedData>
      VB: AProvider(Of TProvidedData)
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>
      VB: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: AProvider
      path: ''
      startLine: 3353
    syntax:
      content:
        CSharp: 'public abstract class AProvider<TProvidedData> : MonoBehaviour, IProvider where TProvidedData : IProvidedData'
        VB: >-
          Public MustInherit Class AProvider(Of TProvidedData As IProvidedData)

              Inherits MonoBehaviour

              Implements IProvider
      typeParameters:
      - id: TProvidedData
    inheritance:
    - System.Object
    implements:
    - GUPS.EasyPerformanceMonitor.Provider.IProvider
    - GUPS.EasyPerformanceMonitor.IObservable{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList
      language: CSharp
      name:
        CSharp: ObserverList
        VB: ObserverList
      nameWithType:
        CSharp: AProvider<TProvidedData>.ObserverList
        VB: AProvider(Of TProvidedData).ObserverList
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.ObserverList
        VB: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).ObserverList
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: ObserverList
        path: ''
        startLine: 3361
      summary: "\nList of observers subscribed to this provider.\n"
      example: []
      syntax:
        content:
          CSharp: protected List<IObserver<IProvidedData>> ObserverList { get; }
          VB: Protected ReadOnly Property ObserverList As List(Of IObserver(Of IProvidedData))
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.List{IObserver{IProvidedData}}
      overload: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList*
      modifiers:
        CSharp:
        - protected
        - get
        VB:
        - Protected
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: AProvider<TProvidedData>.Name
        VB: AProvider(Of TProvidedData).Name
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.Name
        VB: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Name
        path: ''
        startLine: 3366
      summary: "\nGets the name of the provider.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract String Name { get; }
          VB: Public MustOverride ReadOnly Property Name As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name*
      implements:
      - GUPS.EasyPerformanceMonitor.Provider.IProvider.Name
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported
      language: CSharp
      name:
        CSharp: IsSupported
        VB: IsSupported
      nameWithType:
        CSharp: AProvider<TProvidedData>.IsSupported
        VB: AProvider(Of TProvidedData).IsSupported
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.IsSupported
        VB: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).IsSupported
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsSupported
        path: ''
        startLine: 3371
      summary: "\nGets a value indicating whether the provider is supported.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool IsSupported { get; }
          VB: Public MustOverride ReadOnly Property IsSupported As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported*
      implements:
      - GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive
      language: CSharp
      name:
        CSharp: IsActive
        VB: IsActive
      nameWithType:
        CSharp: AProvider<TProvidedData>.IsActive
        VB: AProvider(Of TProvidedData).IsActive
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.IsActive
        VB: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).IsActive
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsActive
        path: ''
        startLine: 3376
      summary: "\nActivate or deactivate the provider, start or stop providing values.\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsActive { get; }
          VB: Public ReadOnly Property IsActive As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive*
      implements:
      - GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType
      language: CSharp
      name:
        CSharp: ProvidedDataType
        VB: ProvidedDataType
      nameWithType:
        CSharp: AProvider<TProvidedData>.ProvidedDataType
        VB: AProvider(Of TProvidedData).ProvidedDataType
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.ProvidedDataType
        VB: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).ProvidedDataType
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: ProvidedDataType
        path: ''
        startLine: 3381
      summary: "\nGet the type of <see cref=\"!:TProvidedData\"></see> provided by the provider.\n"
      example: []
      syntax:
        content:
          CSharp: public Type ProvidedDataType { get; }
          VB: Public ReadOnly Property ProvidedDataType As Type
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.Type
      overload: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType*
      implements:
      - GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: AProvider<TProvidedData>.Awake()
        VB: AProvider(Of TProvidedData).Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.Awake()
        VB: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Awake
        path: ''
        startLine: 3386
      summary: "\nInitialize the provider and check if is supported.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe(IObserver{IProvidedData})
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe(IObserver{IProvidedData})
      language: CSharp
      name:
        CSharp: Subscribe(IObserver<IProvidedData>)
        VB: Subscribe(IObserver(Of IProvidedData))
      nameWithType:
        CSharp: AProvider<TProvidedData>.Subscribe(IObserver<IProvidedData>)
        VB: AProvider(Of TProvidedData).Subscribe(IObserver(Of IProvidedData))
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.Subscribe(IObserver<IProvidedData>)
        VB: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).Subscribe(IObserver(Of IProvidedData))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Subscribe
        path: ''
        startLine: 3400
      summary: "\nSubscribes an observer to receive updates from this provider.\n"
      example: []
      syntax:
        content:
          CSharp: public IDisposable Subscribe(IObserver<IProvidedData> _Observer)
          VB: Public Function Subscribe(_Observer As IObserver(Of IProvidedData)) As IDisposable
        parameters:
        - id: _Observer
          type: GUPS.EasyPerformanceMonitor.IObserver{IProvidedData}
          description: The observer to subscribe.
        return:
          type: GUPS.EasyPerformanceMonitor.IDisposable
          description: An IDisposable for unsubscribing the observer.
      overload: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: AProvider<TProvidedData>.Dispose()
        VB: AProvider(Of TProvidedData).Dispose()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.Dispose()
        VB: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).Dispose()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Dispose
        path: ''
        startLine: 3454
      summary: "\nDisposes the provider and notifies observers that no more values will be provided.\n"
      example: []
      syntax:
        content:
          CSharp: public void Dispose()
          VB: Public Sub Dispose
      overload: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    language: CSharp
    name:
      CSharp: IPerformanceProvider
      VB: IPerformanceProvider
    nameWithType:
      CSharp: IPerformanceProvider
      VB: IPerformanceProvider
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
      VB: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: IPerformanceProvider
      path: ''
      startLine: 3477
    summary: "\nBase interface for a data provider that supplies <xref href=\"GUPS.EasyPerformanceMonitor.Provider.PerformanceData\" data-throw-if-not-resolved=\"false\"></xref> to subscribed observers.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider\" data-throw-if-not-resolved=\"false\"></xref> interface extends <xref href=\"GUPS.EasyPerformanceMonitor.Provider.IProvider\" data-throw-if-not-resolved=\"false\"></xref> to provide additional properties for performance data.\n"
    example: []
    syntax:
      content:
        CSharp: 'public interface IPerformanceProvider : IProvider'
        VB: >-
          Public Interface IPerformanceProvider

              Inherits IProvider
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Provider.IProvider.Name
    - GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported
    - GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive
    - GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble
      language: CSharp
      name:
        CSharp: IsScaleAble
        VB: IsScaleAble
      nameWithType:
        CSharp: IPerformanceProvider.IsScaleAble
        VB: IPerformanceProvider.IsScaleAble
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble
        VB: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsScaleAble
        path: ''
        startLine: 3483
      summary: "\nGets or sets whether the provided data is scaleable.\n"
      example: []
      syntax:
        content:
          CSharp: bool IsScaleAble { get; }
          VB: ReadOnly Property IsScaleAble As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor
      language: CSharp
      name:
        CSharp: ScaleFactor
        VB: ScaleFactor
      nameWithType:
        CSharp: IPerformanceProvider.ScaleFactor
        VB: IPerformanceProvider.ScaleFactor
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor
        VB: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: ScaleFactor
        path: ''
        startLine: 3488
      summary: "\nGets or sets the scale factor for the provided data.\n"
      example: []
      syntax:
        content:
          CSharp: int ScaleFactor { get; }
          VB: ReadOnly Property ScaleFactor As Integer
        parameters: []
        return:
          type: System.Int32
      overload: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes
      language: CSharp
      name:
        CSharp: ScaleSuffixes
        VB: ScaleSuffixes
      nameWithType:
        CSharp: IPerformanceProvider.ScaleSuffixes
        VB: IPerformanceProvider.ScaleSuffixes
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes
        VB: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: ScaleSuffixes
        path: ''
        startLine: 3493
      summary: "\nGets or sets the scale suffixes for the provided data.\n"
      example: []
      syntax:
        content:
          CSharp: String[] ScaleSuffixes { get; }
          VB: ReadOnly Property ScaleSuffixes As String()
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String[]
      overload: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit
      language: CSharp
      name:
        CSharp: Unit
        VB: Unit
      nameWithType:
        CSharp: IPerformanceProvider.Unit
        VB: IPerformanceProvider.Unit
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit
        VB: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Unit
        path: ''
        startLine: 3498
      summary: "\nGets or sets the default unit of the provided data.\n"
      example: []
      syntax:
        content:
          CSharp: String Unit { get; }
          VB: ReadOnly Property Unit As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    references:
      GUPS.EasyPerformanceMonitor.Provider.PerformanceData: 
      GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider: 
      GUPS.EasyPerformanceMonitor.Provider.IProvider: 
  - id: GUPS.EasyPerformanceMonitor.Provider.IProvider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.IProvider
    language: CSharp
    name:
      CSharp: IProvider
      VB: IProvider
    nameWithType:
      CSharp: IProvider
      VB: IProvider
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.IProvider
      VB: GUPS.EasyPerformanceMonitor.Provider.IProvider
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: IProvider
      path: ''
      startLine: 3517
    summary: "\nBase interface for a data provider that supplies <see cref=\"!:IProvidedData\"></see> to subscribed observers.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Provider.IProvider\" data-throw-if-not-resolved=\"false\"></xref> interface is a contract for providers, allowing them to supply <see cref=\"!:IProvidedData\"></see> to subscribed observers. \n"
    example: []
    syntax:
      content:
        CSharp: public interface IProvider
        VB: >-
          Public Interface IProvider

              Inherits IObservable(Of IProvidedData), IDisposable
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.Name
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.IProvider.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: IProvider.Name
        VB: IProvider.Name
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.IProvider.Name
        VB: GUPS.EasyPerformanceMonitor.Provider.IProvider.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Name
        path: ''
        startLine: 3523
      summary: "\nGets the provider name.\n"
      example: []
      syntax:
        content:
          CSharp: String Name { get; }
          VB: ReadOnly Property Name As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Provider.IProvider.Name*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported
      language: CSharp
      name:
        CSharp: IsSupported
        VB: IsSupported
      nameWithType:
        CSharp: IProvider.IsSupported
        VB: IProvider.IsSupported
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported
        VB: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsSupported
        path: ''
        startLine: 3528
      summary: "\nGets whether the provider is supported on the current platform.\n"
      example: []
      syntax:
        content:
          CSharp: bool IsSupported { get; }
          VB: ReadOnly Property IsSupported As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive
      language: CSharp
      name:
        CSharp: IsActive
        VB: IsActive
      nameWithType:
        CSharp: IProvider.IsActive
        VB: IProvider.IsActive
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive
        VB: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsActive
        path: ''
        startLine: 3533
      summary: "\nGets whether the provider is active.\n"
      example: []
      syntax:
        content:
          CSharp: bool IsActive { get; }
          VB: ReadOnly Property IsActive As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType
      language: CSharp
      name:
        CSharp: ProvidedDataType
        VB: ProvidedDataType
      nameWithType:
        CSharp: IProvider.ProvidedDataType
        VB: IProvider.ProvidedDataType
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType
        VB: GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: ProvidedDataType
        path: ''
        startLine: 3538
      summary: "\nGet the type of <see cref=\"!:IProvidedData\"></see> provided by the provider.\n"
      example: []
      syntax:
        content:
          CSharp: Type ProvidedDataType { get; }
          VB: ReadOnly Property ProvidedDataType As Type
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.Type
      overload: GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    references:
      GUPS.EasyPerformanceMonitor.Provider.IProvider: 
  - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider
    language: CSharp
    name:
      CSharp: CpuFrameTimeProvider
      VB: CpuFrameTimeProvider
    nameWithType:
      CSharp: CpuFrameTimeProvider
      VB: CpuFrameTimeProvider
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider
      VB: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: CpuFrameTimeProvider
      path: ''
      startLine: 3562
    summary: "\nFetches the time in milliseconds the CPU needs per frame. Requires a development build or the activation of &apos;Frame Time Stats&apos;.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider\" data-throw-if-not-resolved=\"false\"></xref> class is responsible for retrieving the CPU frame time, which represents the time the\nCPU requires to process each frame in milliseconds. It is designed to work with the Unity FrameTimingManager, and it\nrequires a development build or the activation of &apos;Frame Time Stats&apos; for accurate measurements.\n<br>-> Recommended Desktop frame time - Thresholds above: Warning 22ms (45 fps) Critical 33ms (30 fps)</br>\n<br>-> Recommended Mobile frame time - Thresholds above: Warning 33ms (30 fps) Critical 50ms (20 fps)</br>\n<br>-> Recommended Console frame time - Thresholds above: Warning 33ms (30 fps) Critical 50ms (20 fps)</br>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class CpuFrameTimeProvider : APerformanceProvider, IPerformanceProvider, IProvider'
        VB: >-
          Public Class CpuFrameTimeProvider

              Inherits APerformanceProvider

              Implements IPerformanceProvider, IProvider
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    implements:
    - GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    - GUPS.EasyPerformanceMonitor.Provider.IProvider
    - GUPS.EasyPerformanceMonitor.IObservable{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ObserverList
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsActive
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ProvidedDataType
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Subscribe(IObserver{IProvidedData})
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Dispose
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.CName
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.CName
      language: CSharp
      name:
        CSharp: CName
        VB: CName
      nameWithType:
        CSharp: CpuFrameTimeProvider.CName
        VB: CpuFrameTimeProvider.CName
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.CName
        VB: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.CName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: CName
        path: ''
        startLine: 3567
      summary: "\nThe performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public const String CName = null
          VB: Public Const CName As String = Nothing
        return:
          type: GUPS.EasyPerformanceMonitor.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Name
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: CpuFrameTimeProvider.Name
        VB: CpuFrameTimeProvider.Name
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Name
        VB: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Name
        path: ''
        startLine: 3572
      summary: "\nReturns the performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public override string Name { get; }
          VB: Public Overrides ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Name*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Name
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.IsSupported
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.IsSupported
      language: CSharp
      name:
        CSharp: IsSupported
        VB: IsSupported
      nameWithType:
        CSharp: CpuFrameTimeProvider.IsSupported
        VB: CpuFrameTimeProvider.IsSupported
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.IsSupported
        VB: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.IsSupported
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsSupported
        path: ''
        startLine: 3584
      summary: "\nReturns true if the performance component is supported on the current platform. \nThe Cpu Time component requires the Unity FrameTimingManager to be activated.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsSupported { get; }
          VB: Public Overrides ReadOnly Property IsSupported As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.IsSupported*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsSupported
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Unit
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Unit
      language: CSharp
      name:
        CSharp: Unit
        VB: Unit
      nameWithType:
        CSharp: CpuFrameTimeProvider.Unit
        VB: CpuFrameTimeProvider.Unit
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Unit
        VB: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Unit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Unit
        path: ''
        startLine: 3599
      summary: "\nThe default unit is milliseconds.\n"
      example: []
      syntax:
        content:
          CSharp: public override String Unit { get; }
          VB: Public Overrides ReadOnly Property Unit As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Unit*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: CpuFrameTimeProvider.Awake()
        VB: CpuFrameTimeProvider.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Awake()
        VB: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Awake
        path: ''
        startLine: 3634
      summary: "\nInitialize the performance provider and profiler recorder.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Awake*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.GetNextValue
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.GetNextValue
      language: CSharp
      name:
        CSharp: GetNextValue()
        VB: GetNextValue()
      nameWithType:
        CSharp: CpuFrameTimeProvider.GetNextValue()
        VB: CpuFrameTimeProvider.GetNextValue()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.GetNextValue()
        VB: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.GetNextValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: GetNextValue
        path: ''
        startLine: 3672
      summary: "\nReturn the next gpu frame time value.\n"
      example: []
      syntax:
        content:
          CSharp: protected override float GetNextValue()
          VB: Protected Overrides Function GetNextValue As Single
        return:
          type: System.Single
      overload: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.GetNextValue*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    references:
      GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider: 
  - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.FpsProvider
    language: CSharp
    name:
      CSharp: FpsProvider
      VB: FpsProvider
    nameWithType:
      CSharp: FpsProvider
      VB: FpsProvider
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.FpsProvider
      VB: GUPS.EasyPerformanceMonitor.Provider.FpsProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: FpsProvider
      path: ''
      startLine: 3698
    summary: "\nCalculates the frames per second, independent from the time scale.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Provider.FpsProvider\" data-throw-if-not-resolved=\"false\"></xref> class is responsible for calculating and providing the frames per second (FPS) value, independent\nfrom the time scale. This component is supported on all platforms, and its calculations are based on the inverse of the\nunscaled delta time.\n<br>-> Recommended Desktop FPS - Thresholds above: Good 60 fps Warning 30 fps</br>\n<br>-> Recommended Mobile FPS - Thresholds above: Good 45 fps Warning 30 fps</br>\n<br>-> Recommended Console FPS - Thresholds above: Good 45 fps Warning 30 fps</br>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class FpsProvider : APerformanceProvider, IPerformanceProvider, IProvider'
        VB: >-
          Public Class FpsProvider

              Inherits APerformanceProvider

              Implements IPerformanceProvider, IProvider
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    implements:
    - GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    - GUPS.EasyPerformanceMonitor.Provider.IProvider
    - GUPS.EasyPerformanceMonitor.IObservable{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ObserverList
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsActive
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ProvidedDataType
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Subscribe(IObserver{IProvidedData})
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Dispose
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.CName
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.FpsProvider.CName
      language: CSharp
      name:
        CSharp: CName
        VB: CName
      nameWithType:
        CSharp: FpsProvider.CName
        VB: FpsProvider.CName
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.CName
        VB: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.CName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: CName
        path: ''
        startLine: 3703
      summary: "\nThe performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public const String CName = null
          VB: Public Const CName As String = Nothing
        return:
          type: GUPS.EasyPerformanceMonitor.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Name
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: FpsProvider.Name
        VB: FpsProvider.Name
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Name
        VB: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Name
        path: ''
        startLine: 3708
      summary: "\nReturns the performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public override string Name { get; }
          VB: Public Overrides ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Name*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Name
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.IsSupported
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.FpsProvider.IsSupported
      language: CSharp
      name:
        CSharp: IsSupported
        VB: IsSupported
      nameWithType:
        CSharp: FpsProvider.IsSupported
        VB: FpsProvider.IsSupported
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.IsSupported
        VB: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.IsSupported
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsSupported
        path: ''
        startLine: 3720
      summary: "\nReturns true if the performance component is supported on the current platform.\nThe Fps component is supported on all platforms.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsSupported { get; }
          VB: Public Overrides ReadOnly Property IsSupported As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.IsSupported*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsSupported
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Unit
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Unit
      language: CSharp
      name:
        CSharp: Unit
        VB: Unit
      nameWithType:
        CSharp: FpsProvider.Unit
        VB: FpsProvider.Unit
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Unit
        VB: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Unit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Unit
        path: ''
        startLine: 3731
      summary: "\nThe default unit is frames per second.\n"
      example: []
      syntax:
        content:
          CSharp: public override String Unit { get; }
          VB: Public Overrides ReadOnly Property Unit As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Unit*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Update
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: FpsProvider.Update()
        VB: FpsProvider.Update()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Update()
        VB: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Update
        path: ''
        startLine: 3747
      summary: "\nCalculates the frames per second.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Update()
          VB: Protected Overrides Sub Update
      overload: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Update*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.GetNextValue
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.FpsProvider.GetNextValue
      language: CSharp
      name:
        CSharp: GetNextValue()
        VB: GetNextValue()
      nameWithType:
        CSharp: FpsProvider.GetNextValue()
        VB: FpsProvider.GetNextValue()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.GetNextValue()
        VB: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.GetNextValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: GetNextValue
        path: ''
        startLine: 3760
      summary: "\nReturn the next fps value.\n"
      example: []
      syntax:
        content:
          CSharp: protected override float GetNextValue()
          VB: Protected Overrides Function GetNextValue As Single
        return:
          type: System.Single
          description: ''
      overload: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.GetNextValue*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    references:
      GUPS.EasyPerformanceMonitor.Provider.FpsProvider: 
  - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider
    language: CSharp
    name:
      CSharp: GpuFrameTimeProvider
      VB: GpuFrameTimeProvider
    nameWithType:
      CSharp: GpuFrameTimeProvider
      VB: GpuFrameTimeProvider
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider
      VB: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: GpuFrameTimeProvider
      path: ''
      startLine: 3790
    summary: "\nFetches the time in milliseconds the GPU needs per frame. Requires a development build or the activation of &apos;Frame Time Stats&apos;.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider\" data-throw-if-not-resolved=\"false\"></xref> class is responsible for retrieving the GPU frame time, which represents the time the\nGPU requires to process each frame in milliseconds. It is designed to work with the Unity FrameTimingManager, and it\nrequires a development build or the activation of &apos;Frame Time Stats&apos; for accurate measurements.\n<br>-> Recommended Desktop frame time - Thresholds above: Warning 22ms (45 fps) Critical 33ms (30 fps)</br>\n<br>-> Recommended Mobile frame time - Thresholds above: Warning 33ms (30 fps) Critical 50ms (20 fps)</br>\n<br>-> Recommended Console frame time - Thresholds above: Warning 33ms (30 fps) Critical 50ms (20 fps)</br>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GpuFrameTimeProvider : APerformanceProvider, IPerformanceProvider, IProvider'
        VB: >-
          Public Class GpuFrameTimeProvider

              Inherits APerformanceProvider

              Implements IPerformanceProvider, IProvider
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    implements:
    - GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    - GUPS.EasyPerformanceMonitor.Provider.IProvider
    - GUPS.EasyPerformanceMonitor.IObservable{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ObserverList
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsActive
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ProvidedDataType
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Subscribe(IObserver{IProvidedData})
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Dispose
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.CName
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.CName
      language: CSharp
      name:
        CSharp: CName
        VB: CName
      nameWithType:
        CSharp: GpuFrameTimeProvider.CName
        VB: GpuFrameTimeProvider.CName
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.CName
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.CName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: CName
        path: ''
        startLine: 3795
      summary: "\nThe performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public const String CName = null
          VB: Public Const CName As String = Nothing
        return:
          type: GUPS.EasyPerformanceMonitor.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Name
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: GpuFrameTimeProvider.Name
        VB: GpuFrameTimeProvider.Name
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Name
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Name
        path: ''
        startLine: 3800
      summary: "\nReturns the performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public override string Name { get; }
          VB: Public Overrides ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Name*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Name
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.IsSupported
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.IsSupported
      language: CSharp
      name:
        CSharp: IsSupported
        VB: IsSupported
      nameWithType:
        CSharp: GpuFrameTimeProvider.IsSupported
        VB: GpuFrameTimeProvider.IsSupported
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.IsSupported
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.IsSupported
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsSupported
        path: ''
        startLine: 3812
      summary: "\nReturns true if the performance component is supported on the current platform. \nThe Gpu Time component requires the Unity FrameTimingManager to be activated.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsSupported { get; }
          VB: Public Overrides ReadOnly Property IsSupported As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.IsSupported*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsSupported
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Unit
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Unit
      language: CSharp
      name:
        CSharp: Unit
        VB: Unit
      nameWithType:
        CSharp: GpuFrameTimeProvider.Unit
        VB: GpuFrameTimeProvider.Unit
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Unit
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Unit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Unit
        path: ''
        startLine: 3827
      summary: "\nThe default unit is milliseconds.\n"
      example: []
      syntax:
        content:
          CSharp: public override String Unit { get; }
          VB: Public Overrides ReadOnly Property Unit As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Unit*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: GpuFrameTimeProvider.Awake()
        VB: GpuFrameTimeProvider.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Awake()
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Awake
        path: ''
        startLine: 3869
      summary: "\nInitialize the performance provider, check if is supported and get the active platform.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Awake*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Update
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: GpuFrameTimeProvider.Update()
        VB: GpuFrameTimeProvider.Update()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Update()
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Update
        path: ''
        startLine: 3891
      summary: "\nCalculate the gpu frame time fallback based on the fps.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Update()
          VB: Protected Overrides Sub Update
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Update*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.GetNextValue
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.GetNextValue
      language: CSharp
      name:
        CSharp: GetNextValue()
        VB: GetNextValue()
      nameWithType:
        CSharp: GpuFrameTimeProvider.GetNextValue()
        VB: GpuFrameTimeProvider.GetNextValue()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.GetNextValue()
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.GetNextValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: GetNextValue
        path: ''
        startLine: 3945
      summary: "\nReturn the next gpu frame time value.\n"
      example: []
      syntax:
        content:
          CSharp: protected override float GetNextValue()
          VB: Protected Overrides Function GetNextValue As Single
        return:
          type: System.Single
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.GetNextValue*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    references:
      GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider: 
  - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider
    language: CSharp
    name:
      CSharp: GpuDrawCallsProvider
      VB: GpuDrawCallsProvider
    nameWithType:
      CSharp: GpuDrawCallsProvider
      VB: GpuDrawCallsProvider
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider
      VB: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: GpuDrawCallsProvider
      path: ''
      startLine: 3963
    summary: "\nFetchs the gpu draw calls. \n"
    example: []
    syntax:
      content:
        CSharp: 'public class GpuDrawCallsProvider : APerformanceProvider, IPerformanceProvider, IProvider'
        VB: >-
          Public Class GpuDrawCallsProvider

              Inherits APerformanceProvider

              Implements IPerformanceProvider, IProvider
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    implements:
    - GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    - GUPS.EasyPerformanceMonitor.Provider.IProvider
    - GUPS.EasyPerformanceMonitor.IObservable{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ObserverList
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsActive
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ProvidedDataType
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Subscribe(IObserver{IProvidedData})
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Dispose
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.CName
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.CName
      language: CSharp
      name:
        CSharp: CName
        VB: CName
      nameWithType:
        CSharp: GpuDrawCallsProvider.CName
        VB: GpuDrawCallsProvider.CName
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.CName
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.CName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: CName
        path: ''
        startLine: 3968
      summary: "\nThe performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public const String CName = null
          VB: Public Const CName As String = Nothing
        return:
          type: GUPS.EasyPerformanceMonitor.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Name
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: GpuDrawCallsProvider.Name
        VB: GpuDrawCallsProvider.Name
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Name
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Name
        path: ''
        startLine: 3973
      summary: "\nReturns the performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public override string Name { get; }
          VB: Public Overrides ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Name*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Name
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.IsSupported
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.IsSupported
      language: CSharp
      name:
        CSharp: IsSupported
        VB: IsSupported
      nameWithType:
        CSharp: GpuDrawCallsProvider.IsSupported
        VB: GpuDrawCallsProvider.IsSupported
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.IsSupported
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.IsSupported
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsSupported
        path: ''
        startLine: 3985
      summary: "\nReturns true if the performance component is supported on the current platform.\nThe Gpu Draw Calls component is supported on all platforms.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsSupported { get; }
          VB: Public Overrides ReadOnly Property IsSupported As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.IsSupported*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsSupported
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Unit
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Unit
      language: CSharp
      name:
        CSharp: Unit
        VB: Unit
      nameWithType:
        CSharp: GpuDrawCallsProvider.Unit
        VB: GpuDrawCallsProvider.Unit
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Unit
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Unit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Unit
        path: ''
        startLine: 3997
      summary: "\nHas no default unit.\n"
      example: []
      syntax:
        content:
          CSharp: public override String Unit { get; }
          VB: Public Overrides ReadOnly Property Unit As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Unit*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: GpuDrawCallsProvider.Awake()
        VB: GpuDrawCallsProvider.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Awake()
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Awake
        path: ''
        startLine: 4013
      summary: "\nInitialize the performance provider and the draw calls count recorder.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Awake*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.GetNextValue
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.GetNextValue
      language: CSharp
      name:
        CSharp: GetNextValue()
        VB: GetNextValue()
      nameWithType:
        CSharp: GpuDrawCallsProvider.GetNextValue()
        VB: GpuDrawCallsProvider.GetNextValue()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.GetNextValue()
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.GetNextValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: GetNextValue
        path: ''
        startLine: 4025
      summary: "\nReturn the next gpu frame time value.\n"
      example: []
      syntax:
        content:
          CSharp: protected override float GetNextValue()
          VB: Protected Overrides Function GetNextValue As Single
        return:
          type: System.Single
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.GetNextValue*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
  - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider
    language: CSharp
    name:
      CSharp: GpuTrianglesProvider
      VB: GpuTrianglesProvider
    nameWithType:
      CSharp: GpuTrianglesProvider
      VB: GpuTrianglesProvider
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider
      VB: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: GpuTrianglesProvider
      path: ''
      startLine: 4052
    summary: "\nFetches the rendered and visible triangle count.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider\" data-throw-if-not-resolved=\"false\"></xref> class is responsible for fetching and providing information about the rendered and visible\ntriangle count on the GPU. This component is supported on all platforms and uses the Unity ProfilerRecorder to capture\nthe triangle count data.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GpuTrianglesProvider : APerformanceProvider, IPerformanceProvider, IProvider'
        VB: >-
          Public Class GpuTrianglesProvider

              Inherits APerformanceProvider

              Implements IPerformanceProvider, IProvider
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    implements:
    - GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    - GUPS.EasyPerformanceMonitor.Provider.IProvider
    - GUPS.EasyPerformanceMonitor.IObservable{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ObserverList
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsActive
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ProvidedDataType
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Subscribe(IObserver{IProvidedData})
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Dispose
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.CName
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.CName
      language: CSharp
      name:
        CSharp: CName
        VB: CName
      nameWithType:
        CSharp: GpuTrianglesProvider.CName
        VB: GpuTrianglesProvider.CName
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.CName
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.CName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: CName
        path: ''
        startLine: 4057
      summary: "\nThe performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public const String CName = null
          VB: Public Const CName As String = Nothing
        return:
          type: GUPS.EasyPerformanceMonitor.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Name
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: GpuTrianglesProvider.Name
        VB: GpuTrianglesProvider.Name
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Name
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Name
        path: ''
        startLine: 4062
      summary: "\nReturns the performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public override string Name { get; }
          VB: Public Overrides ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Name*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Name
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.IsSupported
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.IsSupported
      language: CSharp
      name:
        CSharp: IsSupported
        VB: IsSupported
      nameWithType:
        CSharp: GpuTrianglesProvider.IsSupported
        VB: GpuTrianglesProvider.IsSupported
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.IsSupported
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.IsSupported
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsSupported
        path: ''
        startLine: 4074
      summary: "\nReturns true if the performance component is supported on the current platform.\nThe Gpu Triangles Count component is supported on all platforms.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsSupported { get; }
          VB: Public Overrides ReadOnly Property IsSupported As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.IsSupported*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsSupported
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Unit
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Unit
      language: CSharp
      name:
        CSharp: Unit
        VB: Unit
      nameWithType:
        CSharp: GpuTrianglesProvider.Unit
        VB: GpuTrianglesProvider.Unit
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Unit
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Unit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Unit
        path: ''
        startLine: 4085
      summary: "\nHas no default unit.\n"
      example: []
      syntax:
        content:
          CSharp: public override String Unit { get; }
          VB: Public Overrides ReadOnly Property Unit As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Unit*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: GpuTrianglesProvider.Awake()
        VB: GpuTrianglesProvider.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Awake()
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Awake
        path: ''
        startLine: 4101
      summary: "\nInitialize the performance provider and the triangle count recorder.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Awake*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.GetNextValue
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.GetNextValue
      language: CSharp
      name:
        CSharp: GetNextValue()
        VB: GetNextValue()
      nameWithType:
        CSharp: GpuTrianglesProvider.GetNextValue()
        VB: GpuTrianglesProvider.GetNextValue()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.GetNextValue()
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.GetNextValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: GetNextValue
        path: ''
        startLine: 4113
      summary: "\nFetchs the current rendered triangles and adds it to the graph.\n"
      example: []
      syntax:
        content:
          CSharp: protected override float GetNextValue()
          VB: Protected Overrides Function GetNextValue As Single
        return:
          type: System.Single
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.GetNextValue*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    references:
      GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider: 
  - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider
    language: CSharp
    name:
      CSharp: GpuVerticesProvider
      VB: GpuVerticesProvider
    nameWithType:
      CSharp: GpuVerticesProvider
      VB: GpuVerticesProvider
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider
      VB: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: GpuVerticesProvider
      path: ''
      startLine: 4140
    summary: "\nFetches the rendered and visible vertice count.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider\" data-throw-if-not-resolved=\"false\"></xref> class is responsible for fetching and providing information about the rendered and visible\nvertice count on the GPU. This component is supported on all platforms and uses the Unity ProfilerRecorder to capture\nthe triangle count data.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GpuVerticesProvider : APerformanceProvider, IPerformanceProvider, IProvider'
        VB: >-
          Public Class GpuVerticesProvider

              Inherits APerformanceProvider

              Implements IPerformanceProvider, IProvider
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    implements:
    - GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    - GUPS.EasyPerformanceMonitor.Provider.IProvider
    - GUPS.EasyPerformanceMonitor.IObservable{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ObserverList
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsActive
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ProvidedDataType
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Subscribe(IObserver{IProvidedData})
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Dispose
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.CName
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.CName
      language: CSharp
      name:
        CSharp: CName
        VB: CName
      nameWithType:
        CSharp: GpuVerticesProvider.CName
        VB: GpuVerticesProvider.CName
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.CName
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.CName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: CName
        path: ''
        startLine: 4145
      summary: "\nThe performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public const String CName = null
          VB: Public Const CName As String = Nothing
        return:
          type: GUPS.EasyPerformanceMonitor.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Name
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: GpuVerticesProvider.Name
        VB: GpuVerticesProvider.Name
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Name
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Name
        path: ''
        startLine: 4150
      summary: "\nReturns the performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public override string Name { get; }
          VB: Public Overrides ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Name*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Name
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.IsSupported
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.IsSupported
      language: CSharp
      name:
        CSharp: IsSupported
        VB: IsSupported
      nameWithType:
        CSharp: GpuVerticesProvider.IsSupported
        VB: GpuVerticesProvider.IsSupported
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.IsSupported
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.IsSupported
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsSupported
        path: ''
        startLine: 4162
      summary: "\nReturns true if the performance component is supported on the current platform.\nThe Gpu Vertices Count component is supported on all platforms.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsSupported { get; }
          VB: Public Overrides ReadOnly Property IsSupported As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.IsSupported*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsSupported
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Unit
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Unit
      language: CSharp
      name:
        CSharp: Unit
        VB: Unit
      nameWithType:
        CSharp: GpuVerticesProvider.Unit
        VB: GpuVerticesProvider.Unit
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Unit
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Unit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Unit
        path: ''
        startLine: 4173
      summary: "\nHas no default unit.\n"
      example: []
      syntax:
        content:
          CSharp: public override String Unit { get; }
          VB: Public Overrides ReadOnly Property Unit As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Unit*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: GpuVerticesProvider.Awake()
        VB: GpuVerticesProvider.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Awake()
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Awake
        path: ''
        startLine: 4189
      summary: "\nInitialize the performance provider and the vertices count recorder.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Awake*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.GetNextValue
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.GetNextValue
      language: CSharp
      name:
        CSharp: GetNextValue()
        VB: GetNextValue()
      nameWithType:
        CSharp: GpuVerticesProvider.GetNextValue()
        VB: GpuVerticesProvider.GetNextValue()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.GetNextValue()
        VB: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.GetNextValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: GetNextValue
        path: ''
        startLine: 4201
      summary: "\nFetchs the current rendered vertices and adds it to the graph.\n"
      example: []
      syntax:
        content:
          CSharp: protected override float GetNextValue()
          VB: Protected Overrides Function GetNextValue As Single
        return:
          type: System.Single
      overload: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.GetNextValue*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    references:
      GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider: 
  - id: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.MemoryProvider
    language: CSharp
    name:
      CSharp: MemoryProvider
      VB: MemoryProvider
    nameWithType:
      CSharp: MemoryProvider
      VB: MemoryProvider
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider
      VB: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: MemoryProvider
      path: ''
      startLine: 4228
    summary: "\nFetches the allocated memory.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Provider.MemoryProvider\" data-throw-if-not-resolved=\"false\"></xref> class is responsible for fetching and providing information about the allocated memory used by the\napplication. This component is supported on all platforms and uses the System.GC.GetTotalMemory method to calculate\nthe total memory used by the application in bytes.\n<br>-> Recommended Desktop memory - Thresholds above: Warning 8GB Critical 12GB</br>\n<br>-> Recommended Mobile memory - Thresholds above: Warning 200MB Critical 500MB</br>\n<br>-> Recommended Console memory - Thresholds above: Warning 4GB Critical 6GB</br>\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MemoryProvider : APerformanceProvider, IPerformanceProvider, IProvider'
        VB: >-
          Public Class MemoryProvider

              Inherits APerformanceProvider

              Implements IPerformanceProvider, IProvider
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    implements:
    - GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    - GUPS.EasyPerformanceMonitor.Provider.IProvider
    - GUPS.EasyPerformanceMonitor.IObservable{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ObserverList
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsActive
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ProvidedDataType
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Subscribe(IObserver{IProvidedData})
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Dispose
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.CName
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.CName
      language: CSharp
      name:
        CSharp: CName
        VB: CName
      nameWithType:
        CSharp: MemoryProvider.CName
        VB: MemoryProvider.CName
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.CName
        VB: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.CName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: CName
        path: ''
        startLine: 4233
      summary: "\nThe performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public const String CName = null
          VB: Public Const CName As String = Nothing
        return:
          type: GUPS.EasyPerformanceMonitor.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Name
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: MemoryProvider.Name
        VB: MemoryProvider.Name
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Name
        VB: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Name
        path: ''
        startLine: 4238
      summary: "\nReturns the performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public override string Name { get; }
          VB: Public Overrides ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Name*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Name
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.IsSupported
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.IsSupported
      language: CSharp
      name:
        CSharp: IsSupported
        VB: IsSupported
      nameWithType:
        CSharp: MemoryProvider.IsSupported
        VB: MemoryProvider.IsSupported
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.IsSupported
        VB: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.IsSupported
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsSupported
        path: ''
        startLine: 4250
      summary: "\nReturns true if the performance component is supported on the current platform.\nThe Memory component is supported on all platforms.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsSupported { get; }
          VB: Public Overrides ReadOnly Property IsSupported As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.IsSupported*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsSupported
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Unit
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Unit
      language: CSharp
      name:
        CSharp: Unit
        VB: Unit
      nameWithType:
        CSharp: MemoryProvider.Unit
        VB: MemoryProvider.Unit
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Unit
        VB: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Unit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Unit
        path: ''
        startLine: 4261
      summary: "\nThe default unit is bytes.\n"
      example: []
      syntax:
        content:
          CSharp: public override String Unit { get; }
          VB: Public Overrides ReadOnly Property Unit As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Unit*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.GetNextValue
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.GetNextValue
      language: CSharp
      name:
        CSharp: GetNextValue()
        VB: GetNextValue()
      nameWithType:
        CSharp: MemoryProvider.GetNextValue()
        VB: MemoryProvider.GetNextValue()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.GetNextValue()
        VB: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.GetNextValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: GetNextValue
        path: ''
        startLine: 4273
      summary: "\nCalculates the current memory usage and adds it to the graph.\n"
      example: []
      syntax:
        content:
          CSharp: protected override float GetNextValue()
          VB: Protected Overrides Function GetNextValue As Single
        return:
          type: System.Single
          description: ''
      overload: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.GetNextValue*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    references:
      GUPS.EasyPerformanceMonitor.Provider.MemoryProvider: 
  - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider
    language: CSharp
    name:
      CSharp: DownloadSpeedProvider
      VB: DownloadSpeedProvider
    nameWithType:
      CSharp: DownloadSpeedProvider
      VB: DownloadSpeedProvider
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider
      VB: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: DownloadSpeedProvider
      path: ''
      startLine: 4303
    summary: "\nFetches the download speed in bytes per second.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider\" data-throw-if-not-resolved=\"false\"></xref> class is responsible for fetching and providing information about the download speed\nin bytes per second. This component is supported on all platforms, and it uses network interface statistics to calculate\nthe download speed.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class DownloadSpeedProvider : APerformanceProvider, IPerformanceProvider, IProvider'
        VB: >-
          Public Class DownloadSpeedProvider

              Inherits APerformanceProvider

              Implements IPerformanceProvider, IProvider
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    implements:
    - GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    - GUPS.EasyPerformanceMonitor.Provider.IProvider
    - GUPS.EasyPerformanceMonitor.IObservable{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ObserverList
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsActive
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ProvidedDataType
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Subscribe(IObserver{IProvidedData})
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Dispose
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.CName
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.CName
      language: CSharp
      name:
        CSharp: CName
        VB: CName
      nameWithType:
        CSharp: DownloadSpeedProvider.CName
        VB: DownloadSpeedProvider.CName
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.CName
        VB: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.CName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: CName
        path: ''
        startLine: 4308
      summary: "\nThe performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public const String CName = null
          VB: Public Const CName As String = Nothing
        return:
          type: GUPS.EasyPerformanceMonitor.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Name
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: DownloadSpeedProvider.Name
        VB: DownloadSpeedProvider.Name
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Name
        VB: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Name
        path: ''
        startLine: 4313
      summary: "\nReturns the performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public override string Name { get; }
          VB: Public Overrides ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Name*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Name
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.IsSupported
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.IsSupported
      language: CSharp
      name:
        CSharp: IsSupported
        VB: IsSupported
      nameWithType:
        CSharp: DownloadSpeedProvider.IsSupported
        VB: DownloadSpeedProvider.IsSupported
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.IsSupported
        VB: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.IsSupported
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsSupported
        path: ''
        startLine: 4325
      summary: "\nReturns true if the performance component is supported on the current platform.\nThe Download Speed component is supported on all platforms.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsSupported { get; }
          VB: Public Overrides ReadOnly Property IsSupported As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.IsSupported*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsSupported
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Unit
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Unit
      language: CSharp
      name:
        CSharp: Unit
        VB: Unit
      nameWithType:
        CSharp: DownloadSpeedProvider.Unit
        VB: DownloadSpeedProvider.Unit
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Unit
        VB: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Unit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Unit
        path: ''
        startLine: 4336
      summary: "\nThe default unit is bytes.\n"
      example: []
      syntax:
        content:
          CSharp: public override String Unit { get; }
          VB: Public Overrides ReadOnly Property Unit As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Unit*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: DownloadSpeedProvider.Awake()
        VB: DownloadSpeedProvider.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Awake()
        VB: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Awake
        path: ''
        startLine: 4357
      summary: "\nInitialize the performance provider and get the network interfaces statistics.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Awake*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.GetNextValue
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.GetNextValue
      language: CSharp
      name:
        CSharp: GetNextValue()
        VB: GetNextValue()
      nameWithType:
        CSharp: DownloadSpeedProvider.GetNextValue()
        VB: DownloadSpeedProvider.GetNextValue()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.GetNextValue()
        VB: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.GetNextValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: GetNextValue
        path: ''
        startLine: 4473
      summary: "\nCalculates the current download rate and adds it to the graph.\n"
      example: []
      syntax:
        content:
          CSharp: protected override float GetNextValue()
          VB: Protected Overrides Function GetNextValue As Single
        return:
          type: System.Single
          description: ''
      overload: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.GetNextValue*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    references:
      GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider: 
  - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider
    language: CSharp
    name:
      CSharp: UploadSpeedProvider
      VB: UploadSpeedProvider
    nameWithType:
      CSharp: UploadSpeedProvider
      VB: UploadSpeedProvider
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider
      VB: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: UploadSpeedProvider
      path: ''
      startLine: 4500
    summary: "\nFetches the upload speed in bytes per second.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider\" data-throw-if-not-resolved=\"false\"></xref> class is responsible for fetching and providing information about the upload speed\nin bytes per second. This component is supported on all platforms, and it uses network interface statistics to calculate\nthe upload speed.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class UploadSpeedProvider : APerformanceProvider, IPerformanceProvider, IProvider'
        VB: >-
          Public Class UploadSpeedProvider

              Inherits APerformanceProvider

              Implements IPerformanceProvider, IProvider
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    implements:
    - GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    - GUPS.EasyPerformanceMonitor.Provider.IProvider
    - GUPS.EasyPerformanceMonitor.IObservable{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ObserverList
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsActive
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ProvidedDataType
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Subscribe(IObserver{IProvidedData})
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Dispose
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.CName
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.CName
      language: CSharp
      name:
        CSharp: CName
        VB: CName
      nameWithType:
        CSharp: UploadSpeedProvider.CName
        VB: UploadSpeedProvider.CName
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.CName
        VB: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.CName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: CName
        path: ''
        startLine: 4505
      summary: "\nThe performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public const String CName = null
          VB: Public Const CName As String = Nothing
        return:
          type: GUPS.EasyPerformanceMonitor.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Name
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: UploadSpeedProvider.Name
        VB: UploadSpeedProvider.Name
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Name
        VB: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Name
        path: ''
        startLine: 4510
      summary: "\nReturns the performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public override string Name { get; }
          VB: Public Overrides ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Name*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Name
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.IsSupported
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.IsSupported
      language: CSharp
      name:
        CSharp: IsSupported
        VB: IsSupported
      nameWithType:
        CSharp: UploadSpeedProvider.IsSupported
        VB: UploadSpeedProvider.IsSupported
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.IsSupported
        VB: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.IsSupported
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsSupported
        path: ''
        startLine: 4522
      summary: "\nReturns true if the performance component is supported on the current platform.\nThe upload speed component is supported on all platforms.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsSupported { get; }
          VB: Public Overrides ReadOnly Property IsSupported As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.IsSupported*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsSupported
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Unit
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Unit
      language: CSharp
      name:
        CSharp: Unit
        VB: Unit
      nameWithType:
        CSharp: UploadSpeedProvider.Unit
        VB: UploadSpeedProvider.Unit
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Unit
        VB: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Unit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Unit
        path: ''
        startLine: 4533
      summary: "\nThe default unit is bytes.\n"
      example: []
      syntax:
        content:
          CSharp: public override String Unit { get; }
          VB: Public Overrides ReadOnly Property Unit As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Unit*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: UploadSpeedProvider.Awake()
        VB: UploadSpeedProvider.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Awake()
        VB: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Awake
        path: ''
        startLine: 4554
      summary: "\nInitialize the performance provider and get the network interfaces statistics.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Awake*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.GetNextValue
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.GetNextValue
      language: CSharp
      name:
        CSharp: GetNextValue()
        VB: GetNextValue()
      nameWithType:
        CSharp: UploadSpeedProvider.GetNextValue()
        VB: UploadSpeedProvider.GetNextValue()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.GetNextValue()
        VB: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.GetNextValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: GetNextValue
        path: ''
        startLine: 4670
      summary: "\nCalculates the current upload rate and adds it to the graph.\n"
      example: []
      syntax:
        content:
          CSharp: protected override float GetNextValue()
          VB: Protected Overrides Function GetNextValue As Single
        return:
          type: System.Single
          description: ''
      overload: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.GetNextValue*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    references:
      GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider: 
  - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider
    language: CSharp
    name:
      CSharp: GameObjectTagCountProvider
      VB: GameObjectTagCountProvider
    nameWithType:
      CSharp: GameObjectTagCountProvider
      VB: GameObjectTagCountProvider
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider
      VB: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: GameObjectTagCountProvider
      path: ''
      startLine: 4695
    summary: "\nProvides performance metrics related to the count of GameObjects with a specific tag in the scene.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider\" data-throw-if-not-resolved=\"false\"></xref> class inherits from <xref href=\"GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider\" data-throw-if-not-resolved=\"false\"></xref> and focuses on\nmonitoring the count of GameObjects in the scene that have a specified tag. It periodically updates the count and provides\nthis information as a performance metric.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class GameObjectTagCountProvider : APerformanceProvider, IPerformanceProvider, IProvider'
        VB: >-
          Public Class GameObjectTagCountProvider

              Inherits APerformanceProvider

              Implements IPerformanceProvider, IProvider
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    implements:
    - GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    - GUPS.EasyPerformanceMonitor.Provider.IProvider
    - GUPS.EasyPerformanceMonitor.IObservable{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ObserverList
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsActive
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ProvidedDataType
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Subscribe(IObserver{IProvidedData})
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Dispose
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.CName
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.CName
      language: CSharp
      name:
        CSharp: CName
        VB: CName
      nameWithType:
        CSharp: GameObjectTagCountProvider.CName
        VB: GameObjectTagCountProvider.CName
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.CName
        VB: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.CName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: CName
        path: ''
        startLine: 4702
      summary: "\nThe performance component name for GameObject Tag Count.\n"
      example: []
      syntax:
        content:
          CSharp: public const String CName = null
          VB: Public Const CName As String = Nothing
        return:
          type: GUPS.EasyPerformanceMonitor.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Name
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: GameObjectTagCountProvider.Name
        VB: GameObjectTagCountProvider.Name
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Name
        VB: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Name
        path: ''
        startLine: 4707
      summary: "\nGets the performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public override string Name { get; }
          VB: Public Overrides ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Name*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Name
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.IsSupported
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.IsSupported
      language: CSharp
      name:
        CSharp: IsSupported
        VB: IsSupported
      nameWithType:
        CSharp: GameObjectTagCountProvider.IsSupported
        VB: GameObjectTagCountProvider.IsSupported
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.IsSupported
        VB: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.IsSupported
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsSupported
        path: ''
        startLine: 4713
      summary: "\nGets a value indicating whether the performance component is supported on the current platform.\nGameObject Tag Count is supported on all platforms.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsSupported { get; }
          VB: Public Overrides ReadOnly Property IsSupported As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.IsSupported*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsSupported
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Unit
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Unit
      language: CSharp
      name:
        CSharp: Unit
        VB: Unit
      nameWithType:
        CSharp: GameObjectTagCountProvider.Unit
        VB: GameObjectTagCountProvider.Unit
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Unit
        VB: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Unit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Unit
        path: ''
        startLine: 4718
      summary: "\nGets the default unit for GameObject Tag Count, which is an empty string.\n"
      example: []
      syntax:
        content:
          CSharp: public override String Unit { get; }
          VB: Public Overrides ReadOnly Property Unit As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Unit*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Tag
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Tag
      language: CSharp
      name:
        CSharp: Tag
        VB: Tag
      nameWithType:
        CSharp: GameObjectTagCountProvider.Tag
        VB: GameObjectTagCountProvider.Tag
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Tag
        VB: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Tag
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Tag
        path: ''
        startLine: 4724
      summary: "\nThe tag of GameObjects to monitor.\n"
      example: []
      syntax:
        content:
          CSharp: public String Tag
          VB: Public Tag As String
        return:
          type: GUPS.EasyPerformanceMonitor.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: GameObjectTagCountProvider.Awake()
        VB: GameObjectTagCountProvider.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Awake()
        VB: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Awake
        path: ''
        startLine: 4734
      summary: "\nInitializes the GameObjectTagCountProvider and starts periodic updates of GameObject counts.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Awake*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.GetNextValue
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.GetNextValue
      language: CSharp
      name:
        CSharp: GetNextValue()
        VB: GetNextValue()
      nameWithType:
        CSharp: GameObjectTagCountProvider.GetNextValue()
        VB: GameObjectTagCountProvider.GetNextValue()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.GetNextValue()
        VB: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.GetNextValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: GetNextValue
        path: ''
        startLine: 4771
      summary: "\nCalculates the current count of GameObjects with the assigned tag and provides it as the next performance metric value.\n"
      example: []
      syntax:
        content:
          CSharp: protected override float GetNextValue()
          VB: Protected Overrides Function GetNextValue As Single
        return:
          type: System.Single
          description: The current count of GameObjects with the assigned tag.
      overload: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.GetNextValue*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    references:
      GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider: 
      GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider: 
  - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.PerformanceData
    language: CSharp
    name:
      CSharp: PerformanceData
      VB: PerformanceData
    nameWithType:
      CSharp: PerformanceData
      VB: PerformanceData
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.PerformanceData
      VB: GUPS.EasyPerformanceMonitor.Provider.PerformanceData
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: PerformanceData
      path: ''
      startLine: 4790
    summary: "\nPerformance data provided by a performance provider.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Provider.PerformanceData\" data-throw-if-not-resolved=\"false\"></xref> struct encapsulates information about the performance of a system/hardware/software or component.\n"
    example: []
    syntax:
      content:
        CSharp: public struct PerformanceData
        VB: Public Structure PerformanceData
    implements:
    - GUPS.EasyPerformanceMonitor.IProvidedData{System.Single}
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Sender
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Sender
      language: CSharp
      name:
        CSharp: Sender
        VB: Sender
      nameWithType:
        CSharp: PerformanceData.Sender
        VB: PerformanceData.Sender
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Sender
        VB: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Sender
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Sender
        path: ''
        startLine: 4795
      summary: "\nGets or sets the observed performance provider sender.\n"
      example: []
      syntax:
        content:
          CSharp: public IProvider Sender { readonly get; }
          VB: Public ReadOnly Property Sender As IProvider
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.Provider.IProvider
      overload: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Sender*
      modifiers:
        CSharp:
        - public
        - readonly get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Value
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Value
      language: CSharp
      name:
        CSharp: Value
        VB: Value
      nameWithType:
        CSharp: PerformanceData.Value
        VB: PerformanceData.Value
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Value
        VB: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Value
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Value
        path: ''
        startLine: 4800
      summary: "\nGets or sets the latest performance value.\n"
      example: []
      syntax:
        content:
          CSharp: public float Value { readonly get; }
          VB: Public ReadOnly Property Value As Single
        parameters: []
        return:
          type: System.Single
      overload: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Value*
      modifiers:
        CSharp:
        - public
        - readonly get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MinValue
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MinValue
      language: CSharp
      name:
        CSharp: MinValue
        VB: MinValue
      nameWithType:
        CSharp: PerformanceData.MinValue
        VB: PerformanceData.MinValue
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MinValue
        VB: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MinValue
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: MinValue
        path: ''
        startLine: 4810
      summary: "\nGets or sets the minimum performance value for a fixed range of values.\n"
      example: []
      syntax:
        content:
          CSharp: public float MinValue { readonly get; }
          VB: Public ReadOnly Property MinValue As Single
        parameters: []
        return:
          type: System.Single
      overload: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MinValue*
      modifiers:
        CSharp:
        - public
        - readonly get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MeanValue
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MeanValue
      language: CSharp
      name:
        CSharp: MeanValue
        VB: MeanValue
      nameWithType:
        CSharp: PerformanceData.MeanValue
        VB: PerformanceData.MeanValue
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MeanValue
        VB: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MeanValue
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: MeanValue
        path: ''
        startLine: 4815
      summary: "\nGets or sets the mean performance value for a fixed range of values.\n"
      example: []
      syntax:
        content:
          CSharp: public float MeanValue { readonly get; }
          VB: Public ReadOnly Property MeanValue As Single
        parameters: []
        return:
          type: System.Single
      overload: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MeanValue*
      modifiers:
        CSharp:
        - public
        - readonly get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MaxValue
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MaxValue
      language: CSharp
      name:
        CSharp: MaxValue
        VB: MaxValue
      nameWithType:
        CSharp: PerformanceData.MaxValue
        VB: PerformanceData.MaxValue
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MaxValue
        VB: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MaxValue
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: MaxValue
        path: ''
        startLine: 4820
      summary: "\nGets or sets the maximum performance value for a fixed range of values.\n"
      example: []
      syntax:
        content:
          CSharp: public float MaxValue { readonly get; }
          VB: Public ReadOnly Property MaxValue As Single
        parameters: []
        return:
          type: System.Single
      overload: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MaxValue*
      modifiers:
        CSharp:
        - public
        - readonly get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.ValueCount
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.PerformanceData.ValueCount
      language: CSharp
      name:
        CSharp: ValueCount
        VB: ValueCount
      nameWithType:
        CSharp: PerformanceData.ValueCount
        VB: PerformanceData.ValueCount
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.ValueCount
        VB: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.ValueCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: ValueCount
        path: ''
        startLine: 4825
      summary: "\nGets or sets the number of last values used to calculate the min/mean/max values.\n"
      example: []
      syntax:
        content:
          CSharp: public int ValueCount { readonly get; }
          VB: Public ReadOnly Property ValueCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.ValueCount*
      modifiers:
        CSharp:
        - public
        - readonly get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.#ctor(GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider,System.Single,System.Single,System.Single,System.Single,System.Int32)
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.PerformanceData.#ctor(GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider,System.Single,System.Single,System.Single,System.Single,System.Int32)
      language: CSharp
      name:
        CSharp: PerformanceData(IPerformanceProvider, Single, Single, Single, Single, Int32)
        VB: PerformanceData(IPerformanceProvider, Single, Single, Single, Single, Int32)
      nameWithType:
        CSharp: PerformanceData.PerformanceData(IPerformanceProvider, Single, Single, Single, Single, Int32)
        VB: PerformanceData.PerformanceData(IPerformanceProvider, Single, Single, Single, Single, Int32)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.PerformanceData(GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider, System.Single, System.Single, System.Single, System.Single, System.Int32)
        VB: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.PerformanceData(GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider, System.Single, System.Single, System.Single, System.Single, System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: .ctor
        path: ''
        startLine: 4836
      summary: "\nInitializes a new instance of the PerformanceData struct.\n"
      example: []
      syntax:
        content:
          CSharp: public PerformanceData(IPerformanceProvider _Sender, float _Value, float _MinValue, float _MeanValue, float _MaxValue, int _ValueCount)
          VB: Public Sub New(_Sender As IPerformanceProvider, _Value As Single, _MinValue As Single, _MeanValue As Single, _MaxValue As Single, _ValueCount As Integer)
        parameters:
        - id: _Sender
          type: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
          description: The performance provider sender.
        - id: _Value
          type: System.Single
          description: The latest performance value.
        - id: _MinValue
          type: System.Single
          description: The minimum performance value.
        - id: _MeanValue
          type: System.Single
          description: The mean performance value.
        - id: _MaxValue
          type: System.Single
          description: The maximum performance value.
        - id: _ValueCount
          type: System.Int32
          description: Number of values used to calculate the min/mean/max values.
      overload: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      GUPS.EasyPerformanceMonitor.Provider.PerformanceData: 
  - id: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory
    language: CSharp
    name:
      CSharp: ProfilingCategory
      VB: ProfilingCategory
    nameWithType:
      CSharp: ProfilingCategory
      VB: ProfilingCategory
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory
      VB: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: ProfilingCategory
      path: ''
      startLine: 4872
    summary: "\nRepresents a profiling category used for organizing and tracking performance-related Unity Profiler metrics.\n"
    remarks: "\n<p>\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory\" data-throw-if-not-resolved=\"false\"></xref> class provides a structured way to categorize and manage\nvarious performance metrics. It includes properties to store the category,\nand a list of status items associated with the profiling category.\n</p>\n<p>\nAdditionally, a predefined list of <xref href=\"GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory\" data-throw-if-not-resolved=\"false\"></xref> instances is available\nthrough the <xref href=\"GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.AvailableCategories\" data-throw-if-not-resolved=\"false\"></xref> property, offering a convenient way to access\ncommonly used profiling categories.\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: public class ProfilingCategory
        VB: Public Class ProfilingCategory
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Category
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Category
      language: CSharp
      name:
        CSharp: Category
        VB: Category
      nameWithType:
        CSharp: ProfilingCategory.Category
        VB: ProfilingCategory.Category
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Category
        VB: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Category
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Category
        path: ''
        startLine: 4879
      summary: "\nGets the specific Unity Profiler category to which the profiling belongs.\n"
      example: []
      syntax:
        content:
          CSharp: public String Category { get; }
          VB: Public ReadOnly Property Category As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Category*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Status
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Status
      language: CSharp
      name:
        CSharp: Status
        VB: Status
      nameWithType:
        CSharp: ProfilingCategory.Status
        VB: ProfilingCategory.Status
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Status
        VB: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Status
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Status
        path: ''
        startLine: 4884
      summary: "\nGets the list of status items associated with the Unity Profiler category.\n"
      example: []
      syntax:
        content:
          CSharp: public List<String> Status { get; }
          VB: Public ReadOnly Property Status As List(Of String)
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.List{String}
      overload: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Status*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.#ctor(String,List{String})
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.#ctor(String,List{String})
      language: CSharp
      name:
        CSharp: ProfilingCategory(String, List<String>)
        VB: ProfilingCategory(String, List(Of String))
      nameWithType:
        CSharp: ProfilingCategory.ProfilingCategory(String, List<String>)
        VB: ProfilingCategory.ProfilingCategory(String, List(Of String))
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.ProfilingCategory(String, List<String>)
        VB: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.ProfilingCategory(String, List(Of String))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: .ctor
        path: ''
        startLine: 4891
      summary: "\nInitializes a new instance of the <xref href=\"GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
      example: []
      syntax:
        content:
          CSharp: public ProfilingCategory(String category, List<String> status)
          VB: Public Sub New(category As String, status As List(Of String))
        parameters:
        - id: category
          type: GUPS.EasyPerformanceMonitor.String
          description: The specific Unity Profiler category to which the profiling belongs.
        - id: status
          type: GUPS.EasyPerformanceMonitor.List{String}
          description: The the list of status items associated with the Unity Profiler category.
      overload: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory: 
    - id: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.AvailableCategories
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.AvailableCategories
      language: CSharp
      name:
        CSharp: AvailableCategories
        VB: AvailableCategories
      nameWithType:
        CSharp: ProfilingCategory.AvailableCategories
        VB: ProfilingCategory.AvailableCategories
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.AvailableCategories
        VB: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.AvailableCategories
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: AvailableCategories
        path: ''
        startLine: 4904
      summary: "\nGets a list of predefined <xref href=\"GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory\" data-throw-if-not-resolved=\"false\"></xref> instances representing available profiling categories.\n"
      remarks: "\nThis list includes categories such as &quot;Audio,&quot; &quot;Memory,&quot;, &quot;Physics&quot; and more.\nEach predefined category contains a set of associated status items relevant to its specific Unity Profiler performance metrics.\n"
      example: []
      syntax:
        content:
          CSharp: public static List<ProfilingCategory> AvailableCategories
          VB: Public Shared AvailableCategories As List(Of ProfilingCategory)
        return:
          type: GUPS.EasyPerformanceMonitor.List{GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory: 
    references:
      GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory: 
      GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.AvailableCategories: 
  - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider
    language: CSharp
    name:
      CSharp: UnityProfilerProvider
      VB: UnityProfilerProvider
    nameWithType:
      CSharp: UnityProfilerProvider
      VB: UnityProfilerProvider
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider
      VB: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: UnityProfilerProvider
      path: ''
      startLine: 5096
    syntax:
      content:
        CSharp: 'public class UnityProfilerProvider : APerformanceProvider, IPerformanceProvider, IProvider'
        VB: >-
          Public Class UnityProfilerProvider

              Inherits APerformanceProvider

              Implements IPerformanceProvider, IProvider
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    implements:
    - GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    - GUPS.EasyPerformanceMonitor.Provider.IProvider
    - GUPS.EasyPerformanceMonitor.IObservable{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
    - GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ObserverList
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsActive
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ProvidedDataType
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Subscribe(IObserver{IProvidedData})
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Dispose
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.CName
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.CName
      language: CSharp
      name:
        CSharp: CName
        VB: CName
      nameWithType:
        CSharp: UnityProfilerProvider.CName
        VB: UnityProfilerProvider.CName
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.CName
        VB: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.CName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: CName
        path: ''
        startLine: 5103
      summary: "\nThe performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public const String CName = null
          VB: Public Const CName As String = Nothing
        return:
          type: GUPS.EasyPerformanceMonitor.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Name
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: UnityProfilerProvider.Name
        VB: UnityProfilerProvider.Name
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Name
        VB: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Name
        path: ''
        startLine: 5108
      summary: "\nReturns the performance component name.\n"
      example: []
      syntax:
        content:
          CSharp: public override string Name { get; }
          VB: Public Overrides ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Name*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Name
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.IsSupported
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.IsSupported
      language: CSharp
      name:
        CSharp: IsSupported
        VB: IsSupported
      nameWithType:
        CSharp: UnityProfilerProvider.IsSupported
        VB: UnityProfilerProvider.IsSupported
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.IsSupported
        VB: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.IsSupported
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsSupported
        path: ''
        startLine: 5120
      summary: "\nReturns true if the performance component is supported on the current platform.\nThe Profiler component is supported on all platforms.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsSupported { get; }
          VB: Public Overrides ReadOnly Property IsSupported As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.IsSupported*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsSupported
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Unit
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Unit
      language: CSharp
      name:
        CSharp: Unit
        VB: Unit
      nameWithType:
        CSharp: UnityProfilerProvider.Unit
        VB: UnityProfilerProvider.Unit
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Unit
        VB: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Unit
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Unit
        path: ''
        startLine: 5131
      summary: "\nThe default unit is bytes.\n"
      example: []
      syntax:
        content:
          CSharp: public override String Unit { get; }
          VB: Public Overrides ReadOnly Property Unit As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Unit*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Category
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Category
      language: CSharp
      name:
        CSharp: Category
        VB: Category
      nameWithType:
        CSharp: UnityProfilerProvider.Category
        VB: UnityProfilerProvider.Category
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Category
        VB: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Category
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Category
        path: ''
        startLine: 5143
      summary: "\nThe category of the profiler recorder.\n"
      example: []
      syntax:
        content:
          CSharp: public String Category
          VB: Public Category As String
        return:
          type: GUPS.EasyPerformanceMonitor.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.StatusName
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.StatusName
      language: CSharp
      name:
        CSharp: StatusName
        VB: StatusName
      nameWithType:
        CSharp: UnityProfilerProvider.StatusName
        VB: UnityProfilerProvider.StatusName
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.StatusName
        VB: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.StatusName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: StatusName
        path: ''
        startLine: 5149
      summary: "\nThe name of the status to read from the recorder.\n"
      example: []
      syntax:
        content:
          CSharp: public String StatusName
          VB: Public StatusName As String
        return:
          type: GUPS.EasyPerformanceMonitor.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.IsCustomStatus
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.IsCustomStatus
      language: CSharp
      name:
        CSharp: IsCustomStatus
        VB: IsCustomStatus
      nameWithType:
        CSharp: UnityProfilerProvider.IsCustomStatus
        VB: UnityProfilerProvider.IsCustomStatus
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.IsCustomStatus
        VB: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.IsCustomStatus
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsCustomStatus
        path: ''
        startLine: 5155
      summary: "\nIs a custom user assigned profiler status.\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsCustomStatus
          VB: Public IsCustomStatus As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: UnityProfilerProvider.Awake()
        VB: UnityProfilerProvider.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Awake()
        VB: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Awake
        path: ''
        startLine: 5165
      summary: "\nInitialize the performance provider and profiler recorder.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Awake*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.GetNextValue
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.GetNextValue
      language: CSharp
      name:
        CSharp: GetNextValue()
        VB: GetNextValue()
      nameWithType:
        CSharp: UnityProfilerProvider.GetNextValue()
        VB: UnityProfilerProvider.GetNextValue()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.GetNextValue()
        VB: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.GetNextValue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: GetNextValue
        path: ''
        startLine: 5181
      summary: "\nFind the current profiler value and adds it to the graph.\n"
      example: []
      syntax:
        content:
          CSharp: protected override float GetNextValue()
          VB: Protected Overrides Function GetNextValue As Single
        return:
          type: System.Single
          description: ''
      overload: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.GetNextValue*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Refresh
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Refresh
      language: CSharp
      name:
        CSharp: Refresh()
        VB: Refresh()
      nameWithType:
        CSharp: UnityProfilerProvider.Refresh()
        VB: UnityProfilerProvider.Refresh()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Refresh()
        VB: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Refresh()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Refresh
        path: ''
        startLine: 5193
      summary: "\nRefresh the recorder.\n"
      example: []
      syntax:
        content:
          CSharp: public override void Refresh()
          VB: Public Overrides Sub Refresh
      overload: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Refresh*
      overridden: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider
    language: CSharp
    name:
      CSharp: OperatingSystemProvider
      VB: OperatingSystemProvider
    nameWithType:
      CSharp: OperatingSystemProvider
      VB: OperatingSystemProvider
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider
      VB: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Provider
    source:
      id: OperatingSystemProvider
      path: ''
      startLine: 5230
    syntax:
      content:
        CSharp: 'public class OperatingSystemProvider : AProvider<IProvidedData<String>>, IProvider'
        VB: >-
          Public Class OperatingSystemProvider

              Inherits AProvider(Of IProvidedData(Of String))

              Implements IProvider
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}
    implements:
    - GUPS.EasyPerformanceMonitor.Provider.IProvider
    - GUPS.EasyPerformanceMonitor.IObservable{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.ObserverList
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.IsActive
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.ProvidedDataType
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.Awake
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.Subscribe(IObserver{IProvidedData})
    - GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.Dispose
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.CName
      commentId: F:GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.CName
      language: CSharp
      name:
        CSharp: CName
        VB: CName
      nameWithType:
        CSharp: OperatingSystemProvider.CName
        VB: OperatingSystemProvider.CName
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.CName
        VB: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.CName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: CName
        path: ''
        startLine: 5237
      summary: "\nThe performance component name for the provider.\n"
      example: []
      syntax:
        content:
          CSharp: public const String CName = null
          VB: Public Const CName As String = Nothing
        return:
          type: GUPS.EasyPerformanceMonitor.String
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Name
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: OperatingSystemProvider.Name
        VB: OperatingSystemProvider.Name
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Name
        VB: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Name
        path: ''
        startLine: 5242
      summary: "\nGets the component name.\n"
      example: []
      syntax:
        content:
          CSharp: public override string Name { get; }
          VB: Public Overrides ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Name*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.Name
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.IsSupported
      commentId: P:GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.IsSupported
      language: CSharp
      name:
        CSharp: IsSupported
        VB: IsSupported
      nameWithType:
        CSharp: OperatingSystemProvider.IsSupported
        VB: OperatingSystemProvider.IsSupported
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.IsSupported
        VB: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.IsSupported
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: IsSupported
        path: ''
        startLine: 5248
      summary: "\nGets a value indicating whether the component is supported on the current platform.\nThe OperatingSystemProvider is supported on all platforms.\n"
      example: []
      syntax:
        content:
          CSharp: public override bool IsSupported { get; }
          VB: Public Overrides ReadOnly Property IsSupported As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.IsSupported*
      overridden: GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.IsSupported
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Start
      commentId: M:GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: OperatingSystemProvider.Start()
        VB: OperatingSystemProvider.Start()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Start()
        VB: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Provider
      source:
        id: Start
        path: ''
        startLine: 5253
      summary: "\nIf the provider is active, send the system information to the observers.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
- id: GUPS.EasyPerformanceMonitor.Renderer
  commentId: N:GUPS.EasyPerformanceMonitor.Renderer
  language: CSharp
  name:
    CSharp: GUPS.EasyPerformanceMonitor.Renderer
    VB: GUPS.EasyPerformanceMonitor.Renderer
  nameWithType:
    CSharp: GUPS.EasyPerformanceMonitor.Renderer
    VB: GUPS.EasyPerformanceMonitor.Renderer
  qualifiedName:
    CSharp: GUPS.EasyPerformanceMonitor.Renderer
    VB: GUPS.EasyPerformanceMonitor.Renderer
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    language: CSharp
    name:
      CSharp: IRenderer
      VB: IRenderer
    nameWithType:
      CSharp: IRenderer
      VB: IRenderer
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Renderer.IRenderer
      VB: GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Renderer
    source:
      id: IRenderer
      path: ''
      startLine: 5289
    syntax:
      content:
        CSharp: public interface IRenderer
        VB: >-
          Public Interface IRenderer

              Inherits IObserver(Of IProvidedData), IDisposable
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
      language: CSharp
      name:
        CSharp: Provider
        VB: Provider
      nameWithType:
        CSharp: IRenderer.Provider
        VB: IRenderer.Provider
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
        VB: GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Provider
        path: ''
        startLine: 5294
      summary: "\nGets the list of performance provider associated with the renderer.\n"
      example: []
      syntax:
        content:
          CSharp: List<IProvider> Provider { get; }
          VB: ReadOnly Property Provider As List(Of IProvider)
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.List{IProvider}
      overload: GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
  - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer
    language: CSharp
    name:
      CSharp: BarRenderer
      VB: BarRenderer
    nameWithType:
      CSharp: BarRenderer
      VB: BarRenderer
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer
      VB: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Renderer
    source:
      id: BarRenderer
      path: ''
      startLine: 5319
    summary: "\nImplementation of the IBarRenderer interface for rendering <see cref=\"!:PerformanceData\"></see> as a bar.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Renderer.BarRenderer\" data-throw-if-not-resolved=\"false\"></xref> provides the functionality for rendering <see cref=\"!:PerformanceData\"></see> as a bar with a percentage value.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class BarRenderer : MonoBehaviour, IBarRenderer, IRenderer'
        VB: >-
          Public Class BarRenderer

              Inherits MonoBehaviour

              Implements IBarRenderer, IRenderer
    inheritance:
    - System.Object
    implements:
    - GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    - GUPS.EasyPerformanceMonitor.IObserver{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Provider
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Provider
      language: CSharp
      name:
        CSharp: Provider
        VB: Provider
      nameWithType:
        CSharp: BarRenderer.Provider
        VB: BarRenderer.Provider
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Provider
        VB: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Provider
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Provider
        path: ''
        startLine: 5326
      summary: "\nGets the list of data providers associated with the renderer.\n"
      remarks: This list is populated by finding all components implementing the IProvider interface on this GameObject.
      example: []
      syntax:
        content:
          CSharp: public List<IProvider> Provider { get; }
          VB: Public ReadOnly Property Provider As List(Of IProvider)
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.List{IProvider}
      overload: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Provider*
      implements:
      - GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.uiValuePercentageText
      commentId: F:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.uiValuePercentageText
      language: CSharp
      name:
        CSharp: uiValuePercentageText
        VB: uiValuePercentageText
      nameWithType:
        CSharp: BarRenderer.uiValuePercentageText
        VB: BarRenderer.uiValuePercentageText
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.uiValuePercentageText
        VB: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.uiValuePercentageText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: uiValuePercentageText
        path: ''
        startLine: 5366
      summary: "\nThe text used to display the percentage value of the performance data.\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEngine.UI.Text uiValuePercentageText
          VB: Public uiValuePercentageText As UnityEngine.UI.Text
        return:
          type: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: BarRenderer.Awake()
        VB: BarRenderer.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Awake()
        VB: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Awake
        path: ''
        startLine: 5371
      summary: "\nInitializes the bar renderer, subscribes to data providers.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Start
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: BarRenderer.Start()
        VB: BarRenderer.Start()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Start()
        VB: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Start
        path: ''
        startLine: 5393
      summary: "\nSelects the current thresholds for the active platform.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnNext(PerformanceData)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnNext(PerformanceData)
      language: CSharp
      name:
        CSharp: OnNext(PerformanceData)
        VB: OnNext(PerformanceData)
      nameWithType:
        CSharp: BarRenderer.OnNext(PerformanceData)
        VB: BarRenderer.OnNext(PerformanceData)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnNext(PerformanceData)
        VB: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnNext(PerformanceData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnNext
        path: ''
        startLine: 5426
      summary: "\nCalled when a new performance data value is received.\n"
      example: []
      syntax:
        content:
          CSharp: public void OnNext(PerformanceData _Next)
          VB: Public Sub OnNext(_Next As PerformanceData)
        parameters:
        - id: _Next
          type: GUPS.EasyPerformanceMonitor.PerformanceData
          description: The new performance data received.
      overload: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnNext*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnError(Exception)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnError(Exception)
      language: CSharp
      name:
        CSharp: OnError(Exception)
        VB: OnError(Exception)
      nameWithType:
        CSharp: BarRenderer.OnError(Exception)
        VB: BarRenderer.OnError(Exception)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnError(Exception)
        VB: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnError(Exception)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnError
        path: ''
        startLine: 5462
      summary: "\nCalled when an error is encountered.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void OnError(Exception _Error)
          VB: Public Overridable Sub OnError(_Error As Exception)
        parameters:
        - id: _Error
          type: GUPS.EasyPerformanceMonitor.Exception
          description: The encountered error.
      overload: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnError*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnCompleted
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnCompleted
      language: CSharp
      name:
        CSharp: OnCompleted()
        VB: OnCompleted()
      nameWithType:
        CSharp: BarRenderer.OnCompleted()
        VB: BarRenderer.OnCompleted()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnCompleted()
        VB: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnCompleted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnCompleted
        path: ''
        startLine: 5470
      summary: "\nCalled when data observation is completed.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void OnCompleted()
          VB: Public Overridable Sub OnCompleted
      overload: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnCompleted*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Dispose
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: BarRenderer.Dispose()
        VB: BarRenderer.Dispose()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Dispose()
        VB: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Dispose()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Dispose
        path: ''
        startLine: 5478
      summary: "\nDisposes of the renderer by unsubscribing from all data providers.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Dispose()
          VB: Public Overridable Sub Dispose
      overload: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Dispose*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnDestroy
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: BarRenderer.OnDestroy()
        VB: BarRenderer.OnDestroy()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnDestroy()
        VB: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnDestroy
        path: ''
        startLine: 5490
      summary: "\nCalled when the GameObject is destroyed, unsubscribes from all data providers.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDestroy()
          VB: Protected Overridable Sub OnDestroy
      overload: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnDestroy*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.RefreshBar
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.RefreshBar
      language: CSharp
      name:
        CSharp: RefreshBar()
        VB: RefreshBar()
      nameWithType:
        CSharp: BarRenderer.RefreshBar()
        VB: BarRenderer.RefreshBar()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.RefreshBar()
        VB: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.RefreshBar()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: RefreshBar
        path: ''
        startLine: 5502
      summary: "\nRefresh the bar renderer on editor value changed by the user.\n"
      example: []
      syntax:
        content:
          CSharp: public void RefreshBar()
          VB: Public Sub RefreshBar
      overload: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.RefreshBar*
      implements:
      - GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    references:
      GUPS.EasyPerformanceMonitor.Renderer.BarRenderer: 
  - id: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer
    language: CSharp
    name:
      CSharp: IBarRenderer
      VB: IBarRenderer
    nameWithType:
      CSharp: IBarRenderer
      VB: IBarRenderer
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer
      VB: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Renderer
    source:
      id: IBarRenderer
      path: ''
      startLine: 5538
    summary: "\nRepresents an interface for bar renderers, defining the contract for rendering bar-based information.\n"
    example: []
    syntax:
      content:
        CSharp: 'public interface IBarRenderer : IRenderer'
        VB: >-
          Public Interface IBarRenderer

              Inherits IRenderer
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar
      language: CSharp
      name:
        CSharp: RefreshBar()
        VB: RefreshBar()
      nameWithType:
        CSharp: IBarRenderer.RefreshBar()
        VB: IBarRenderer.RefreshBar()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar()
        VB: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: RefreshBar
        path: ''
        startLine: 5543
      summary: "\nRefresh the bar renderer on editor value changed by the user.\n"
      example: []
      syntax:
        content:
          CSharp: void RefreshBar()
          VB: Sub RefreshBar
      overload: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar*
      modifiers:
        CSharp: []
        VB: []
  - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    language: CSharp
    name:
      CSharp: AGraphRenderer
      VB: AGraphRenderer
    nameWithType:
      CSharp: AGraphRenderer
      VB: AGraphRenderer
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
      VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Renderer
    source:
      id: AGraphRenderer
      path: ''
      startLine: 5572
    summary: "\nAbstract implementation of a graph renderer displaying one or multiple graphs on a Unity UI Image component\nusing data provided by a performance provider on the same GameObject.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer\" data-throw-if-not-resolved=\"false\"></xref> class provides a foundation for rendering performance graphs on a Unity UI Image\ncomponent. It handles the subscription and management of performance providers, initialization of the rendering\ncomponents, and the rendering process itself. This class is meant to be extended for specific graph rendering\nimplementations.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class AGraphRenderer : MonoBehaviour, IGraphRenderer, IRenderer'
        VB: >-
          Public MustInherit Class AGraphRenderer

              Inherits MonoBehaviour

              Implements IGraphRenderer, IRenderer
    inheritance:
    - System.Object
    implements:
    - GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    - GUPS.EasyPerformanceMonitor.IObserver{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
      language: CSharp
      name:
        CSharp: Provider
        VB: Provider
      nameWithType:
        CSharp: AGraphRenderer.Provider
        VB: AGraphRenderer.Provider
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Provider
        path: ''
        startLine: 5579
      summary: "\nGets the list of subscribed performance providers.\n"
      remarks: This list is populated by finding all components implementing the IProvider interface on this GameObject.
      example: []
      syntax:
        content:
          CSharp: public List<IProvider> Provider { get; }
          VB: Public ReadOnly Property Provider As List(Of IProvider)
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.List{IProvider}
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider*
      implements:
      - GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
      language: CSharp
      name:
        CSharp: Target
        VB: Target
      nameWithType:
        CSharp: AGraphRenderer.Target
        VB: AGraphRenderer.Target
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Target
        path: ''
        startLine: 5596
      summary: "\nThe image component used for rendering the graph.\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEngine.UI.Image Target { get; }
          VB: Public ReadOnly Property Target As UnityEngine.UI.Image
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Image
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target*
      implements:
      - GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
      language: CSharp
      name:
        CSharp: GraphShader
        VB: GraphShader
      nameWithType:
        CSharp: AGraphRenderer.GraphShader
        VB: AGraphRenderer.GraphShader
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: GraphShader
        path: ''
        startLine: 5613
      summary: "\nGets the shader used for rendering the graph.\n"
      example: []
      syntax:
        content:
          CSharp: public Shader GraphShader { get; }
          VB: Public ReadOnly Property GraphShader As Shader
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.Shader
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader*
      implements:
      - GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
      language: CSharp
      name:
        CSharp: IsLine
        VB: IsLine
      nameWithType:
        CSharp: AGraphRenderer.IsLine
        VB: AGraphRenderer.IsLine
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: IsLine
        path: ''
        startLine: 5634
      summary: "\nGets a value indicating whether the graph is rendered as a Line or Bar graph.\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsLine { get; }
          VB: Public ReadOnly Property IsLine As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine*
      implements:
      - GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
      language: CSharp
      name:
        CSharp: IsSmooth
        VB: IsSmooth
      nameWithType:
        CSharp: AGraphRenderer.IsSmooth
        VB: AGraphRenderer.IsSmooth
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: IsSmooth
        path: ''
        startLine: 5645
      summary: "\nGets a value indicating whether interpolation is applied between values.\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsSmooth { get; }
          VB: Public ReadOnly Property IsSmooth As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth*
      implements:
      - GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
      language: CSharp
      name:
        CSharp: HasAntiAliasing
        VB: HasAntiAliasing
      nameWithType:
        CSharp: AGraphRenderer.HasAntiAliasing
        VB: AGraphRenderer.HasAntiAliasing
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: HasAntiAliasing
        path: ''
        startLine: 5656
      summary: "\nGets a value indicating whether the graph rendering has anti-aliasing enabled.\n"
      example: []
      syntax:
        content:
          CSharp: public bool HasAntiAliasing { get; }
          VB: Public ReadOnly Property HasAntiAliasing As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing*
      implements:
      - GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValues
      commentId: F:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValues
      language: CSharp
      name:
        CSharp: CMaxGraphValues
        VB: CMaxGraphValues
      nameWithType:
        CSharp: AGraphRenderer.CMaxGraphValues
        VB: AGraphRenderer.CMaxGraphValues
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValues
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValues
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: CMaxGraphValues
        path: ''
        startLine: 5661
      summary: "\nThe maxium number of values that ca be passed to the graph shader.\n"
      example: []
      syntax:
        content:
          CSharp: public const int CMaxGraphValues = 1024
          VB: Public Const CMaxGraphValues As Integer = 1024
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValuesMobile
      commentId: F:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValuesMobile
      language: CSharp
      name:
        CSharp: CMaxGraphValuesMobile
        VB: CMaxGraphValuesMobile
      nameWithType:
        CSharp: AGraphRenderer.CMaxGraphValuesMobile
        VB: AGraphRenderer.CMaxGraphValuesMobile
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValuesMobile
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValuesMobile
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: CMaxGraphValuesMobile
        path: ''
        startLine: 5666
      summary: "\nThe maxium number of values that ca be passed to the mobile graph shader.\n"
      example: []
      syntax:
        content:
          CSharp: public const int CMaxGraphValuesMobile = 512
          VB: Public Const CMaxGraphValuesMobile As Integer = 512
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
      language: CSharp
      name:
        CSharp: GraphValues
        VB: GraphValues
      nameWithType:
        CSharp: AGraphRenderer.GraphValues
        VB: AGraphRenderer.GraphValues
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: GraphValues
        path: ''
        startLine: 5677
      summary: "\nGets the number of values to be rendered by the graph.\n"
      example: []
      syntax:
        content:
          CSharp: public int GraphValues { get; }
          VB: Public ReadOnly Property GraphValues As Integer
        parameters: []
        return:
          type: System.Int32
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues*
      implements:
      - GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.LinePropertyId
      commentId: F:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.LinePropertyId
      language: CSharp
      name:
        CSharp: LinePropertyId
        VB: LinePropertyId
      nameWithType:
        CSharp: AGraphRenderer.LinePropertyId
        VB: AGraphRenderer.LinePropertyId
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.LinePropertyId
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.LinePropertyId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: LinePropertyId
        path: ''
        startLine: 5682
      summary: "\nThe property identifier for indicating whether the graph is rendered as a line in the shader.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly int LinePropertyId
          VB: Public Shared ReadOnly LinePropertyId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.SmoothPropertyId
      commentId: F:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.SmoothPropertyId
      language: CSharp
      name:
        CSharp: SmoothPropertyId
        VB: SmoothPropertyId
      nameWithType:
        CSharp: AGraphRenderer.SmoothPropertyId
        VB: AGraphRenderer.SmoothPropertyId
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.SmoothPropertyId
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.SmoothPropertyId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: SmoothPropertyId
        path: ''
        startLine: 5687
      summary: "\nThe property identifier for indicating whether the graph is rendered with smooth interpolation in the shader.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly int SmoothPropertyId
          VB: Public Shared ReadOnly SmoothPropertyId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.AntiAliasingPropertyId
      commentId: F:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.AntiAliasingPropertyId
      language: CSharp
      name:
        CSharp: AntiAliasingPropertyId
        VB: AntiAliasingPropertyId
      nameWithType:
        CSharp: AGraphRenderer.AntiAliasingPropertyId
        VB: AGraphRenderer.AntiAliasingPropertyId
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.AntiAliasingPropertyId
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.AntiAliasingPropertyId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: AntiAliasingPropertyId
        path: ''
        startLine: 5692
      summary: "\nThe property identifier for indicating whether anti-aliasing is applied to the graph rendering in the shader.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly int AntiAliasingPropertyId
          VB: Public Shared ReadOnly AntiAliasingPropertyId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValuesPropertyId
      commentId: F:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValuesPropertyId
      language: CSharp
      name:
        CSharp: ValuesPropertyId
        VB: ValuesPropertyId
      nameWithType:
        CSharp: AGraphRenderer.ValuesPropertyId
        VB: AGraphRenderer.ValuesPropertyId
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValuesPropertyId
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValuesPropertyId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: ValuesPropertyId
        path: ''
        startLine: 5697
      summary: "\nThe property identifier for passing the array of graph values to the shader.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly int ValuesPropertyId
          VB: Public Shared ReadOnly ValuesPropertyId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValueCountPropertyId
      commentId: F:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValueCountPropertyId
      language: CSharp
      name:
        CSharp: ValueCountPropertyId
        VB: ValueCountPropertyId
      nameWithType:
        CSharp: AGraphRenderer.ValueCountPropertyId
        VB: AGraphRenderer.ValueCountPropertyId
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValueCountPropertyId
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValueCountPropertyId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: ValueCountPropertyId
        path: ''
        startLine: 5702
      summary: "\nThe property identifier for passing the count of graph values to the shader.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly int ValueCountPropertyId
          VB: Public Shared ReadOnly ValueCountPropertyId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: AGraphRenderer.Awake()
        VB: AGraphRenderer.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake()
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Awake
        path: ''
        startLine: 5707
      summary: "\nInitializes the graph renderer, subscribes to performance providers.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: AGraphRenderer.Start()
        VB: AGraphRenderer.Start()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start()
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Start
        path: ''
        startLine: 5729
      summary: "\nInitialize the graph with the desktop or mobile shader. \n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph(Shader)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph(Shader)
      language: CSharp
      name:
        CSharp: InitializeGraph(Shader)
        VB: InitializeGraph(Shader)
      nameWithType:
        CSharp: AGraphRenderer.InitializeGraph(Shader)
        VB: AGraphRenderer.InitializeGraph(Shader)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph(Shader)
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph(Shader)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: InitializeGraph
        path: ''
        startLine: 5739
      summary: "\nInitialize the graph with the desktop or mobile shader.\n"
      example: []
      syntax:
        content:
          CSharp: public void InitializeGraph(Shader _Shader)
          VB: Public Sub InitializeGraph(_Shader As Shader)
        parameters:
        - id: _Shader
          type: GUPS.EasyPerformanceMonitor.Shader
          description: The shader used for rendering the graph.
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph(Shader)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph(Shader)
      language: CSharp
      name:
        CSharp: OnInitializeGraph(Shader)
        VB: OnInitializeGraph(Shader)
      nameWithType:
        CSharp: AGraphRenderer.OnInitializeGraph(Shader)
        VB: AGraphRenderer.OnInitializeGraph(Shader)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph(Shader)
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph(Shader)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnInitializeGraph
        path: ''
        startLine: 5759
      summary: "\nCalled when the graph is initialized.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnInitializeGraph(Shader _Shader)
          VB: Protected Overridable Sub OnInitializeGraph(_Shader As Shader)
        parameters:
        - id: _Shader
          type: GUPS.EasyPerformanceMonitor.Shader
          description: The shader used for rendering the graph.
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph
      language: CSharp
      name:
        CSharp: RefreshGraph()
        VB: RefreshGraph()
      nameWithType:
        CSharp: AGraphRenderer.RefreshGraph()
        VB: AGraphRenderer.RefreshGraph()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph()
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: RefreshGraph
        path: ''
        startLine: 5767
      summary: "\nPass parameter to the graph shader on editor value changed.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void RefreshGraph()
          VB: Public Overridable Sub RefreshGraph
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph*
      implements:
      - GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext(PerformanceData)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext(PerformanceData)
      language: CSharp
      name:
        CSharp: OnNext(PerformanceData)
        VB: OnNext(PerformanceData)
      nameWithType:
        CSharp: AGraphRenderer.OnNext(PerformanceData)
        VB: AGraphRenderer.OnNext(PerformanceData)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext(PerformanceData)
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext(PerformanceData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnNext
        path: ''
        startLine: 5781
      summary: "\nCalled when a new performance data value is received.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void OnNext(PerformanceData _Next)
          VB: Public MustOverride Sub OnNext(_Next As PerformanceData)
        parameters:
        - id: _Next
          type: GUPS.EasyPerformanceMonitor.PerformanceData
          description: The new performance data received.
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError(Exception)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError(Exception)
      language: CSharp
      name:
        CSharp: OnError(Exception)
        VB: OnError(Exception)
      nameWithType:
        CSharp: AGraphRenderer.OnError(Exception)
        VB: AGraphRenderer.OnError(Exception)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError(Exception)
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError(Exception)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnError
        path: ''
        startLine: 5799
      summary: "\nCalled when an error is encountered.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void OnError(Exception _Error)
          VB: Public Overridable Sub OnError(_Error As Exception)
        parameters:
        - id: _Error
          type: GUPS.EasyPerformanceMonitor.Exception
          description: The encountered error.
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted
      language: CSharp
      name:
        CSharp: OnCompleted()
        VB: OnCompleted()
      nameWithType:
        CSharp: AGraphRenderer.OnCompleted()
        VB: AGraphRenderer.OnCompleted()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted()
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnCompleted
        path: ''
        startLine: 5807
      summary: "\nCalled when performance data observation is completed.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void OnCompleted()
          VB: Public Overridable Sub OnCompleted
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: AGraphRenderer.Dispose()
        VB: AGraphRenderer.Dispose()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose()
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Dispose
        path: ''
        startLine: 5815
      summary: "\nDisposes of the renderer by unsubscribing from all performance providers.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Dispose()
          VB: Public Overridable Sub Dispose
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: AGraphRenderer.OnDestroy()
        VB: AGraphRenderer.OnDestroy()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy()
        VB: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnDestroy
        path: ''
        startLine: 5827
      summary: "\nCalled when the GameObject is destroyed, unsubscribes from all performance providers.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDestroy()
          VB: Protected Overridable Sub OnDestroy
      overload: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    references:
      GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer: 
  - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    language: CSharp
    name:
      CSharp: AMultiGraphRenderer
      VB: AMultiGraphRenderer
    nameWithType:
      CSharp: AMultiGraphRenderer
      VB: AMultiGraphRenderer
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
      VB: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Renderer
    source:
      id: AMultiGraphRenderer
      path: ''
      startLine: 5860
    summary: "\nAbstract implementation of a graph renderer displaying multiple graphs on a Unity UI Image component \nusing data provided by a performance provider on the same GameObject.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer\" data-throw-if-not-resolved=\"false\"></xref> class extends the functionality of a basic graph renderer\nto support rendering multiple graphs simultaneously. It provides options for rendering graphs as stacked\nor side by side.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class AMultiGraphRenderer : AGraphRenderer, IGraphRenderer, IRenderer'
        VB: >-
          Public MustInherit Class AMultiGraphRenderer

              Inherits AGraphRenderer

              Implements IGraphRenderer, IRenderer
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    implements:
    - GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    - GUPS.EasyPerformanceMonitor.IObserver{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValues
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValuesMobile
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.LinePropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.SmoothPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.AntiAliasingPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValuesPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValueCountPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph(Shader)
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError(Exception)
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked
      language: CSharp
      name:
        CSharp: IsStacked
        VB: IsStacked
      nameWithType:
        CSharp: AMultiGraphRenderer.IsStacked
        VB: AMultiGraphRenderer.IsStacked
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked
        VB: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: IsStacked
        path: ''
        startLine: 5872
      summary: "\nGets a value indicating whether the graph is rendered as a stacked graph or next to each other.\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsStacked { get; }
          VB: Public ReadOnly Property IsStacked As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages
      language: CSharp
      name:
        CSharp: LegendImages
        VB: LegendImages
      nameWithType:
        CSharp: AMultiGraphRenderer.LegendImages
        VB: AMultiGraphRenderer.LegendImages
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages
        VB: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: LegendImages
        path: ''
        startLine: 5883
      summary: "\nGet a list of Unity UI Images used to display legend colors for each graph in the renderer.\n"
      example: []
      syntax:
        content:
          CSharp: public List<UnityEngine.UI.Image> LegendImages { get; }
          VB: Public ReadOnly Property LegendImages As List(Of UnityEngine.UI.Image)
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.List{UnityEngine.UI.Image}
      overload: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values
      language: CSharp
      name:
        CSharp: Values
        VB: Values
      nameWithType:
        CSharp: AMultiGraphRenderer.Values
        VB: AMultiGraphRenderer.Values
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values
        VB: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Values
        path: ''
        startLine: 5893
      summary: "\nStores the historical values for each performance provider.\n"
      example: []
      syntax:
        content:
          CSharp: protected float[, ] Values { get; }
          VB: Protected ReadOnly Property Values As Single(,)
        parameters: []
        return:
          type: System.Single[,]
      overload: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values*
      modifiers:
        CSharp:
        - protected
        - get
        VB:
        - Protected
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues
      language: CSharp
      name:
        CSharp: MinValues
        VB: MinValues
      nameWithType:
        CSharp: AMultiGraphRenderer.MinValues
        VB: AMultiGraphRenderer.MinValues
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues
        VB: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: MinValues
        path: ''
        startLine: 5903
      summary: "\nGets the historical values for each performance provider.\n"
      example: []
      syntax:
        content:
          CSharp: protected float[] MinValues { get; }
          VB: Protected ReadOnly Property MinValues As Single()
        parameters: []
        return:
          type: System.Single[]
      overload: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues*
      modifiers:
        CSharp:
        - protected
        - get
        VB:
        - Protected
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues
      language: CSharp
      name:
        CSharp: MaxValues
        VB: MaxValues
      nameWithType:
        CSharp: AMultiGraphRenderer.MaxValues
        VB: AMultiGraphRenderer.MaxValues
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues
        VB: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: MaxValues
        path: ''
        startLine: 5913
      summary: "\nGets the historical values for each performance provider.\n"
      example: []
      syntax:
        content:
          CSharp: protected float[] MaxValues { get; }
          VB: Protected ReadOnly Property MaxValues As Single()
        parameters: []
        return:
          type: System.Single[]
      overload: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues*
      modifiers:
        CSharp:
        - protected
        - get
        VB:
        - Protected
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues
      language: CSharp
      name:
        CSharp: MeanValues
        VB: MeanValues
      nameWithType:
        CSharp: AMultiGraphRenderer.MeanValues
        VB: AMultiGraphRenderer.MeanValues
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues
        VB: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: MeanValues
        path: ''
        startLine: 5923
      summary: "\nGets the historical values for each performance provider.\n"
      example: []
      syntax:
        content:
          CSharp: protected float[] MeanValues { get; }
          VB: Protected ReadOnly Property MeanValues As Single()
        parameters: []
        return:
          type: System.Single[]
      overload: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues*
      modifiers:
        CSharp:
        - protected
        - get
        VB:
        - Protected
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.StackedPropertyId
      commentId: F:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.StackedPropertyId
      language: CSharp
      name:
        CSharp: StackedPropertyId
        VB: StackedPropertyId
      nameWithType:
        CSharp: AMultiGraphRenderer.StackedPropertyId
        VB: AMultiGraphRenderer.StackedPropertyId
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.StackedPropertyId
        VB: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.StackedPropertyId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: StackedPropertyId
        path: ''
        startLine: 5928
      summary: "\nThe property identifier for indicating whether the graph is stacked in the shader.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly int StackedPropertyId
          VB: Public Shared ReadOnly StackedPropertyId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: AMultiGraphRenderer.Awake()
        VB: AMultiGraphRenderer.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake()
        VB: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Awake
        path: ''
        startLine: 5933
      summary: "\nInitializes the rated graph renderer, subscribes to performance providers, and sets up initial values.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph(Shader)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph(Shader)
      language: CSharp
      name:
        CSharp: OnInitializeGraph(Shader)
        VB: OnInitializeGraph(Shader)
      nameWithType:
        CSharp: AMultiGraphRenderer.OnInitializeGraph(Shader)
        VB: AMultiGraphRenderer.OnInitializeGraph(Shader)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph(Shader)
        VB: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph(Shader)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnInitializeGraph
        path: ''
        startLine: 5952
      summary: "\n<inheritdoc></inheritdoc>\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnInitializeGraph(Shader _Shader)
          VB: Protected Overrides Sub OnInitializeGraph(_Shader As Shader)
        parameters:
        - id: _Shader
          type: GUPS.EasyPerformanceMonitor.Shader
      overload: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph(Shader)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph
      language: CSharp
      name:
        CSharp: RefreshGraph()
        VB: RefreshGraph()
      nameWithType:
        CSharp: AMultiGraphRenderer.RefreshGraph()
        VB: AMultiGraphRenderer.RefreshGraph()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph()
        VB: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: RefreshGraph
        path: ''
        startLine: 6003
      summary: "\n<inheritdoc></inheritdoc>\n"
      example: []
      syntax:
        content:
          CSharp: public override void RefreshGraph()
          VB: Public Overrides Sub RefreshGraph
      overload: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext(PerformanceData)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext(PerformanceData)
      language: CSharp
      name:
        CSharp: OnNext(PerformanceData)
        VB: OnNext(PerformanceData)
      nameWithType:
        CSharp: AMultiGraphRenderer.OnNext(PerformanceData)
        VB: AMultiGraphRenderer.OnNext(PerformanceData)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext(PerformanceData)
        VB: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext(PerformanceData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnNext
        path: ''
        startLine: 6056
      summary: "\nCalled when a new performance data value is received.\nUpdates the displayed values.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnNext(PerformanceData _Next)
          VB: Public Overrides Sub OnNext(_Next As PerformanceData)
        parameters:
        - id: _Next
          type: GUPS.EasyPerformanceMonitor.PerformanceData
          description: The new performance data received.
      overload: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext(PerformanceData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph
      language: CSharp
      name:
        CSharp: UpdateGraph()
        VB: UpdateGraph()
      nameWithType:
        CSharp: AMultiGraphRenderer.UpdateGraph()
        VB: AMultiGraphRenderer.UpdateGraph()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph()
        VB: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: UpdateGraph
        path: ''
        startLine: 6159
      summary: "\nFlattens and passes the value array to the shader for graph rendering.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void UpdateGraph()
          VB: Protected Overridable Sub UpdateGraph
      overload: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    references:
      GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer: 
  - id: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer
    language: CSharp
    name:
      CSharp: ASingleGraphRenderer
      VB: ASingleGraphRenderer
    nameWithType:
      CSharp: ASingleGraphRenderer
      VB: ASingleGraphRenderer
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer
      VB: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Renderer
    source:
      id: ASingleGraphRenderer
      path: ''
      startLine: 6183
    summary: "\nAbstract implementation of a graph renderer displaying a single graph on a Unity UI Image component\nusing data provided by a performance provider on the same GameObject.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer\" data-throw-if-not-resolved=\"false\"></xref> class extends the functionality of a basic graph renderer\nto support rendering a single graph.\n"
    example: []
    syntax:
      content:
        CSharp: 'public abstract class ASingleGraphRenderer : AGraphRenderer, IGraphRenderer, IRenderer'
        VB: >-
          Public MustInherit Class ASingleGraphRenderer

              Inherits AGraphRenderer

              Implements IGraphRenderer, IRenderer
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    implements:
    - GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    - GUPS.EasyPerformanceMonitor.IObserver{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValues
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValuesMobile
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.LinePropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.SmoothPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.AntiAliasingPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValuesPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValueCountPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph(Shader)
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph(Shader)
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext(PerformanceData)
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError(Exception)
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage
      language: CSharp
      name:
        CSharp: LegendImage
        VB: LegendImage
      nameWithType:
        CSharp: ASingleGraphRenderer.LegendImage
        VB: ASingleGraphRenderer.LegendImage
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage
        VB: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: LegendImage
        path: ''
        startLine: 6195
      summary: "\nGets or sets the Unity UI Image used to display the legend color for the single graph in the renderer.\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEngine.UI.Image LegendImage { get; }
          VB: Public ReadOnly Property LegendImage As UnityEngine.UI.Image
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Image
      overload: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    references:
      GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer: 
  - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    language: CSharp
    name:
      CSharp: IGraphRenderer
      VB: IGraphRenderer
    nameWithType:
      CSharp: IGraphRenderer
      VB: IGraphRenderer
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
      VB: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Renderer
    source:
      id: IGraphRenderer
      path: ''
      startLine: 6213
    summary: "\nRepresents an interface for a graph renderer used to visualize one or multiple graphs on a Unity UI Image component.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer\" data-throw-if-not-resolved=\"false\"></xref> interface defines the properties necessary for configuring and interacting with\na graph renderer component. Implementing classes are expected to provide functionality for rendering graphs on a\nspecified target image, utilizing a specific shader or its mobile variant. Additionally, various rendering\ncharacteristics such as graph type, interpolation, and anti-aliasing settings are exposed through this interface.\n"
    example: []
    syntax:
      content:
        CSharp: 'public interface IGraphRenderer : IRenderer'
        VB: >-
          Public Interface IGraphRenderer

              Inherits IRenderer
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target
      language: CSharp
      name:
        CSharp: Target
        VB: Target
      nameWithType:
        CSharp: IGraphRenderer.Target
        VB: IGraphRenderer.Target
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target
        VB: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Target
        path: ''
        startLine: 6218
      summary: "\nThe image component used for rendering the graph.\n"
      example: []
      syntax:
        content:
          CSharp: UnityEngine.UI.Image Target { get; }
          VB: ReadOnly Property Target As UnityEngine.UI.Image
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Image
      overload: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader
      language: CSharp
      name:
        CSharp: GraphShader
        VB: GraphShader
      nameWithType:
        CSharp: IGraphRenderer.GraphShader
        VB: IGraphRenderer.GraphShader
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader
        VB: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: GraphShader
        path: ''
        startLine: 6223
      summary: "\nGets the shader used for rendering the graph.\n"
      example: []
      syntax:
        content:
          CSharp: Shader GraphShader { get; }
          VB: ReadOnly Property GraphShader As Shader
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.Shader
      overload: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine
      language: CSharp
      name:
        CSharp: IsLine
        VB: IsLine
      nameWithType:
        CSharp: IGraphRenderer.IsLine
        VB: IGraphRenderer.IsLine
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine
        VB: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: IsLine
        path: ''
        startLine: 6228
      summary: "\nGets a value indicating whether the graph is rendered as a Line or Bar graph.\n"
      example: []
      syntax:
        content:
          CSharp: bool IsLine { get; }
          VB: ReadOnly Property IsLine As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth
      language: CSharp
      name:
        CSharp: IsSmooth
        VB: IsSmooth
      nameWithType:
        CSharp: IGraphRenderer.IsSmooth
        VB: IGraphRenderer.IsSmooth
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth
        VB: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: IsSmooth
        path: ''
        startLine: 6233
      summary: "\nGets a value indicating whether interpolation is applied between values.\n"
      example: []
      syntax:
        content:
          CSharp: bool IsSmooth { get; }
          VB: ReadOnly Property IsSmooth As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing
      language: CSharp
      name:
        CSharp: HasAntiAliasing
        VB: HasAntiAliasing
      nameWithType:
        CSharp: IGraphRenderer.HasAntiAliasing
        VB: IGraphRenderer.HasAntiAliasing
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing
        VB: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: HasAntiAliasing
        path: ''
        startLine: 6238
      summary: "\nGets a value indicating whether the graph rendering has anti-aliasing enabled.\n"
      example: []
      syntax:
        content:
          CSharp: bool HasAntiAliasing { get; }
          VB: ReadOnly Property HasAntiAliasing As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues
      language: CSharp
      name:
        CSharp: GraphValues
        VB: GraphValues
      nameWithType:
        CSharp: IGraphRenderer.GraphValues
        VB: IGraphRenderer.GraphValues
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues
        VB: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: GraphValues
        path: ''
        startLine: 6243
      summary: "\nGets the number of graph values associated with the renderer.\n"
      example: []
      syntax:
        content:
          CSharp: int GraphValues { get; }
          VB: ReadOnly Property GraphValues As Integer
        parameters: []
        return:
          type: System.Int32
      overload: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph
      language: CSharp
      name:
        CSharp: RefreshGraph()
        VB: RefreshGraph()
      nameWithType:
        CSharp: IGraphRenderer.RefreshGraph()
        VB: IGraphRenderer.RefreshGraph()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph()
        VB: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: RefreshGraph
        path: ''
        startLine: 6248
      summary: "\nPass parameter to the graph shader on editor value changed by the user.\n"
      example: []
      syntax:
        content:
          CSharp: void RefreshGraph()
          VB: Sub RefreshGraph
      overload: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph*
      modifiers:
        CSharp: []
        VB: []
    references:
      GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer: 
  - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer
    language: CSharp
    name:
      CSharp: ColoredMultiGraphRenderer
      VB: ColoredMultiGraphRenderer
    nameWithType:
      CSharp: ColoredMultiGraphRenderer
      VB: ColoredMultiGraphRenderer
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer
      VB: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Renderer
    source:
      id: ColoredMultiGraphRenderer
      path: ''
      startLine: 6274
    summary: "\nRenders colored multiple graphs (stacked or next to each other) based on performance data received from subscribed\nperformance providers on the same GameObject. The colors of individual graphs are customizable, and the renderer\nautomatically manages the display of legends associated with each graph.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer\" data-throw-if-not-resolved=\"false\"></xref> extends the functionality of <xref href=\"GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer\" data-throw-if-not-resolved=\"false\"></xref> to include\nthe ability to customize the colors of individual graphs. It subscribes to performance providers, dynamically adjusts\nthe rendering for multiple graphs, and updates the display of legend images. The colors for each graph can be set\nthrough the &apos;Colors&apos; property.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ColoredMultiGraphRenderer : AMultiGraphRenderer, IGraphRenderer, IRenderer'
        VB: >-
          Public Class ColoredMultiGraphRenderer

              Inherits AMultiGraphRenderer

              Implements IGraphRenderer, IRenderer
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    implements:
    - GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    - GUPS.EasyPerformanceMonitor.IObserver{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.StackedPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValues
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValuesMobile
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.LinePropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.SmoothPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.AntiAliasingPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValuesPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValueCountPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph(Shader)
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError(Exception)
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors
      language: CSharp
      name:
        CSharp: Colors
        VB: Colors
      nameWithType:
        CSharp: ColoredMultiGraphRenderer.Colors
        VB: ColoredMultiGraphRenderer.Colors
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors
        VB: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Colors
        path: ''
        startLine: 6286
      summary: "\nStores the colors for each graph.\n"
      example: []
      syntax:
        content:
          CSharp: public List<Color> Colors { get; }
          VB: Public ReadOnly Property Colors As List(Of Color)
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.List{Color}
      overload: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphColorsPropertyId
      commentId: F:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphColorsPropertyId
      language: CSharp
      name:
        CSharp: GraphColorsPropertyId
        VB: GraphColorsPropertyId
      nameWithType:
        CSharp: ColoredMultiGraphRenderer.GraphColorsPropertyId
        VB: ColoredMultiGraphRenderer.GraphColorsPropertyId
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphColorsPropertyId
        VB: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphColorsPropertyId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: GraphColorsPropertyId
        path: ''
        startLine: 6291
      summary: "\nThe property identifier for the graph colors in the shader.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly int GraphColorsPropertyId
          VB: Public Shared ReadOnly GraphColorsPropertyId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphCountPropertyId
      commentId: F:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphCountPropertyId
      language: CSharp
      name:
        CSharp: GraphCountPropertyId
        VB: GraphCountPropertyId
      nameWithType:
        CSharp: ColoredMultiGraphRenderer.GraphCountPropertyId
        VB: ColoredMultiGraphRenderer.GraphCountPropertyId
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphCountPropertyId
        VB: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphCountPropertyId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: GraphCountPropertyId
        path: ''
        startLine: 6296
      summary: "\nThe property identifier for the count of graphs in the shader.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly int GraphCountPropertyId
          VB: Public Shared ReadOnly GraphCountPropertyId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph(Shader)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph(Shader)
      language: CSharp
      name:
        CSharp: OnInitializeGraph(Shader)
        VB: OnInitializeGraph(Shader)
      nameWithType:
        CSharp: ColoredMultiGraphRenderer.OnInitializeGraph(Shader)
        VB: ColoredMultiGraphRenderer.OnInitializeGraph(Shader)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph(Shader)
        VB: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph(Shader)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnInitializeGraph
        path: ''
        startLine: 6301
      summary: "\n<inheritdoc></inheritdoc>\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnInitializeGraph(Shader _Shader)
          VB: Protected Overrides Sub OnInitializeGraph(_Shader As Shader)
        parameters:
        - id: _Shader
          type: GUPS.EasyPerformanceMonitor.Shader
      overload: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph(Shader)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph
      language: CSharp
      name:
        CSharp: RefreshGraph()
        VB: RefreshGraph()
      nameWithType:
        CSharp: ColoredMultiGraphRenderer.RefreshGraph()
        VB: ColoredMultiGraphRenderer.RefreshGraph()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph()
        VB: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: RefreshGraph
        path: ''
        startLine: 6314
      summary: "\n<inheritdoc></inheritdoc>\n"
      example: []
      syntax:
        content:
          CSharp: public override void RefreshGraph()
          VB: Public Overrides Sub RefreshGraph
      overload: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext(PerformanceData)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext(PerformanceData)
      language: CSharp
      name:
        CSharp: OnNext(PerformanceData)
        VB: OnNext(PerformanceData)
      nameWithType:
        CSharp: ColoredMultiGraphRenderer.OnNext(PerformanceData)
        VB: ColoredMultiGraphRenderer.OnNext(PerformanceData)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext(PerformanceData)
        VB: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext(PerformanceData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnNext
        path: ''
        startLine: 6328
      summary: "\nCalled when a new performance data value is received.\nUpdates the displayed values and legend images.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnNext(PerformanceData _Next)
          VB: Public Overrides Sub OnNext(_Next As PerformanceData)
        parameters:
        - id: _Next
          type: GUPS.EasyPerformanceMonitor.PerformanceData
          description: The new performance data received.
      overload: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext(PerformanceData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    references:
      GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer: 
      GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer: 
  - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer
    language: CSharp
    name:
      CSharp: ColoredSingleGraphRenderer
      VB: ColoredSingleGraphRenderer
    nameWithType:
      CSharp: ColoredSingleGraphRenderer
      VB: ColoredSingleGraphRenderer
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer
      VB: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Renderer
    source:
      id: ColoredSingleGraphRenderer
      path: ''
      startLine: 6371
    summary: "\nRenders a colored graph based on performance data received from subscribed performance providers on the same GameObject.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer\" data-throw-if-not-resolved=\"false\"></xref> extends the functionality of <xref href=\"GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer\" data-throw-if-not-resolved=\"false\"></xref> to include\ncolor customization for the rendered graph. It subscribes to performance providers, maintains historical values, and\nupdates the displayed graph and legend image accordingly. The graph color can be configured through the &apos;Color&apos; property.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ColoredSingleGraphRenderer : ASingleGraphRenderer, IGraphRenderer, IRenderer'
        VB: >-
          Public Class ColoredSingleGraphRenderer

              Inherits ASingleGraphRenderer

              Implements IGraphRenderer, IRenderer
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer
    implements:
    - GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    - GUPS.EasyPerformanceMonitor.IObserver{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValues
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValuesMobile
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.LinePropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.SmoothPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.AntiAliasingPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValuesPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValueCountPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph(Shader)
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError(Exception)
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Color
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Color
      language: CSharp
      name:
        CSharp: Color
        VB: Color
      nameWithType:
        CSharp: ColoredSingleGraphRenderer.Color
        VB: ColoredSingleGraphRenderer.Color
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Color
        VB: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Color
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Color
        path: ''
        startLine: 6383
      summary: "\nGets the color for the graph.\n"
      example: []
      syntax:
        content:
          CSharp: public Color Color { get; }
          VB: Public ReadOnly Property Color As Color
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.Color
      overload: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Color*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.ColorPropertyId
      commentId: F:GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.ColorPropertyId
      language: CSharp
      name:
        CSharp: ColorPropertyId
        VB: ColorPropertyId
      nameWithType:
        CSharp: ColoredSingleGraphRenderer.ColorPropertyId
        VB: ColoredSingleGraphRenderer.ColorPropertyId
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.ColorPropertyId
        VB: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.ColorPropertyId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: ColorPropertyId
        path: ''
        startLine: 6408
      summary: "\nThe property identifier the color in the shader.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly int ColorPropertyId
          VB: Public Shared ReadOnly ColorPropertyId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: ColoredSingleGraphRenderer.Awake()
        VB: ColoredSingleGraphRenderer.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Awake()
        VB: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Awake
        path: ''
        startLine: 6413
      summary: "\nInitializes the rated graph renderer, subscribes to performance providers, and sets up initial values.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Awake*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnInitializeGraph(Shader)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnInitializeGraph(Shader)
      language: CSharp
      name:
        CSharp: OnInitializeGraph(Shader)
        VB: OnInitializeGraph(Shader)
      nameWithType:
        CSharp: ColoredSingleGraphRenderer.OnInitializeGraph(Shader)
        VB: ColoredSingleGraphRenderer.OnInitializeGraph(Shader)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnInitializeGraph(Shader)
        VB: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnInitializeGraph(Shader)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnInitializeGraph
        path: ''
        startLine: 6425
      summary: "\n<inheritdoc></inheritdoc>\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnInitializeGraph(Shader _Shader)
          VB: Protected Overrides Sub OnInitializeGraph(_Shader As Shader)
        parameters:
        - id: _Shader
          type: GUPS.EasyPerformanceMonitor.Shader
      overload: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnInitializeGraph*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph(Shader)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.RefreshGraph
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.RefreshGraph
      language: CSharp
      name:
        CSharp: RefreshGraph()
        VB: RefreshGraph()
      nameWithType:
        CSharp: ColoredSingleGraphRenderer.RefreshGraph()
        VB: ColoredSingleGraphRenderer.RefreshGraph()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.RefreshGraph()
        VB: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.RefreshGraph()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: RefreshGraph
        path: ''
        startLine: 6437
      summary: "\n<inheritdoc></inheritdoc>\n"
      example: []
      syntax:
        content:
          CSharp: public override void RefreshGraph()
          VB: Public Overrides Sub RefreshGraph
      overload: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.RefreshGraph*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnNext(PerformanceData)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnNext(PerformanceData)
      language: CSharp
      name:
        CSharp: OnNext(PerformanceData)
        VB: OnNext(PerformanceData)
      nameWithType:
        CSharp: ColoredSingleGraphRenderer.OnNext(PerformanceData)
        VB: ColoredSingleGraphRenderer.OnNext(PerformanceData)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnNext(PerformanceData)
        VB: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnNext(PerformanceData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnNext
        path: ''
        startLine: 6465
      summary: "\nCalled when a new performance data value is received.\nUpdates the displayed values and legend image.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnNext(PerformanceData _Next)
          VB: Public Overrides Sub OnNext(_Next As PerformanceData)
        parameters:
        - id: _Next
          type: GUPS.EasyPerformanceMonitor.PerformanceData
          description: The new performance data received.
      overload: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnNext*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext(PerformanceData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    references:
      GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer: 
      GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer: 
  - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer
    language: CSharp
    name:
      CSharp: NormalizedMultiGraphRenderer
      VB: NormalizedMultiGraphRenderer
    nameWithType:
      CSharp: NormalizedMultiGraphRenderer
      VB: NormalizedMultiGraphRenderer
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer
      VB: GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Renderer
    source:
      id: NormalizedMultiGraphRenderer
      path: ''
      startLine: 6584
    summary: "\nRenders multiple colored graphs stacked on top of each other, with automatic normalization of the passed data.\nThe renderer utilizes performance data received from subscribed providers on the same GameObject.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer\" data-throw-if-not-resolved=\"false\"></xref> extends the functionality of <xref href=\"GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer\" data-throw-if-not-resolved=\"false\"></xref>\nto include normalization of the passed data. It stacks multiple graphs vertically, ensuring that the data is\nnormalized before rendering. This renderer subscribes to performance providers and automatically manages the\nrendering of multiple colored graphs, with each graph&apos;s values normalized for accurate visualization.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class NormalizedMultiGraphRenderer : ColoredMultiGraphRenderer, IGraphRenderer, IRenderer'
        VB: >-
          Public Class NormalizedMultiGraphRenderer

              Inherits ColoredMultiGraphRenderer

              Implements IGraphRenderer, IRenderer
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer
    implements:
    - GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    - GUPS.EasyPerformanceMonitor.IObserver{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors
    - GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphColorsPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphCountPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph(Shader)
    - GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph
    - GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext(PerformanceData)
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.StackedPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValues
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValuesMobile
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.LinePropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.SmoothPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.AntiAliasingPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValuesPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValueCountPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph(Shader)
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError(Exception)
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer.UpdateGraph
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer.UpdateGraph
      language: CSharp
      name:
        CSharp: UpdateGraph()
        VB: UpdateGraph()
      nameWithType:
        CSharp: NormalizedMultiGraphRenderer.UpdateGraph()
        VB: NormalizedMultiGraphRenderer.UpdateGraph()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer.UpdateGraph()
        VB: GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer.UpdateGraph()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: UpdateGraph
        path: ''
        startLine: 6623
      summary: "\nFlattens and passes the value array to the shader for graph rendering.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void UpdateGraph()
          VB: Protected Overrides Sub UpdateGraph
      overload: GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer.UpdateGraph*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    references:
      GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer: 
      GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer: 
  - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer
    language: CSharp
    name:
      CSharp: RatedSingleGraphRenderer
      VB: RatedSingleGraphRenderer
    nameWithType:
      CSharp: RatedSingleGraphRenderer
      VB: RatedSingleGraphRenderer
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer
      VB: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Renderer
    source:
      id: RatedSingleGraphRenderer
      path: ''
      startLine: 6648
    summary: "\nRenders a single rated graph based on the performance data passed by the subscribed performance providers \non the same GameObject. The displayed data in the graph will be colored based on the thresholds.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class RatedSingleGraphRenderer : ASingleGraphRenderer, IGraphRenderer, IRenderer'
        VB: >-
          Public Class RatedSingleGraphRenderer

              Inherits ASingleGraphRenderer

              Implements IGraphRenderer, IRenderer
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer
    implements:
    - GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    - GUPS.EasyPerformanceMonitor.IObserver{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValues
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValuesMobile
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.LinePropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.SmoothPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.AntiAliasingPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValuesPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValueCountPropertyId
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph(Shader)
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError(Exception)
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose
    - GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.HighIsGood
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.HighIsGood
      language: CSharp
      name:
        CSharp: HighIsGood
        VB: HighIsGood
      nameWithType:
        CSharp: RatedSingleGraphRenderer.HighIsGood
        VB: RatedSingleGraphRenderer.HighIsGood
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.HighIsGood
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.HighIsGood
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: HighIsGood
        path: ''
        startLine: 6660
      summary: "\nGets a value indicating whether higher values are considered good.\n"
      example: []
      syntax:
        content:
          CSharp: public bool HighIsGood { get; }
          VB: Public ReadOnly Property HighIsGood As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.HighIsGood*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.GoodColor
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.GoodColor
      language: CSharp
      name:
        CSharp: GoodColor
        VB: GoodColor
      nameWithType:
        CSharp: RatedSingleGraphRenderer.GoodColor
        VB: RatedSingleGraphRenderer.GoodColor
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.GoodColor
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.GoodColor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: GoodColor
        path: ''
        startLine: 6671
      summary: "\nGets the list of colors for each section.\n"
      example: []
      syntax:
        content:
          CSharp: public List<Color> GoodColor { get; }
          VB: Public ReadOnly Property GoodColor As List(Of Color)
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.List{Color}
      overload: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.GoodColor*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.DesktopThresholds
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.DesktopThresholds
      language: CSharp
      name:
        CSharp: DesktopThresholds
        VB: DesktopThresholds
      nameWithType:
        CSharp: RatedSingleGraphRenderer.DesktopThresholds
        VB: RatedSingleGraphRenderer.DesktopThresholds
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.DesktopThresholds
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.DesktopThresholds
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: DesktopThresholds
        path: ''
        startLine: 6682
      summary: "\nGets the threshold for each section for the desktop graph.\n"
      example: []
      syntax:
        content:
          CSharp: public List<float> DesktopThresholds { get; }
          VB: Public ReadOnly Property DesktopThresholds As List(Of Single)
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.List{System.Single}
      overload: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.DesktopThresholds*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.MobileThresholds
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.MobileThresholds
      language: CSharp
      name:
        CSharp: MobileThresholds
        VB: MobileThresholds
      nameWithType:
        CSharp: RatedSingleGraphRenderer.MobileThresholds
        VB: RatedSingleGraphRenderer.MobileThresholds
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.MobileThresholds
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.MobileThresholds
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: MobileThresholds
        path: ''
        startLine: 6693
      summary: "\nGets the threshold for each section for the mobile graph.\n"
      example: []
      syntax:
        content:
          CSharp: public List<float> MobileThresholds { get; }
          VB: Public ReadOnly Property MobileThresholds As List(Of Single)
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.List{System.Single}
      overload: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.MobileThresholds*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ConsoleThresholds
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ConsoleThresholds
      language: CSharp
      name:
        CSharp: ConsoleThresholds
        VB: ConsoleThresholds
      nameWithType:
        CSharp: RatedSingleGraphRenderer.ConsoleThresholds
        VB: RatedSingleGraphRenderer.ConsoleThresholds
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ConsoleThresholds
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ConsoleThresholds
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: ConsoleThresholds
        path: ''
        startLine: 6704
      summary: "\nGets the threshold for each section for the console graph.\n"
      example: []
      syntax:
        content:
          CSharp: public List<float> ConsoleThresholds { get; }
          VB: Public ReadOnly Property ConsoleThresholds As List(Of Single)
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.List{System.Single}
      overload: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ConsoleThresholds*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.HighIsGoodPropertyId
      commentId: F:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.HighIsGoodPropertyId
      language: CSharp
      name:
        CSharp: HighIsGoodPropertyId
        VB: HighIsGoodPropertyId
      nameWithType:
        CSharp: RatedSingleGraphRenderer.HighIsGoodPropertyId
        VB: RatedSingleGraphRenderer.HighIsGoodPropertyId
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.HighIsGoodPropertyId
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.HighIsGoodPropertyId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: HighIsGoodPropertyId
        path: ''
        startLine: 6734
      summary: "\nThe property identifier for indicating whether higher values are considered good in the shader.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly int HighIsGoodPropertyId
          VB: Public Shared ReadOnly HighIsGoodPropertyId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ThresholdsPropertyId
      commentId: F:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ThresholdsPropertyId
      language: CSharp
      name:
        CSharp: ThresholdsPropertyId
        VB: ThresholdsPropertyId
      nameWithType:
        CSharp: RatedSingleGraphRenderer.ThresholdsPropertyId
        VB: RatedSingleGraphRenderer.ThresholdsPropertyId
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ThresholdsPropertyId
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ThresholdsPropertyId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: ThresholdsPropertyId
        path: ''
        startLine: 6739
      summary: "\nThe property identifier for the list of thresholds in the shader.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly int ThresholdsPropertyId
          VB: Public Shared ReadOnly ThresholdsPropertyId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ColorsPropertyId
      commentId: F:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ColorsPropertyId
      language: CSharp
      name:
        CSharp: ColorsPropertyId
        VB: ColorsPropertyId
      nameWithType:
        CSharp: RatedSingleGraphRenderer.ColorsPropertyId
        VB: RatedSingleGraphRenderer.ColorsPropertyId
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ColorsPropertyId
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ColorsPropertyId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: ColorsPropertyId
        path: ''
        startLine: 6744
      summary: "\nThe property identifier for the list of colors in the shader.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly int ColorsPropertyId
          VB: Public Shared ReadOnly ColorsPropertyId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ColorCountPropertyId
      commentId: F:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ColorCountPropertyId
      language: CSharp
      name:
        CSharp: ColorCountPropertyId
        VB: ColorCountPropertyId
      nameWithType:
        CSharp: RatedSingleGraphRenderer.ColorCountPropertyId
        VB: RatedSingleGraphRenderer.ColorCountPropertyId
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ColorCountPropertyId
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ColorCountPropertyId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: ColorCountPropertyId
        path: ''
        startLine: 6749
      summary: "\nThe property identifier for count of colors in the shader.\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly int ColorCountPropertyId
          VB: Public Shared ReadOnly ColorCountPropertyId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: RatedSingleGraphRenderer.Awake()
        VB: RatedSingleGraphRenderer.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.Awake()
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Awake
        path: ''
        startLine: 6754
      summary: "\nInitializes the rated graph renderer, subscribes to performance providers, and sets up initial values.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.Awake*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnInitializeGraph(Shader)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnInitializeGraph(Shader)
      language: CSharp
      name:
        CSharp: OnInitializeGraph(Shader)
        VB: OnInitializeGraph(Shader)
      nameWithType:
        CSharp: RatedSingleGraphRenderer.OnInitializeGraph(Shader)
        VB: RatedSingleGraphRenderer.OnInitializeGraph(Shader)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnInitializeGraph(Shader)
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnInitializeGraph(Shader)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnInitializeGraph
        path: ''
        startLine: 6766
      summary: "\n<inheritdoc></inheritdoc>\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnInitializeGraph(Shader _Shader)
          VB: Protected Overrides Sub OnInitializeGraph(_Shader As Shader)
        parameters:
        - id: _Shader
          type: GUPS.EasyPerformanceMonitor.Shader
      overload: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnInitializeGraph*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph(Shader)
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.RefreshGraph
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.RefreshGraph
      language: CSharp
      name:
        CSharp: RefreshGraph()
        VB: RefreshGraph()
      nameWithType:
        CSharp: RatedSingleGraphRenderer.RefreshGraph()
        VB: RatedSingleGraphRenderer.RefreshGraph()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.RefreshGraph()
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.RefreshGraph()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: RefreshGraph
        path: ''
        startLine: 6805
      summary: "\n<inheritdoc></inheritdoc>\n"
      example: []
      syntax:
        content:
          CSharp: public override void RefreshGraph()
          VB: Public Overrides Sub RefreshGraph
      overload: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.RefreshGraph*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnNext(PerformanceData)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnNext(PerformanceData)
      language: CSharp
      name:
        CSharp: OnNext(PerformanceData)
        VB: OnNext(PerformanceData)
      nameWithType:
        CSharp: RatedSingleGraphRenderer.OnNext(PerformanceData)
        VB: RatedSingleGraphRenderer.OnNext(PerformanceData)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnNext(PerformanceData)
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnNext(PerformanceData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnNext
        path: ''
        startLine: 6860
      summary: "\nCalled when a new performance data value is received.\nUpdates the displayed values and legend image.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnNext(PerformanceData _Next)
          VB: Public Overrides Sub OnNext(_Next As PerformanceData)
        parameters:
        - id: _Next
          type: GUPS.EasyPerformanceMonitor.PerformanceData
          description: The new performance data received.
      overload: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnNext*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext(PerformanceData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1
    language: CSharp
    name:
      CSharp: ATextRenderer<TProvidedData>
      VB: ATextRenderer(Of TProvidedData)
    nameWithType:
      CSharp: ATextRenderer<TProvidedData>
      VB: ATextRenderer(Of TProvidedData)
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>
      VB: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Renderer
    source:
      id: ATextRenderer
      path: ''
      startLine: 7030
    syntax:
      content:
        CSharp: 'public abstract class ATextRenderer<TProvidedData> : MonoBehaviour, ITextRenderer, IRenderer where TProvidedData : IProvidedData'
        VB: >-
          Public MustInherit Class ATextRenderer(Of TProvidedData As IProvidedData)

              Inherits MonoBehaviour

              Implements ITextRenderer, IRenderer
      typeParameters:
      - id: TProvidedData
    inheritance:
    - System.Object
    implements:
    - GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    - GUPS.EasyPerformanceMonitor.IObserver{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Provider
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Provider
      language: CSharp
      name:
        CSharp: Provider
        VB: Provider
      nameWithType:
        CSharp: ATextRenderer<TProvidedData>.Provider
        VB: ATextRenderer(Of TProvidedData).Provider
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.Provider
        VB: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).Provider
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Provider
        path: ''
        startLine: 7038
      summary: "\nGets the list of data providers associated with the renderer.\n"
      remarks: This list is populated by finding all components implementing the IProvider interface on this GameObject.
      example: []
      syntax:
        content:
          CSharp: public List<IProvider> Provider { get; }
          VB: Public ReadOnly Property Provider As List(Of IProvider)
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.List{IProvider}
      overload: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Provider*
      implements:
      - GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Scale
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Scale
      language: CSharp
      name:
        CSharp: Scale
        VB: Scale
      nameWithType:
        CSharp: ATextRenderer<TProvidedData>.Scale
        VB: ATextRenderer(Of TProvidedData).Scale
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.Scale
        VB: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).Scale
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Scale
        path: ''
        startLine: 7057
      summary: "\nDetermines whether to scale the displayed values.\n"
      example: []
      syntax:
        content:
          CSharp: public bool Scale { get; }
          VB: Public ReadOnly Property Scale As Boolean
        parameters: []
        return:
          type: System.Boolean
          description: True if scaling is enabled, false otherwise.
      overload: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Scale*
      implements:
      - GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: ATextRenderer<TProvidedData>.Awake()
        VB: ATextRenderer(Of TProvidedData).Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.Awake()
        VB: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Awake
        path: ''
        startLine: 7062
      summary: "\nInitializes the text renderer, subscribes to data providers.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.RefreshText
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.RefreshText
      language: CSharp
      name:
        CSharp: RefreshText()
        VB: RefreshText()
      nameWithType:
        CSharp: ATextRenderer<TProvidedData>.RefreshText()
        VB: ATextRenderer(Of TProvidedData).RefreshText()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.RefreshText()
        VB: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).RefreshText()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: RefreshText
        path: ''
        startLine: 7084
      summary: "\nRefresh the text renderer on editor value changed.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void RefreshText()
          VB: Public Overridable Sub RefreshText
      overload: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.RefreshText*
      implements:
      - GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnNext(`0)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnNext(`0)
      language: CSharp
      name:
        CSharp: OnNext(TProvidedData)
        VB: OnNext(TProvidedData)
      nameWithType:
        CSharp: ATextRenderer<TProvidedData>.OnNext(TProvidedData)
        VB: ATextRenderer(Of TProvidedData).OnNext(TProvidedData)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.OnNext(TProvidedData)
        VB: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).OnNext(TProvidedData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnNext
        path: ''
        startLine: 7092
      summary: "\nCalled when a new data value is received.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void OnNext(TProvidedData _Next)
          VB: Public MustOverride Sub OnNext(_Next As TProvidedData)
        parameters:
        - id: _Next
          type: '{TProvidedData}'
          description: The new data received.
      overload: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnNext*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnError(Exception)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnError(Exception)
      language: CSharp
      name:
        CSharp: OnError(Exception)
        VB: OnError(Exception)
      nameWithType:
        CSharp: ATextRenderer<TProvidedData>.OnError(Exception)
        VB: ATextRenderer(Of TProvidedData).OnError(Exception)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.OnError(Exception)
        VB: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).OnError(Exception)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnError
        path: ''
        startLine: 7110
      summary: "\nCalled when an error is encountered.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void OnError(Exception _Error)
          VB: Public Overridable Sub OnError(_Error As Exception)
        parameters:
        - id: _Error
          type: GUPS.EasyPerformanceMonitor.Exception
          description: The encountered error.
      overload: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnError*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnCompleted
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnCompleted
      language: CSharp
      name:
        CSharp: OnCompleted()
        VB: OnCompleted()
      nameWithType:
        CSharp: ATextRenderer<TProvidedData>.OnCompleted()
        VB: ATextRenderer(Of TProvidedData).OnCompleted()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.OnCompleted()
        VB: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).OnCompleted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnCompleted
        path: ''
        startLine: 7118
      summary: "\nCalled when data observation is completed.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void OnCompleted()
          VB: Public Overridable Sub OnCompleted
      overload: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnCompleted*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Dispose
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: ATextRenderer<TProvidedData>.Dispose()
        VB: ATextRenderer(Of TProvidedData).Dispose()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.Dispose()
        VB: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).Dispose()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Dispose
        path: ''
        startLine: 7126
      summary: "\nDisposes of the renderer by unsubscribing from all data providers.\n"
      example: []
      syntax:
        content:
          CSharp: public virtual void Dispose()
          VB: Public Overridable Sub Dispose
      overload: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Dispose*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnDestroy
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnDestroy
      language: CSharp
      name:
        CSharp: OnDestroy()
        VB: OnDestroy()
      nameWithType:
        CSharp: ATextRenderer<TProvidedData>.OnDestroy()
        VB: ATextRenderer(Of TProvidedData).OnDestroy()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.OnDestroy()
        VB: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).OnDestroy()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnDestroy
        path: ''
        startLine: 7138
      summary: "\nCalled when the GameObject is destroyed, unsubscribes from all data providers.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDestroy()
          VB: Protected Overridable Sub OnDestroy
      overload: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnDestroy*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
  - id: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer
    language: CSharp
    name:
      CSharp: ITextRenderer
      VB: ITextRenderer
    nameWithType:
      CSharp: ITextRenderer
      VB: ITextRenderer
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer
      VB: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Renderer
    source:
      id: ITextRenderer
      path: ''
      startLine: 7159
    summary: "\nRepresents an interface for text renderers, defining the contract for rendering textual information.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer\" data-throw-if-not-resolved=\"false\"></xref> interface extends the functionality of <xref href=\"GUPS.EasyPerformanceMonitor.Renderer.IRenderer\" data-throw-if-not-resolved=\"false\"></xref>\nand provides methods specifically for rendering text. Implementing classes are expected to adhere to\nthis contract, allowing for consistent handling of text rendering in diverse contexts.\n"
    example: []
    syntax:
      content:
        CSharp: 'public interface ITextRenderer : IRenderer'
        VB: >-
          Public Interface ITextRenderer

              Inherits IRenderer
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale
      language: CSharp
      name:
        CSharp: Scale
        VB: Scale
      nameWithType:
        CSharp: ITextRenderer.Scale
        VB: ITextRenderer.Scale
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale
        VB: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Scale
        path: ''
        startLine: 7164
      summary: "\nGets a value indicating whether the displayed values should be scaled.\n"
      example: []
      syntax:
        content:
          CSharp: bool Scale { get; }
          VB: ReadOnly Property Scale As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText
      language: CSharp
      name:
        CSharp: RefreshText()
        VB: RefreshText()
      nameWithType:
        CSharp: ITextRenderer.RefreshText()
        VB: ITextRenderer.RefreshText()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText()
        VB: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: RefreshText
        path: ''
        startLine: 7169
      summary: "\nRefresh the text renderer on editor value changed by the user.\n"
      example: []
      syntax:
        content:
          CSharp: void RefreshText()
          VB: Sub RefreshText
      overload: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText*
      modifiers:
        CSharp: []
        VB: []
    references:
      GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer: 
      GUPS.EasyPerformanceMonitor.Renderer.IRenderer: 
  - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredTextRenderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.ColoredTextRenderer
    language: CSharp
    name:
      CSharp: ColoredTextRenderer
      VB: ColoredTextRenderer
    nameWithType:
      CSharp: ColoredTextRenderer
      VB: ColoredTextRenderer
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Renderer.ColoredTextRenderer
      VB: GUPS.EasyPerformanceMonitor.Renderer.ColoredTextRenderer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Renderer
    source:
      id: ColoredTextRenderer
      path: ''
      startLine: 7187
    summary: "\nText renderer implementation for a colored graph displaying the min, max, and mean values as text of the subscribed \nperformance providers on the same GameObject.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Renderer.ColoredTextRenderer\" data-throw-if-not-resolved=\"false\"></xref> class extends the functionality of <xref href=\"GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer\" data-throw-if-not-resolved=\"false\"></xref> to provide\ntext rendering for visualizing performance metrics from subscribed providers on a colored graph. It displays the \nminimum, maximum, and mean values, providing options to show suffixes for scaled values based on the associated \nperformance provider&apos;s settings.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class ColoredTextRenderer : RatedTextRenderer, ITextRenderer, IRenderer'
        VB: >-
          Public Class ColoredTextRenderer

              Inherits RatedTextRenderer

              Implements ITextRenderer, IRenderer
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}
    - GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer
    implements:
    - GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    - GUPS.EasyPerformanceMonitor.IObserver{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern
    - GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake
    - GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext(PerformanceData)
    - GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Provider
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Scale
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnError(Exception)
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnCompleted
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Dispose
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnDestroy
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
    references:
      GUPS.EasyPerformanceMonitor.Renderer.ColoredTextRenderer: 
      GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer: 
  - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer
    language: CSharp
    name:
      CSharp: NormalizedTextRenderer
      VB: NormalizedTextRenderer
    nameWithType:
      CSharp: NormalizedTextRenderer
      VB: NormalizedTextRenderer
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer
      VB: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Renderer
    source:
      id: NormalizedTextRenderer
      path: ''
      startLine: 7218
    syntax:
      content:
        CSharp: 'public class NormalizedTextRenderer : ATextRenderer<PerformanceData>, ITextRenderer, IRenderer'
        VB: >-
          Public Class NormalizedTextRenderer

              Inherits ATextRenderer(Of PerformanceData)

              Implements ITextRenderer, IRenderer
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}
    implements:
    - GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    - GUPS.EasyPerformanceMonitor.IObserver{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Provider
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Scale
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnError(Exception)
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnCompleted
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Dispose
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnDestroy
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Pattern
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Pattern
      language: CSharp
      name:
        CSharp: Pattern
        VB: Pattern
      nameWithType:
        CSharp: NormalizedTextRenderer.Pattern
        VB: NormalizedTextRenderer.Pattern
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Pattern
        VB: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Pattern
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Pattern
        path: ''
        startLine: 7232
      summary: "\nThe text pattern used to render the value and unit. The 0 represents the value and the # represents the unit.\nPossible patterns are: 0, 0.0, 0.00, 0.000, ... or 0#, 0.0#, 0.00#, 0.000#, ...\n"
      example: []
      syntax:
        content:
          CSharp: public String Pattern { get; }
          VB: Public ReadOnly Property Pattern As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Pattern*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: NormalizedTextRenderer.Awake()
        VB: NormalizedTextRenderer.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Awake()
        VB: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Awake
        path: ''
        startLine: 7259
      summary: "\nInitializes the text renderer, subscribes to performance providers, and sets up initial values.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Awake*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Awake
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.OnNext(PerformanceData)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.OnNext(PerformanceData)
      language: CSharp
      name:
        CSharp: OnNext(PerformanceData)
        VB: OnNext(PerformanceData)
      nameWithType:
        CSharp: NormalizedTextRenderer.OnNext(PerformanceData)
        VB: NormalizedTextRenderer.OnNext(PerformanceData)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.OnNext(PerformanceData)
        VB: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.OnNext(PerformanceData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnNext
        path: ''
        startLine: 7276
      summary: "\nCalled when a new performance data value is received.\nUpdates the displayed values and UI texts.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnNext(PerformanceData _Next)
          VB: Public Overrides Sub OnNext(_Next As PerformanceData)
        parameters:
        - id: _Next
          type: GUPS.EasyPerformanceMonitor.PerformanceData
          description: The new performance data received.
      overload: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.OnNext*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnNext(PerformanceData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.RefreshText
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.RefreshText
      language: CSharp
      name:
        CSharp: RefreshText()
        VB: RefreshText()
      nameWithType:
        CSharp: NormalizedTextRenderer.RefreshText()
        VB: NormalizedTextRenderer.RefreshText()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.RefreshText()
        VB: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.RefreshText()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: RefreshText
        path: ''
        startLine: 7356
      summary: "\nRefresh the rendering value and unit pattern, based on the user assigned pattern.\n"
      example: []
      syntax:
        content:
          CSharp: public override void RefreshText()
          VB: Public Overrides Sub RefreshText
      overload: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.RefreshText*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.RefreshText
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer
    language: CSharp
    name:
      CSharp: RatedTextRenderer
      VB: RatedTextRenderer
    nameWithType:
      CSharp: RatedTextRenderer
      VB: RatedTextRenderer
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer
      VB: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Renderer
    source:
      id: RatedTextRenderer
      path: ''
      startLine: 7414
    syntax:
      content:
        CSharp: 'public class RatedTextRenderer : ATextRenderer<PerformanceData>, ITextRenderer, IRenderer'
        VB: >-
          Public Class RatedTextRenderer

              Inherits ATextRenderer(Of PerformanceData)

              Implements ITextRenderer, IRenderer
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}
    implements:
    - GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer
    - GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    - GUPS.EasyPerformanceMonitor.IObserver{IProvidedData}
    - GUPS.EasyPerformanceMonitor.IDisposable
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Provider
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Scale
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnError(Exception)
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnCompleted
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Dispose
    - GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnDestroy
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern
      commentId: P:GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern
      language: CSharp
      name:
        CSharp: Pattern
        VB: Pattern
      nameWithType:
        CSharp: RatedTextRenderer.Pattern
        VB: RatedTextRenderer.Pattern
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Pattern
        path: ''
        startLine: 7428
      summary: "\nThe text pattern used to render the value and unit. The 0 represents the value and the # represents the unit.\nPossible patterns are: 0, 0.0, 0.00, 0.000, ... or 0#, 0.0#, 0.00#, 0.000#, ...\n"
      example: []
      syntax:
        content:
          CSharp: public String Pattern { get; }
          VB: Public ReadOnly Property Pattern As String
        parameters: []
        return:
          type: GUPS.EasyPerformanceMonitor.String
      overload: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: RatedTextRenderer.Awake()
        VB: RatedTextRenderer.Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake()
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: Awake
        path: ''
        startLine: 7471
      summary: "\nInitializes the text renderer, subscribes to performance providers, and sets up initial values.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Awake()
          VB: Protected Overrides Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Awake
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext(PerformanceData)
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext(PerformanceData)
      language: CSharp
      name:
        CSharp: OnNext(PerformanceData)
        VB: OnNext(PerformanceData)
      nameWithType:
        CSharp: RatedTextRenderer.OnNext(PerformanceData)
        VB: RatedTextRenderer.OnNext(PerformanceData)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext(PerformanceData)
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext(PerformanceData)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: OnNext
        path: ''
        startLine: 7490
      summary: "\nCalled when a new performance data value is received.\nUpdates the displayed values and UI texts.\n"
      example: []
      syntax:
        content:
          CSharp: public override void OnNext(PerformanceData _Next)
          VB: Public Overrides Sub OnNext(_Next As PerformanceData)
        parameters:
        - id: _Next
          type: GUPS.EasyPerformanceMonitor.PerformanceData
          description: The new performance data received.
      overload: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnNext(PerformanceData)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText
      commentId: M:GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText
      language: CSharp
      name:
        CSharp: RefreshText()
        VB: RefreshText()
      nameWithType:
        CSharp: RatedTextRenderer.RefreshText()
        VB: RatedTextRenderer.RefreshText()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText()
        VB: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Renderer
      source:
        id: RefreshText
        path: ''
        startLine: 7560
      summary: "\nRefresh the rendering value and unit pattern, based on the user assigned pattern.\n"
      example: []
      syntax:
        content:
          CSharp: public override void RefreshText()
          VB: Public Overrides Sub RefreshText
      overload: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText*
      overridden: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.RefreshText
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
- id: GUPS.EasyPerformanceMonitor.Singleton
  commentId: N:GUPS.EasyPerformanceMonitor.Singleton
  language: CSharp
  name:
    CSharp: GUPS.EasyPerformanceMonitor.Singleton
    VB: GUPS.EasyPerformanceMonitor.Singleton
  nameWithType:
    CSharp: GUPS.EasyPerformanceMonitor.Singleton
    VB: GUPS.EasyPerformanceMonitor.Singleton
  qualifiedName:
    CSharp: GUPS.EasyPerformanceMonitor.Singleton
    VB: GUPS.EasyPerformanceMonitor.Singleton
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1
    commentId: T:GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1
    language: CSharp
    name:
      CSharp: PersistentSingleton<T>
      VB: PersistentSingleton(Of T)
    nameWithType:
      CSharp: PersistentSingleton<T>
      VB: PersistentSingleton(Of T)
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton<T>
      VB: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Singleton
    source:
      id: PersistentSingleton
      path: ''
      startLine: 7603
    summary: "\nA thread-safe singleton active throughout the whole application.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PersistentSingleton<T> : MonoBehaviour where T : MonoBehaviour'
        VB: >-
          Public Class PersistentSingleton(Of T As MonoBehaviour)

              Inherits MonoBehaviour
      typeParameters:
      - id: T
        description: The type of the singleton.
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Singleton
      commentId: P:GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Singleton
      language: CSharp
      name:
        CSharp: Singleton
        VB: Singleton
      nameWithType:
        CSharp: PersistentSingleton<T>.Singleton
        VB: PersistentSingleton(Of T).Singleton
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton<T>.Singleton
        VB: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton(Of T).Singleton
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Singleton
      source:
        id: Singleton
        path: ''
        startLine: 7619
      summary: "\nReturns an active singleton of this instance or creates a new one.\n"
      example: []
      syntax:
        content:
          CSharp: public static T Singleton { get; }
          VB: Public Shared ReadOnly Property Singleton As T
        parameters: []
        return:
          type: '{T}'
      overload: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Singleton*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Exists
      commentId: P:GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Exists
      language: CSharp
      name:
        CSharp: Exists
        VB: Exists
      nameWithType:
        CSharp: PersistentSingleton<T>.Exists
        VB: PersistentSingleton(Of T).Exists
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton<T>.Exists
        VB: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton(Of T).Exists
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Singleton
      source:
        id: Exists
        path: ''
        startLine: 7655
      summary: "\nReturns true if a singleton exists.\n"
      example: []
      syntax:
        content:
          CSharp: public static bool Exists { get; }
          VB: Public Shared ReadOnly Property Exists As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Exists*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Awake
      commentId: M:GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: PersistentSingleton<T>.Awake()
        VB: PersistentSingleton(Of T).Awake()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton<T>.Awake()
        VB: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton(Of T).Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Singleton
      source:
        id: Awake
        path: ''
        startLine: 7667
      summary: "\nOn awake, check if there is already a singleton.\nIf there is one and it is not this, destroy the GameObject.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
- id: GUPS.EasyPerformanceMonitor.Window
  commentId: N:GUPS.EasyPerformanceMonitor.Window
  language: CSharp
  name:
    CSharp: GUPS.EasyPerformanceMonitor.Window
    VB: GUPS.EasyPerformanceMonitor.Window
  nameWithType:
    CSharp: GUPS.EasyPerformanceMonitor.Window
    VB: GUPS.EasyPerformanceMonitor.Window
  qualifiedName:
    CSharp: GUPS.EasyPerformanceMonitor.Window
    VB: GUPS.EasyPerformanceMonitor.Window
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
    commentId: T:GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
    language: CSharp
    name:
      CSharp: EMonitorWindowPosition
      VB: EMonitorWindowPosition
    nameWithType:
      CSharp: EMonitorWindowPosition
      VB: EMonitorWindowPosition
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
      VB: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Window
    source:
      id: EMonitorWindowPosition
      path: ''
      startLine: 7721
    summary: "\nDefines the position options for a monitor window.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition\" data-throw-if-not-resolved=\"false\"></xref> enum represents various positions where a monitor window can be\nlocated, providing options such as top, bottom, top-left, top-right, bottom-left, and bottom-right.\nEach member corresponds to a specific layout arrangement, guiding the placement of the monitor window.\n"
    example: []
    syntax:
      content:
        CSharp: 'public enum EMonitorWindowPosition : byte'
        VB: Public Enum EMonitorWindowPosition As Byte
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Top
      commentId: F:GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Top
      language: CSharp
      name:
        CSharp: Top
        VB: Top
      nameWithType:
        CSharp: EMonitorWindowPosition.Top
        VB: EMonitorWindowPosition.Top
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Top
        VB: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Top
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: Top
        path: ''
        startLine: 7727
      summary: "\nPositions the monitor window on the top (left to right).\n"
      example: []
      syntax:
        content:
          CSharp: Top = 0
          VB: Top = 0
        return:
          type: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Top_Left
      commentId: F:GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Top_Left
      language: CSharp
      name:
        CSharp: Top_Left
        VB: Top_Left
      nameWithType:
        CSharp: EMonitorWindowPosition.Top_Left
        VB: EMonitorWindowPosition.Top_Left
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Top_Left
        VB: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Top_Left
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: Top_Left
        path: ''
        startLine: 7732
      summary: "\nPositions the monitor window on the top-left side (top to down).\n"
      example: []
      syntax:
        content:
          CSharp: Top_Left = 1
          VB: Top_Left = 1
        return:
          type: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Top_Right
      commentId: F:GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Top_Right
      language: CSharp
      name:
        CSharp: Top_Right
        VB: Top_Right
      nameWithType:
        CSharp: EMonitorWindowPosition.Top_Right
        VB: EMonitorWindowPosition.Top_Right
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Top_Right
        VB: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Top_Right
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: Top_Right
        path: ''
        startLine: 7737
      summary: "\nPositions the monitor window on the top-right side (top to down).\n"
      example: []
      syntax:
        content:
          CSharp: Top_Right = 2
          VB: Top_Right = 2
        return:
          type: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Bottom
      commentId: F:GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Bottom
      language: CSharp
      name:
        CSharp: Bottom
        VB: Bottom
      nameWithType:
        CSharp: EMonitorWindowPosition.Bottom
        VB: EMonitorWindowPosition.Bottom
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Bottom
        VB: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Bottom
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: Bottom
        path: ''
        startLine: 7742
      summary: "\nPositions the monitor window on the bottom (left to right).\n"
      example: []
      syntax:
        content:
          CSharp: Bottom = 3
          VB: Bottom = 3
        return:
          type: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Bottom_Left
      commentId: F:GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Bottom_Left
      language: CSharp
      name:
        CSharp: Bottom_Left
        VB: Bottom_Left
      nameWithType:
        CSharp: EMonitorWindowPosition.Bottom_Left
        VB: EMonitorWindowPosition.Bottom_Left
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Bottom_Left
        VB: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Bottom_Left
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: Bottom_Left
        path: ''
        startLine: 7747
      summary: "\nPositions the monitor window on the bottom-left side (down to top).\n"
      example: []
      syntax:
        content:
          CSharp: Bottom_Left = 4
          VB: Bottom_Left = 4
        return:
          type: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Bottom_Right
      commentId: F:GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Bottom_Right
      language: CSharp
      name:
        CSharp: Bottom_Right
        VB: Bottom_Right
      nameWithType:
        CSharp: EMonitorWindowPosition.Bottom_Right
        VB: EMonitorWindowPosition.Bottom_Right
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Bottom_Right
        VB: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Bottom_Right
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: Bottom_Right
        path: ''
        startLine: 7752
      summary: "\nPositions the monitor window on the bottom-right side (down to top).\n"
      example: []
      syntax:
        content:
          CSharp: Bottom_Right = 5
          VB: Bottom_Right = 5
        return:
          type: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Free
      commentId: F:GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Free
      language: CSharp
      name:
        CSharp: Free
        VB: Free
      nameWithType:
        CSharp: EMonitorWindowPosition.Free
        VB: EMonitorWindowPosition.Free
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Free
        VB: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition.Free
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: Free
        path: ''
        startLine: 7757
      summary: "\nPositions the monitor window freely, without adjusting it to any specific / fixed position.\n"
      example: []
      syntax:
        content:
          CSharp: Free = 10
          VB: Free = 10
        return:
          type: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    references:
      GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition: 
  - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    commentId: T:GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    language: CSharp
    name:
      CSharp: MonitorWindow
      VB: MonitorWindow
    nameWithType:
      CSharp: MonitorWindow
      VB: MonitorWindow
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
      VB: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Window
    source:
      id: MonitorWindow
      path: ''
      startLine: 7781
    summary: "\nRepresents a monitor window, functioning as a canvas to render monitor elements. \nThe window can be toggled for display by the user.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Window.MonitorWindow\" data-throw-if-not-resolved=\"false\"></xref> class provides functionality for managing the appearance and behavior \nof a monitor window, including settings for toggle keys, rendering, and the positioning of monitor elements.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class MonitorWindow : MonoBehaviour'
        VB: >-
          Public Class MonitorWindow

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Name
      commentId: F:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: MonitorWindow.Name
        VB: MonitorWindow.Name
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Name
        VB: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: Name
        path: ''
        startLine: 7788
      syntax:
        content:
          CSharp: public String Name
          VB: Public Name As String
        return:
          type: GUPS.EasyPerformanceMonitor.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorCanvas
      commentId: F:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorCanvas
      language: CSharp
      name:
        CSharp: MonitorCanvas
        VB: MonitorCanvas
      nameWithType:
        CSharp: MonitorWindow.MonitorCanvas
        VB: MonitorWindow.MonitorCanvas
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorCanvas
        VB: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorCanvas
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: MonitorCanvas
        path: ''
        startLine: 7834
      syntax:
        content:
          CSharp: public Canvas MonitorCanvas
          VB: Public MonitorCanvas As Canvas
        return:
          type: GUPS.EasyPerformanceMonitor.Canvas
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorPosition
      commentId: F:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorPosition
      language: CSharp
      name:
        CSharp: MonitorPosition
        VB: MonitorPosition
      nameWithType:
        CSharp: MonitorWindow.MonitorPosition
        VB: MonitorWindow.MonitorPosition
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorPosition
        VB: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorPosition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: MonitorPosition
        path: ''
        startLine: 7869
      summary: "\nThe monitor window position.\n"
      example: []
      syntax:
        content:
          CSharp: public EMonitorWindowPosition MonitorPosition
          VB: Public MonitorPosition As EMonitorWindowPosition
        return:
          type: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetX
      commentId: F:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetX
      language: CSharp
      name:
        CSharp: InitialOffsetX
        VB: InitialOffsetX
      nameWithType:
        CSharp: MonitorWindow.InitialOffsetX
        VB: MonitorWindow.InitialOffsetX
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetX
        VB: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetX
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: InitialOffsetX
        path: ''
        startLine: 7875
      summary: "\nThe monitor elements initial x offset.\n"
      example: []
      syntax:
        content:
          CSharp: public int InitialOffsetX
          VB: Public InitialOffsetX As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetY
      commentId: F:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetY
      language: CSharp
      name:
        CSharp: InitialOffsetY
        VB: InitialOffsetY
      nameWithType:
        CSharp: MonitorWindow.InitialOffsetY
        VB: MonitorWindow.InitialOffsetY
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetY
        VB: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: InitialOffsetY
        path: ''
        startLine: 7881
      summary: "\nThe monitor elements initial y offset.\n"
      example: []
      syntax:
        content:
          CSharp: public int InitialOffsetY
          VB: Public InitialOffsetY As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementWidth
      commentId: F:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementWidth
      language: CSharp
      name:
        CSharp: ElementWidth
        VB: ElementWidth
      nameWithType:
        CSharp: MonitorWindow.ElementWidth
        VB: MonitorWindow.ElementWidth
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementWidth
        VB: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementWidth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: ElementWidth
        path: ''
        startLine: 7887
      summary: "\nThe monitor elements width.\n"
      example: []
      syntax:
        content:
          CSharp: public int ElementWidth
          VB: Public ElementWidth As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementHeight
      commentId: F:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementHeight
      language: CSharp
      name:
        CSharp: ElementHeight
        VB: ElementHeight
      nameWithType:
        CSharp: MonitorWindow.ElementHeight
        VB: MonitorWindow.ElementHeight
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementHeight
        VB: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementHeight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: ElementHeight
        path: ''
        startLine: 7893
      summary: "\nThe monitor elements height.\n"
      example: []
      syntax:
        content:
          CSharp: public int ElementHeight
          VB: Public ElementHeight As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementSpacing
      commentId: F:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementSpacing
      language: CSharp
      name:
        CSharp: ElementSpacing
        VB: ElementSpacing
      nameWithType:
        CSharp: MonitorWindow.ElementSpacing
        VB: MonitorWindow.ElementSpacing
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementSpacing
        VB: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementSpacing
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: ElementSpacing
        path: ''
        startLine: 7899
      summary: "\nThe monitor elements spacing / margin.\n"
      example: []
      syntax:
        content:
          CSharp: public int ElementSpacing
          VB: Public ElementSpacing As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable
      commentId: M:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: MonitorWindow.OnEnable()
        VB: MonitorWindow.OnEnable()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable()
        VB: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: OnEnable
        path: ''
        startLine: 7904
      summary: "\nWhen the new input system is enabled, enable the toogle action.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnEnable()
          VB: Protected Overridable Sub OnEnable
      overload: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start
      commentId: M:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: MonitorWindow.Start()
        VB: MonitorWindow.Start()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start()
        VB: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: Start
        path: ''
        startLine: 7931
      summary: "\nInitially place the monitor elements.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update
      commentId: M:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: MonitorWindow.Update()
        VB: MonitorWindow.Update()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update()
        VB: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: Update
        path: ''
        startLine: 7940
      summary: "\nWhen the old input system is enabled, validate and toggle the window if the user pressed the toggle key to open or close the monitor.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle
      commentId: M:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle
      language: CSharp
      name:
        CSharp: Toggle()
        VB: Toggle()
      nameWithType:
        CSharp: MonitorWindow.Toggle()
        VB: MonitorWindow.Toggle()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle()
        VB: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: Toggle
        path: ''
        startLine: 7984
      summary: "\nToggle the monitor window.\n"
      example: []
      syntax:
        content:
          CSharp: public void Toggle()
          VB: Public Sub Toggle
      overload: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle(System.Boolean)
      commentId: M:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle(System.Boolean)
      language: CSharp
      name:
        CSharp: Toggle(Boolean)
        VB: Toggle(Boolean)
      nameWithType:
        CSharp: MonitorWindow.Toggle(Boolean)
        VB: MonitorWindow.Toggle(Boolean)
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle(System.Boolean)
        VB: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: Toggle
        path: ''
        startLine: 7993
      summary: "\nToggle the monitor window.\n"
      example: []
      syntax:
        content:
          CSharp: public void Toggle(bool _Show)
          VB: Public Sub Toggle(_Show As Boolean)
        parameters:
        - id: _Show
          type: System.Boolean
          description: Show the monitor window or hide it.
      overload: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements
      commentId: M:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements
      language: CSharp
      name:
        CSharp: PlaceMonitorElements()
        VB: PlaceMonitorElements()
      nameWithType:
        CSharp: MonitorWindow.PlaceMonitorElements()
        VB: MonitorWindow.PlaceMonitorElements()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements()
        VB: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: PlaceMonitorElements
        path: ''
        startLine: 8001
      summary: "\nPlace the monitor elements based on the monitor position.\n"
      example: []
      syntax:
        content:
          CSharp: public void PlaceMonitorElements()
          VB: Public Sub PlaceMonitorElements
      overload: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable
      commentId: M:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: MonitorWindow.OnDisable()
        VB: MonitorWindow.OnDisable()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable()
        VB: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: OnDisable
        path: ''
        startLine: 8265
      summary: "\nWhen the new input system is enabled, disable the toogle action.\n"
      example: []
      syntax:
        content:
          CSharp: protected virtual void OnDisable()
          VB: Protected Overridable Sub OnDisable
      overload: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    references:
      GUPS.EasyPerformanceMonitor.Window.MonitorWindow: 
  - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow
    commentId: T:GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow
    language: CSharp
    name:
      CSharp: LogMonitorWindow
      VB: LogMonitorWindow
    nameWithType:
      CSharp: LogMonitorWindow
      VB: LogMonitorWindow
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow
      VB: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Window
    source:
      id: LogMonitorWindow
      path: ''
      startLine: 8300
    summary: "\nA specialized monitor window for displaying unity log messages with customizable settings such as log levels,\nmaximum log lines, and styling for different log types (Info, Warning, Error).\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow\" data-throw-if-not-resolved=\"false\"></xref> class extends the <xref href=\"GUPS.EasyPerformanceMonitor.Window.MonitorWindow\" data-throw-if-not-resolved=\"false\"></xref> base class to provide a\nwindow for monitoring and displaying log messages. It features a UI Text element for log display, a scrollbar,\nconfigurable log level threshold, and the ability to customize the appearance of different log types.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class LogMonitorWindow : MonitorWindow'
        VB: >-
          Public Class LogMonitorWindow

              Inherits MonitorWindow
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Name
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorCanvas
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorPosition
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetX
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetY
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementWidth
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementHeight
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementSpacing
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle(System.Boolean)
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.LogText
      commentId: F:GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.LogText
      language: CSharp
      name:
        CSharp: LogText
        VB: LogText
      nameWithType:
        CSharp: LogMonitorWindow.LogText
        VB: LogMonitorWindow.LogText
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.LogText
        VB: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.LogText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: LogText
        path: ''
        startLine: 8309
      syntax:
        content:
          CSharp: public UnityEngine.UI.Text LogText
          VB: Public LogText As UnityEngine.UI.Text
        return:
          type: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.LogScrollbar
      commentId: F:GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.LogScrollbar
      language: CSharp
      name:
        CSharp: LogScrollbar
        VB: LogScrollbar
      nameWithType:
        CSharp: LogMonitorWindow.LogScrollbar
        VB: LogMonitorWindow.LogScrollbar
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.LogScrollbar
        VB: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.LogScrollbar
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: LogScrollbar
        path: ''
        startLine: 8315
      summary: "\nThe UI Scrollbar element associated with the log text.\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEngine.UI.Scrollbar LogScrollbar
          VB: Public LogScrollbar As UnityEngine.UI.Scrollbar
        return:
          type: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Scrollbar
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.LogLevel
      commentId: F:GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.LogLevel
      language: CSharp
      name:
        CSharp: LogLevel
        VB: LogLevel
      nameWithType:
        CSharp: LogMonitorWindow.LogLevel
        VB: LogMonitorWindow.LogLevel
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.LogLevel
        VB: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.LogLevel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: LogLevel
        path: ''
        startLine: 8323
      summary: "\nThe log level from which log messages will be displayed.\nInfo = 2, Warning = 1, Error/Exception = 0. Default is Info (2).\n"
      example: []
      syntax:
        content:
          CSharp: public int LogLevel
          VB: Public LogLevel As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.LogMaxLines
      commentId: F:GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.LogMaxLines
      language: CSharp
      name:
        CSharp: LogMaxLines
        VB: LogMaxLines
      nameWithType:
        CSharp: LogMonitorWindow.LogMaxLines
        VB: LogMonitorWindow.LogMaxLines
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.LogMaxLines
        VB: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.LogMaxLines
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: LogMaxLines
        path: ''
        startLine: 8330
      summary: "\nThe maximum number of log lines to display in the log window.\n"
      example: []
      syntax:
        content:
          CSharp: public int LogMaxLines
          VB: Public LogMaxLines As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.CMaxLineLength
      commentId: F:GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.CMaxLineLength
      language: CSharp
      name:
        CSharp: CMaxLineLength
        VB: CMaxLineLength
      nameWithType:
        CSharp: LogMonitorWindow.CMaxLineLength
        VB: LogMonitorWindow.CMaxLineLength
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.CMaxLineLength
        VB: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.CMaxLineLength
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: CMaxLineLength
        path: ''
        startLine: 8335
      summary: "\nThe maximum length of a log line until it will be truncated.\n"
      example: []
      syntax:
        content:
          CSharp: public const int CMaxLineLength = 500
          VB: Public Const CMaxLineLength As Integer = 500
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.SaveToFile
      commentId: F:GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.SaveToFile
      language: CSharp
      name:
        CSharp: SaveToFile
        VB: SaveToFile
      nameWithType:
        CSharp: LogMonitorWindow.SaveToFile
        VB: LogMonitorWindow.SaveToFile
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.SaveToFile
        VB: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.SaveToFile
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: SaveToFile
        path: ''
        startLine: 8356
      summary: "\nSave the log to a file in &apos;Application.persistentDataPath&apos;.\n"
      example: []
      syntax:
        content:
          CSharp: public bool SaveToFile
          VB: Public SaveToFile As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnEnable
      commentId: M:GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnEnable
      language: CSharp
      name:
        CSharp: OnEnable()
        VB: OnEnable()
      nameWithType:
        CSharp: LogMonitorWindow.OnEnable()
        VB: LogMonitorWindow.OnEnable()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnEnable()
        VB: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnEnable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: OnEnable
        path: ''
        startLine: 8371
      summary: "\nEnables the log message callback when the component is enabled.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnEnable()
          VB: Protected Overrides Sub OnEnable
      overload: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnEnable*
      overridden: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Start
      commentId: M:GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: LogMonitorWindow.Start()
        VB: LogMonitorWindow.Start()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Start()
        VB: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: Start
        path: ''
        startLine: 8384
      summary: "\nSets up the log window, and initializes log lines.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Start()
          VB: Protected Overrides Sub Start
      overload: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Start*
      overridden: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Update
      commentId: M:GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: LogMonitorWindow.Update()
        VB: LogMonitorWindow.Update()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Update()
        VB: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: Update
        path: ''
        startLine: 8527
      summary: "\nUpdates the log text in the UI Text component.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Update()
          VB: Protected Overrides Sub Update
      overload: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Update*
      overridden: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnDisable
      commentId: M:GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnDisable
      language: CSharp
      name:
        CSharp: OnDisable()
        VB: OnDisable()
      nameWithType:
        CSharp: LogMonitorWindow.OnDisable()
        VB: LogMonitorWindow.OnDisable()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnDisable()
        VB: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnDisable()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: OnDisable
        path: ''
        startLine: 8544
      summary: "\nDisables the log message callback when the component is disabled.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void OnDisable()
          VB: Protected Overrides Sub OnDisable
      overload: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnDisable*
      overridden: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    references:
      GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow: 
      GUPS.EasyPerformanceMonitor.Window.MonitorWindow: 
  - id: GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow
    commentId: T:GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow
    language: CSharp
    name:
      CSharp: PerformanceMonitorWindow
      VB: PerformanceMonitorWindow
    nameWithType:
      CSharp: PerformanceMonitorWindow
      VB: PerformanceMonitorWindow
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow
      VB: GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Window
    source:
      id: PerformanceMonitorWindow
      path: ''
      startLine: 8576
    summary: "\nRepresents a specialized monitor window for displaying performance-related information. \nExtends the base functionality provided by <xref href=\"GUPS.EasyPerformanceMonitor.Window.MonitorWindow\" data-throw-if-not-resolved=\"false\"></xref>.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow\" data-throw-if-not-resolved=\"false\"></xref> class inherits from <xref href=\"GUPS.EasyPerformanceMonitor.Window.MonitorWindow\" data-throw-if-not-resolved=\"false\"></xref> and adds \nfunctionality specific to performance monitoring. It automatically checks the activity status of \nperformance providers associated with child game objects and sets the window to be inactive if all providers are inactive.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PerformanceMonitorWindow : MonitorWindow'
        VB: >-
          Public Class PerformanceMonitorWindow

              Inherits MonitorWindow
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Name
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorCanvas
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorPosition
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetX
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetY
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementWidth
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementHeight
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementSpacing
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle(System.Boolean)
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow.Start
      commentId: M:GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: PerformanceMonitorWindow.Start()
        VB: PerformanceMonitorWindow.Start()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow.Start()
        VB: GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: Start
        path: ''
        startLine: 8585
      summary: "\nCalled when the script instance is being loaded.\nInitializes the monitor window by checking the activity status of performance providers \nassociated with child game objects and sets the window to be inactive if all providers are inactive. \nAdditionally, places the monitor elements based on the specified position.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Start()
          VB: Protected Overrides Sub Start
      overload: GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow.Start*
      overridden: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    references:
      GUPS.EasyPerformanceMonitor.Window.MonitorWindow: 
      GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow: 
  - id: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow
    commentId: T:GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow
    language: CSharp
    name:
      CSharp: SystemMonitorWindow
      VB: SystemMonitorWindow
    nameWithType:
      CSharp: SystemMonitorWindow
      VB: SystemMonitorWindow
    qualifiedName:
      CSharp: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow
      VB: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: GUPS.EasyPerformanceMonitor.Window
    source:
      id: SystemMonitorWindow
      path: ''
      startLine: 8633
    summary: "\nA monitor window designed to display system-related information, such as operating system details,\ndevice specifications, processor information, memory statistics, graphic device details, and graphic memory size.\n"
    remarks: "\nThe <xref href=\"GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow\" data-throw-if-not-resolved=\"false\"></xref> class extends the <xref href=\"GUPS.EasyPerformanceMonitor.Window.MonitorWindow\" data-throw-if-not-resolved=\"false\"></xref> base class and is designed\nto showcase key system metrics. It provides UI Text components to display information related to the\noperating system, device, processor, memory, graphic device, and graphic memory size. The details are retrieved\nusing <see cref=\"!:SystemInfo\"></see> and presented in a formatted manner for better readability.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class SystemMonitorWindow : MonitorWindow'
        VB: >-
          Public Class SystemMonitorWindow

              Inherits MonitorWindow
    inheritance:
    - System.Object
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    inheritedMembers:
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Name
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorCanvas
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorPosition
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetX
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetY
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementWidth
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementHeight
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementSpacing
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle(System.Boolean)
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements
    - GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.OperatingSystemText
      commentId: F:GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.OperatingSystemText
      language: CSharp
      name:
        CSharp: OperatingSystemText
        VB: OperatingSystemText
      nameWithType:
        CSharp: SystemMonitorWindow.OperatingSystemText
        VB: SystemMonitorWindow.OperatingSystemText
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.OperatingSystemText
        VB: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.OperatingSystemText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: OperatingSystemText
        path: ''
        startLine: 8641
      syntax:
        content:
          CSharp: public UnityEngine.UI.Text OperatingSystemText
          VB: Public OperatingSystemText As UnityEngine.UI.Text
        return:
          type: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.DeviceText
      commentId: F:GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.DeviceText
      language: CSharp
      name:
        CSharp: DeviceText
        VB: DeviceText
      nameWithType:
        CSharp: SystemMonitorWindow.DeviceText
        VB: SystemMonitorWindow.DeviceText
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.DeviceText
        VB: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.DeviceText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: DeviceText
        path: ''
        startLine: 8647
      summary: "\nThe UI Text component displaying device-related information.\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEngine.UI.Text DeviceText
          VB: Public DeviceText As UnityEngine.UI.Text
        return:
          type: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.ProcessorText
      commentId: F:GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.ProcessorText
      language: CSharp
      name:
        CSharp: ProcessorText
        VB: ProcessorText
      nameWithType:
        CSharp: SystemMonitorWindow.ProcessorText
        VB: SystemMonitorWindow.ProcessorText
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.ProcessorText
        VB: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.ProcessorText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: ProcessorText
        path: ''
        startLine: 8653
      summary: "\nThe UI Text component displaying processor details.\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEngine.UI.Text ProcessorText
          VB: Public ProcessorText As UnityEngine.UI.Text
        return:
          type: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.MemorySizeText
      commentId: F:GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.MemorySizeText
      language: CSharp
      name:
        CSharp: MemorySizeText
        VB: MemorySizeText
      nameWithType:
        CSharp: SystemMonitorWindow.MemorySizeText
        VB: SystemMonitorWindow.MemorySizeText
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.MemorySizeText
        VB: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.MemorySizeText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: MemorySizeText
        path: ''
        startLine: 8659
      summary: "\nThe UI Text component displaying memory-related information.\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEngine.UI.Text MemorySizeText
          VB: Public MemorySizeText As UnityEngine.UI.Text
        return:
          type: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.GraphicDeviceText
      commentId: F:GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.GraphicDeviceText
      language: CSharp
      name:
        CSharp: GraphicDeviceText
        VB: GraphicDeviceText
      nameWithType:
        CSharp: SystemMonitorWindow.GraphicDeviceText
        VB: SystemMonitorWindow.GraphicDeviceText
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.GraphicDeviceText
        VB: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.GraphicDeviceText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: GraphicDeviceText
        path: ''
        startLine: 8665
      summary: "\nThe UI Text component displaying graphic device details.\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEngine.UI.Text GraphicDeviceText
          VB: Public GraphicDeviceText As UnityEngine.UI.Text
        return:
          type: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.GraphicMemorySizeText
      commentId: F:GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.GraphicMemorySizeText
      language: CSharp
      name:
        CSharp: GraphicMemorySizeText
        VB: GraphicMemorySizeText
      nameWithType:
        CSharp: SystemMonitorWindow.GraphicMemorySizeText
        VB: SystemMonitorWindow.GraphicMemorySizeText
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.GraphicMemorySizeText
        VB: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.GraphicMemorySizeText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: GraphicMemorySizeText
        path: ''
        startLine: 8671
      summary: "\nThe UI Text component displaying graphic memory size information.\n"
      example: []
      syntax:
        content:
          CSharp: public UnityEngine.UI.Text GraphicMemorySizeText
          VB: Public GraphicMemorySizeText As UnityEngine.UI.Text
        return:
          type: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.SaveToFile
      commentId: F:GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.SaveToFile
      language: CSharp
      name:
        CSharp: SaveToFile
        VB: SaveToFile
      nameWithType:
        CSharp: SystemMonitorWindow.SaveToFile
        VB: SystemMonitorWindow.SaveToFile
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.SaveToFile
        VB: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.SaveToFile
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: SaveToFile
        path: ''
        startLine: 8677
      summary: "\nSave the system information on start to a file in &apos;Application.persistentDataPath&apos;.\n"
      example: []
      syntax:
        content:
          CSharp: public bool SaveToFile
          VB: Public SaveToFile As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.Start
      commentId: M:GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: SystemMonitorWindow.Start()
        VB: SystemMonitorWindow.Start()
      qualifiedName:
        CSharp: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.Start()
        VB: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: GUPS.EasyPerformanceMonitor.Window
      source:
        id: Start
        path: ''
        startLine: 8682
      summary: "\nInitializes the System Monitor window and populates UI Text components with system information.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Start()
          VB: Protected Overrides Sub Start
      overload: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.Start*
      overridden: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
    references:
      GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow: 
      GUPS.EasyPerformanceMonitor.Window.MonitorWindow: 
references:
  GUPS.EasyPerformanceMonitor.PerformanceMonitor:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.PerformanceMonitor
        name: PerformanceMonitor
        nameWithType: PerformanceMonitor
        qualifiedName: GUPS.EasyPerformanceMonitor.PerformanceMonitor
      VB:
      - id: GUPS.EasyPerformanceMonitor.PerformanceMonitor
        name: PerformanceMonitor
        nameWithType: PerformanceMonitor
        qualifiedName: GUPS.EasyPerformanceMonitor.PerformanceMonitor
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.PerformanceMonitor
  GUPS.EasyPerformanceMonitor.PerformanceMonitor.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.PerformanceMonitor.Awake*
        name: Awake
        nameWithType: PerformanceMonitor.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.PerformanceMonitor.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.PerformanceMonitor.Awake*
        name: Awake
        nameWithType: PerformanceMonitor.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.PerformanceMonitor.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.PerformanceMonitor.Awake
  GUPS.EasyPerformanceMonitor.List`1:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  GUPS.EasyPerformanceMonitor.List{MonitorWindow}:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.MonitorWindow
        name: MonitorWindow
        nameWithType: MonitorWindow
        qualifiedName: MonitorWindow
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.MonitorWindow
        name: MonitorWindow
        nameWithType: MonitorWindow
        qualifiedName: MonitorWindow
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.List`1
    commentId: '!:GUPS.EasyPerformanceMonitor.List{MonitorWindow}'
  GUPS.EasyPerformanceMonitor.PerformanceMonitor.GetMonitorWindows*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.PerformanceMonitor.GetMonitorWindows*
        name: GetMonitorWindows
        nameWithType: PerformanceMonitor.GetMonitorWindows
        qualifiedName: GUPS.EasyPerformanceMonitor.PerformanceMonitor.GetMonitorWindows
      VB:
      - id: GUPS.EasyPerformanceMonitor.PerformanceMonitor.GetMonitorWindows*
        name: GetMonitorWindows
        nameWithType: PerformanceMonitor.GetMonitorWindows
        qualifiedName: GUPS.EasyPerformanceMonitor.PerformanceMonitor.GetMonitorWindows
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.PerformanceMonitor.GetMonitorWindows
  GUPS.EasyPerformanceMonitor:
    name:
      CSharp:
      - name: GUPS.EasyPerformanceMonitor
        nameWithType: GUPS.EasyPerformanceMonitor
        qualifiedName: GUPS.EasyPerformanceMonitor
      VB:
      - name: GUPS.EasyPerformanceMonitor
        nameWithType: GUPS.EasyPerformanceMonitor
        qualifiedName: GUPS.EasyPerformanceMonitor
    isDefinition: true
    commentId: N:GUPS.EasyPerformanceMonitor
  GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: PerformanceMonitorEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor.OnInspectorGUI
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: PerformanceMonitorEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor.OnInspectorGUI
  GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor
        name: PerformanceMonitorEditor
        nameWithType: PerformanceMonitorEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor
        name: PerformanceMonitorEditor
        nameWithType: PerformanceMonitorEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.PerformanceMonitorEditor
  GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable*
        name: OnEnable
        nameWithType: PerformanceProviderEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable*
        name: OnEnable
        nameWithType: PerformanceProviderEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable
  GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: PerformanceProviderEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: PerformanceProviderEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI
  GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor
        name: PerformanceProviderEditor
        nameWithType: PerformanceProviderEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor
        name: PerformanceProviderEditor
        nameWithType: PerformanceProviderEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Editor
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor
  GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor
        name: GameObjectTagCountProviderEditor
        nameWithType: GameObjectTagCountProviderEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor
        name: GameObjectTagCountProviderEditor
        nameWithType: GameObjectTagCountProviderEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor
  GUPS.EasyPerformanceMonitor.Editor:
    name:
      CSharp:
      - name: GUPS.EasyPerformanceMonitor.Editor
        nameWithType: GUPS.EasyPerformanceMonitor.Editor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor
      VB:
      - name: GUPS.EasyPerformanceMonitor.Editor
        nameWithType: GUPS.EasyPerformanceMonitor.Editor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor
    isDefinition: true
    commentId: N:GUPS.EasyPerformanceMonitor.Editor
  GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable
        name: OnEnable
        nameWithType: PerformanceProviderEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable
        name: OnEnable
        nameWithType: PerformanceProviderEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor
    commentId: M:GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnEnable
  GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnEnable*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnEnable*
        name: OnEnable
        nameWithType: GameObjectTagCountProviderEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnEnable
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnEnable*
        name: OnEnable
        nameWithType: GameObjectTagCountProviderEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnEnable
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnEnable
  GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI
        name: OnInspectorGUI
        nameWithType: PerformanceProviderEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI
        name: OnInspectorGUI
        nameWithType: PerformanceProviderEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor
    commentId: M:GUPS.EasyPerformanceMonitor.Editor.PerformanceProviderEditor.OnInspectorGUI
  GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: GameObjectTagCountProviderEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnInspectorGUI
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: GameObjectTagCountProviderEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.GameObjectTagCountProviderEditor.OnInspectorGUI
  GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnEnable*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnEnable*
        name: OnEnable
        nameWithType: UnityProfilerProviderEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnEnable
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnEnable*
        name: OnEnable
        nameWithType: UnityProfilerProviderEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnEnable
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnEnable
  GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: UnityProfilerProviderEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnInspectorGUI
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: UnityProfilerProviderEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor.OnInspectorGUI
  GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor
        name: UnityProfilerProviderEditor
        nameWithType: UnityProfilerProviderEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor
        name: UnityProfilerProviderEditor
        nameWithType: UnityProfilerProviderEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.UnityProfilerProviderEditor
  GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: BarRendererEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.OnInspectorGUI
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: BarRendererEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.OnInspectorGUI
  GUPS.EasyPerformanceMonitor.IPerformanceProvider[]:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.IPerformanceProvider
        name: IPerformanceProvider
        nameWithType: IPerformanceProvider
        qualifiedName: IPerformanceProvider
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: GUPS.EasyPerformanceMonitor.IPerformanceProvider
        name: IPerformanceProvider
        nameWithType: IPerformanceProvider
        qualifiedName: IPerformanceProvider
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.GetProvider*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.GetProvider*
        name: GetProvider
        nameWithType: BarRendererEditor.GetProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.GetProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.GetProvider*
        name: GetProvider
        nameWithType: BarRendererEditor.GetProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.GetProvider
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor.GetProvider
  GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor
        name: BarRendererEditor
        nameWithType: BarRendererEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor
        name: BarRendererEditor
        nameWithType: BarRendererEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.BarRendererEditor
  GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor
        name: GraphRendererEditor
        nameWithType: GraphRendererEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor
        name: GraphRendererEditor
        nameWithType: GraphRendererEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Editor
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor
  GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider
        name: GetProvider
        nameWithType: GraphRendererEditor.GetProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider
        name: GetProvider
        nameWithType: GraphRendererEditor.GetProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor
    commentId: M:GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider
  GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable
        name: OnEnable
        nameWithType: GraphRendererEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable
        name: OnEnable
        nameWithType: GraphRendererEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor
    commentId: M:GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable
  GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnEnable*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnEnable*
        name: OnEnable
        nameWithType: ColoredMultiGraphRendererEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnEnable
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnEnable*
        name: OnEnable
        nameWithType: ColoredMultiGraphRendererEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnEnable
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnEnable
  GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI
        name: OnInspectorGUI
        nameWithType: GraphRendererEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI
        name: OnInspectorGUI
        nameWithType: GraphRendererEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor
    commentId: M:GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI
  GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: ColoredMultiGraphRendererEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnInspectorGUI
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: ColoredMultiGraphRendererEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor.OnInspectorGUI
  GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor
        name: ColoredMultiGraphRendererEditor
        nameWithType: ColoredMultiGraphRendererEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor
        name: ColoredMultiGraphRendererEditor
        nameWithType: ColoredMultiGraphRendererEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.ColoredMultiGraphRendererEditor
  GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnEnable*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnEnable*
        name: OnEnable
        nameWithType: ColoredSingleGraphRendererEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnEnable
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnEnable*
        name: OnEnable
        nameWithType: ColoredSingleGraphRendererEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnEnable
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnEnable
  GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: ColoredSingleGraphRendererEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnInspectorGUI
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: ColoredSingleGraphRendererEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor.OnInspectorGUI
  GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor
        name: ColoredSingleGraphRendererEditor
        nameWithType: ColoredSingleGraphRendererEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor
        name: ColoredSingleGraphRendererEditor
        nameWithType: ColoredSingleGraphRendererEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.ColoredSingleGraphRendererEditor
  GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable*
        name: OnEnable
        nameWithType: GraphRendererEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable*
        name: OnEnable
        nameWithType: GraphRendererEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnEnable
  GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: GraphRendererEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: GraphRendererEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.OnInspectorGUI
  GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider*
        name: GetProvider
        nameWithType: GraphRendererEditor.GetProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider*
        name: GetProvider
        nameWithType: GraphRendererEditor.GetProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.GraphRendererEditor.GetProvider
  GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnEnable*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnEnable*
        name: OnEnable
        nameWithType: RatedSingleGraphRendererEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnEnable
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnEnable*
        name: OnEnable
        nameWithType: RatedSingleGraphRendererEditor.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnEnable
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnEnable
  GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: RatedSingleGraphRendererEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnInspectorGUI
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: RatedSingleGraphRendererEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor.OnInspectorGUI
  GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor
        name: RatedSingleGraphRendererEditor
        nameWithType: RatedSingleGraphRendererEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor
        name: RatedSingleGraphRendererEditor
        nameWithType: RatedSingleGraphRendererEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.RatedSingleGraphRendererEditor
  GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor
        name: TextRendererEditor
        nameWithType: TextRendererEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor
        name: TextRendererEditor
        nameWithType: TextRendererEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Editor
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor
  GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider
        name: GetProvider
        nameWithType: TextRendererEditor.GetProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider
        name: GetProvider
        nameWithType: TextRendererEditor.GetProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor
    commentId: M:GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider
  GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider``1:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider``1
        name: GetProvider<TProvider>
        nameWithType: TextRendererEditor.GetProvider<TProvider>
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider<TProvider>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider``1
        name: GetProvider(Of TProvider)
        nameWithType: TextRendererEditor.GetProvider(Of TProvider)
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider(Of TProvider)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor
    commentId: M:GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider``1
  GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: NormalizedTextRendererEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor.OnInspectorGUI
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: NormalizedTextRendererEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor.OnInspectorGUI
  GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor
        name: NormalizedTextRendererEditor
        nameWithType: NormalizedTextRendererEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor
        name: NormalizedTextRendererEditor
        nameWithType: NormalizedTextRendererEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.NormalizedTextRendererEditor
  GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor.OnInspectorGUI*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: RatedTextRendererEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor.OnInspectorGUI
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor.OnInspectorGUI*
        name: OnInspectorGUI
        nameWithType: RatedTextRendererEditor.OnInspectorGUI
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor.OnInspectorGUI
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor.OnInspectorGUI
  GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor
        name: RatedTextRendererEditor
        nameWithType: RatedTextRendererEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor
        name: RatedTextRendererEditor
        nameWithType: RatedTextRendererEditor
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Editor.RatedTextRendererEditor
  GUPS.EasyPerformanceMonitor.IProvider[]:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.IProvider
        name: IProvider
        nameWithType: IProvider
        qualifiedName: IProvider
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: GUPS.EasyPerformanceMonitor.IProvider
        name: IProvider
        nameWithType: IProvider
        qualifiedName: IProvider
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider*
        name: GetProvider
        nameWithType: TextRendererEditor.GetProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider*
        name: GetProvider
        nameWithType: TextRendererEditor.GetProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Editor.TextRendererEditor.GetProvider
  '{TProvider}[]':
    name:
      CSharp:
      - name: TProvider
        nameWithType: TProvider
        qualifiedName: TProvider
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - name: TProvider
        nameWithType: TProvider
        qualifiedName: TProvider
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  GUPS.EasyPerformanceMonitor.IProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.IProvider
        name: IProvider
        nameWithType: IProvider
        qualifiedName: IProvider
        isExternal: true
      VB:
      - id: GUPS.EasyPerformanceMonitor.IProvider
        name: IProvider
        nameWithType: IProvider
        qualifiedName: IProvider
        isExternal: true
    isDefinition: true
  GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender*
        name: Sender
        nameWithType: IProvidedData.Sender
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender
      VB:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender*
        name: Sender
        nameWithType: IProvidedData.Sender
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value*
        name: Value
        nameWithType: IProvidedData.Value
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
      VB:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value*
        name: Value
        nameWithType: IProvidedData.Value
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
  GUPS.EasyPerformanceMonitor.Observer.IProvidedData:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData
      VB:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Observer
    commentId: T:GUPS.EasyPerformanceMonitor.Observer.IProvidedData
  GUPS.EasyPerformanceMonitor.Observer:
    name:
      CSharp:
      - name: GUPS.EasyPerformanceMonitor.Observer
        nameWithType: GUPS.EasyPerformanceMonitor.Observer
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer
      VB:
      - name: GUPS.EasyPerformanceMonitor.Observer
        nameWithType: GUPS.EasyPerformanceMonitor.Observer
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer
    isDefinition: true
    commentId: N:GUPS.EasyPerformanceMonitor.Observer
  GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender
        name: Sender
        nameWithType: IProvidedData.Sender
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender
      VB:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender
        name: Sender
        nameWithType: IProvidedData.Sender
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Observer.IProvidedData
    commentId: P:GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Sender
  TValue:
    name:
      CSharp:
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      VB:
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
    isDefinition: true
  '{TValue}':
    name:
      CSharp:
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      VB:
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
    isDefinition: false
    definition: TValue
    commentId: '!:TValue'
  GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1.Value*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1.Value*
        name: Value
        nameWithType: IProvidedData<TValue>.Value
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData<TValue>.Value
      VB:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1.Value*
        name: Value
        nameWithType: IProvidedData(Of TValue).Value
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData(Of TValue).Value
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1.Value
  GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  GUPS.EasyPerformanceMonitor.Observer.IProvidedData{{TValue}}:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1
    parent: GUPS.EasyPerformanceMonitor.Observer
    commentId: T:GUPS.EasyPerformanceMonitor.Observer.IProvidedData{`0}
  GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.Sender*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.Sender*
        name: Sender
        nameWithType: ProvidedData<TValue>.Sender
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.ProvidedData<TValue>.Sender
      VB:
      - id: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.Sender*
        name: Sender
        nameWithType: ProvidedData(Of TValue).Sender
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.ProvidedData(Of TValue).Sender
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.Sender
  GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.Value*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.Value*
        name: Value
        nameWithType: ProvidedData<TValue>.Value
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.ProvidedData<TValue>.Value
      VB:
      - id: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.Value*
        name: Value
        nameWithType: ProvidedData(Of TValue).Value
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.ProvidedData(Of TValue).Value
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.Value
  GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1.Value:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1.Value
        name: Value
        nameWithType: IProvidedData<TValue>.Value
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData<TValue>.Value
      VB:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1.Value
        name: Value
        nameWithType: IProvidedData(Of TValue).Value
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData(Of TValue).Value
    isDefinition: true
    commentId: P:GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1.Value
  GUPS.EasyPerformanceMonitor.Observer.IProvidedData{{TValue}}.Value:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1.Value
        name: Value
        nameWithType: IProvidedData<TValue>.Value
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData<TValue>.Value
      VB:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1.Value
        name: Value
        nameWithType: IProvidedData(Of TValue).Value
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData(Of TValue).Value
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Observer.IProvidedData`1.Value
    parent: GUPS.EasyPerformanceMonitor.Observer.IProvidedData{{TValue}}
    commentId: P:GUPS.EasyPerformanceMonitor.Observer.IProvidedData{`0}.Value
  GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.GUPS#EasyPerformanceMonitor#Observer#IProvidedData#Value*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.GUPS#EasyPerformanceMonitor#Observer#IProvidedData#Value*
        name: IProvidedData.Value
        nameWithType: ProvidedData<TValue>.IProvidedData.Value
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.ProvidedData<TValue>.GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
      VB:
      - id: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.GUPS#EasyPerformanceMonitor#Observer#IProvidedData#Value*
        name: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
        nameWithType: ProvidedData(Of TValue).GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.ProvidedData(Of TValue).GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.GUPS#EasyPerformanceMonitor#Observer#IProvidedData#Value
  GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
        name: Value
        nameWithType: IProvidedData.Value
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
      VB:
      - id: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
        name: Value
        nameWithType: IProvidedData.Value
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Observer.IProvidedData
    commentId: P:GUPS.EasyPerformanceMonitor.Observer.IProvidedData.Value
  GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.#ctor*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.#ctor*
        name: ProvidedData
        nameWithType: ProvidedData<TValue>.ProvidedData
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.ProvidedData<TValue>.ProvidedData
      VB:
      - id: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.#ctor*
        name: ProvidedData
        nameWithType: ProvidedData(Of TValue).ProvidedData
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.ProvidedData(Of TValue).ProvidedData
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1.#ctor
  GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1
        name: ProvidedData
        nameWithType: ProvidedData
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.ProvidedData
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1
        name: ProvidedData
        nameWithType: ProvidedData
        qualifiedName: GUPS.EasyPerformanceMonitor.Observer.ProvidedData
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Observer.ProvidedData`1
  GUPS.EasyPerformanceMonitor.Platform.EPlatform:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Platform.EPlatform
        name: EPlatform
        nameWithType: EPlatform
        qualifiedName: GUPS.EasyPerformanceMonitor.Platform.EPlatform
      VB:
      - id: GUPS.EasyPerformanceMonitor.Platform.EPlatform
        name: EPlatform
        nameWithType: EPlatform
        qualifiedName: GUPS.EasyPerformanceMonitor.Platform.EPlatform
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Platform
    commentId: T:GUPS.EasyPerformanceMonitor.Platform.EPlatform
  GUPS.EasyPerformanceMonitor.Platform:
    name:
      CSharp:
      - name: GUPS.EasyPerformanceMonitor.Platform
        nameWithType: GUPS.EasyPerformanceMonitor.Platform
        qualifiedName: GUPS.EasyPerformanceMonitor.Platform
      VB:
      - name: GUPS.EasyPerformanceMonitor.Platform
        nameWithType: GUPS.EasyPerformanceMonitor.Platform
        qualifiedName: GUPS.EasyPerformanceMonitor.Platform
    isDefinition: true
    commentId: N:GUPS.EasyPerformanceMonitor.Platform
  GUPS.EasyPerformanceMonitor.Platform.PlatformHelper:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Platform.PlatformHelper
        name: PlatformHelper
        nameWithType: PlatformHelper
        qualifiedName: GUPS.EasyPerformanceMonitor.Platform.PlatformHelper
      VB:
      - id: GUPS.EasyPerformanceMonitor.Platform.PlatformHelper
        name: PlatformHelper
        nameWithType: PlatformHelper
        qualifiedName: GUPS.EasyPerformanceMonitor.Platform.PlatformHelper
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Platform.PlatformHelper
  GUPS.EasyPerformanceMonitor.Platform.PlatformHelper.GetCurrentPlatform:
    commentId: M:GUPS.EasyPerformanceMonitor.Platform.PlatformHelper.GetCurrentPlatform
  GUPS.EasyPerformanceMonitor.Platform.PlatformHelper.GetCurrentPlatform*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Platform.PlatformHelper.GetCurrentPlatform*
        name: GetCurrentPlatform
        nameWithType: PlatformHelper.GetCurrentPlatform
        qualifiedName: GUPS.EasyPerformanceMonitor.Platform.PlatformHelper.GetCurrentPlatform
      VB:
      - id: GUPS.EasyPerformanceMonitor.Platform.PlatformHelper.GetCurrentPlatform*
        name: GetCurrentPlatform
        nameWithType: PlatformHelper.GetCurrentPlatform
        qualifiedName: GUPS.EasyPerformanceMonitor.Platform.PlatformHelper.GetCurrentPlatform
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Platform.PlatformHelper.GetCurrentPlatform
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1
        name: AProvider
        nameWithType: AProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TProvidedData
        nameWithType: TProvidedData
        qualifiedName: TProvidedData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1
        name: AProvider
        nameWithType: AProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TProvidedData
        nameWithType: TProvidedData
        qualifiedName: TProvidedData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.AProvider`1
  GUPS.EasyPerformanceMonitor.Provider:
    name:
      CSharp:
      - name: GUPS.EasyPerformanceMonitor.Provider
        nameWithType: GUPS.EasyPerformanceMonitor.Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider
      VB:
      - name: GUPS.EasyPerformanceMonitor.Provider
        nameWithType: GUPS.EasyPerformanceMonitor.Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider
    isDefinition: true
    commentId: N:GUPS.EasyPerformanceMonitor.Provider
  GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1
        name: AProvider
        nameWithType: AProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1
        name: AProvider
        nameWithType: AProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1
    parent: GUPS.EasyPerformanceMonitor.Provider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList
        name: ObserverList
        nameWithType: AProvider<TProvidedData>.ObserverList
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.ObserverList
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList
        name: ObserverList
        nameWithType: AProvider(Of TProvidedData).ObserverList
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).ObserverList
    isDefinition: true
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList
  GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ObserverList:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList
        name: ObserverList
        nameWithType: AProvider<PerformanceData>.ObserverList
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<GUPS.EasyPerformanceMonitor.Provider.PerformanceData>.ObserverList
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList
        name: ObserverList
        nameWithType: AProvider(Of PerformanceData).ObserverList
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of GUPS.EasyPerformanceMonitor.Provider.PerformanceData).ObserverList
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList
    parent: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ObserverList
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name
        name: Name
        nameWithType: AProvider<TProvidedData>.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name
        name: Name
        nameWithType: AProvider(Of TProvidedData).Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).Name
    isDefinition: true
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name
  GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Name:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name
        name: Name
        nameWithType: AProvider<PerformanceData>.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<GUPS.EasyPerformanceMonitor.Provider.PerformanceData>.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name
        name: Name
        nameWithType: AProvider(Of PerformanceData).Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of GUPS.EasyPerformanceMonitor.Provider.PerformanceData).Name
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name
    parent: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Name
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported
        name: IsSupported
        nameWithType: AProvider<TProvidedData>.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported
        name: IsSupported
        nameWithType: AProvider(Of TProvidedData).IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).IsSupported
    isDefinition: true
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsSupported:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported
        name: IsSupported
        nameWithType: AProvider<PerformanceData>.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<GUPS.EasyPerformanceMonitor.Provider.PerformanceData>.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported
        name: IsSupported
        nameWithType: AProvider(Of PerformanceData).IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of GUPS.EasyPerformanceMonitor.Provider.PerformanceData).IsSupported
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported
    parent: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive
        name: IsActive
        nameWithType: AProvider<TProvidedData>.IsActive
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.IsActive
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive
        name: IsActive
        nameWithType: AProvider(Of TProvidedData).IsActive
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).IsActive
    isDefinition: true
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive
  GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsActive:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive
        name: IsActive
        nameWithType: AProvider<PerformanceData>.IsActive
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<GUPS.EasyPerformanceMonitor.Provider.PerformanceData>.IsActive
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive
        name: IsActive
        nameWithType: AProvider(Of PerformanceData).IsActive
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of GUPS.EasyPerformanceMonitor.Provider.PerformanceData).IsActive
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive
    parent: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.IsActive
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType
        name: ProvidedDataType
        nameWithType: AProvider<TProvidedData>.ProvidedDataType
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.ProvidedDataType
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType
        name: ProvidedDataType
        nameWithType: AProvider(Of TProvidedData).ProvidedDataType
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).ProvidedDataType
    isDefinition: true
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType
  GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ProvidedDataType:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType
        name: ProvidedDataType
        nameWithType: AProvider<PerformanceData>.ProvidedDataType
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<GUPS.EasyPerformanceMonitor.Provider.PerformanceData>.ProvidedDataType
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType
        name: ProvidedDataType
        nameWithType: AProvider(Of PerformanceData).ProvidedDataType
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of GUPS.EasyPerformanceMonitor.Provider.PerformanceData).ProvidedDataType
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType
    parent: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.ProvidedDataType
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe(IObserver{IProvidedData}):
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe(IObserver{IProvidedData})
        name: Subscribe
        nameWithType: AProvider<TProvidedData>.Subscribe
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.Subscribe
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.IObserver`1
        name: IObserver
        nameWithType: IObserver
        qualifiedName: IObserver
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.IProvidedData
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe(IObserver{IProvidedData})
        name: Subscribe
        nameWithType: AProvider(Of TProvidedData).Subscribe
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).Subscribe
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.IObserver`1
        name: IObserver
        nameWithType: IObserver
        qualifiedName: IObserver
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.IProvidedData
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe(IObserver{IProvidedData})
  ? GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Subscribe(IObserver{IProvidedData})
  : name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe(IObserver{IProvidedData})
        name: Subscribe
        nameWithType: AProvider<PerformanceData>.Subscribe
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<GUPS.EasyPerformanceMonitor.Provider.PerformanceData>.Subscribe
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.IObserver`1
        name: IObserver
        nameWithType: IObserver
        qualifiedName: IObserver
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.IProvidedData
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe(IObserver{IProvidedData})
        name: Subscribe
        nameWithType: AProvider(Of PerformanceData).Subscribe
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of GUPS.EasyPerformanceMonitor.Provider.PerformanceData).Subscribe
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.IObserver`1
        name: IObserver
        nameWithType: IObserver
        qualifiedName: IObserver
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.IProvidedData
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe(IObserver{IProvidedData})
    parent: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    commentId: M:GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Subscribe(IObserver{IProvidedData})
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose
        name: Dispose
        nameWithType: AProvider<TProvidedData>.Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.Dispose
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose
        name: Dispose
        nameWithType: AProvider(Of TProvidedData).Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).Dispose
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose
  GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Dispose:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose
        name: Dispose
        nameWithType: AProvider<PerformanceData>.Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<GUPS.EasyPerformanceMonitor.Provider.PerformanceData>.Dispose
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose
        name: Dispose
        nameWithType: AProvider(Of PerformanceData).Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of GUPS.EasyPerformanceMonitor.Provider.PerformanceData).Dispose
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose
    parent: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    commentId: M:GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Dispose
  GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
        name: IPerformanceProvider
        nameWithType: IPerformanceProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
        name: IPerformanceProvider
        nameWithType: IPerformanceProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
  GUPS.EasyPerformanceMonitor.Provider.IProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider
        name: IProvider
        nameWithType: IProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider
        name: IProvider
        nameWithType: IProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.IProvider
  GUPS.EasyPerformanceMonitor.IObservable`1:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: IObservable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: IObservable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  GUPS.EasyPerformanceMonitor.IObservable{IProvidedData}:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: IObservable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.IProvidedData
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.IObservable`1
        name: IObservable
        nameWithType: IObservable
        qualifiedName: IObservable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.IProvidedData
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.IObservable`1
    commentId: '!:GUPS.EasyPerformanceMonitor.IObservable{IProvidedData}'
  GUPS.EasyPerformanceMonitor.IDisposable:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: IDisposable
        isExternal: true
      VB:
      - id: GUPS.EasyPerformanceMonitor.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: IDisposable
        isExternal: true
    isDefinition: true
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble*
        name: IsScaleAble
        nameWithType: APerformanceProvider.IsScaleAble
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble*
        name: IsScaleAble
        nameWithType: APerformanceProvider.IsScaleAble
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
  GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble
        name: IsScaleAble
        nameWithType: IPerformanceProvider.IsScaleAble
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble
        name: IsScaleAble
        nameWithType: IPerformanceProvider.IsScaleAble
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor*
        name: ScaleFactor
        nameWithType: APerformanceProvider.ScaleFactor
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor*
        name: ScaleFactor
        nameWithType: APerformanceProvider.ScaleFactor
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
  GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor
        name: ScaleFactor
        nameWithType: IPerformanceProvider.ScaleFactor
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor
        name: ScaleFactor
        nameWithType: IPerformanceProvider.ScaleFactor
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor
  GUPS.EasyPerformanceMonitor.String[]:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.String
        name: String
        nameWithType: String
        qualifiedName: String
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: GUPS.EasyPerformanceMonitor.String
        name: String
        nameWithType: String
        qualifiedName: String
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes*
        name: ScaleSuffixes
        nameWithType: APerformanceProvider.ScaleSuffixes
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes*
        name: ScaleSuffixes
        nameWithType: APerformanceProvider.ScaleSuffixes
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
  GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes
        name: ScaleSuffixes
        nameWithType: IPerformanceProvider.ScaleSuffixes
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes
        name: ScaleSuffixes
        nameWithType: IPerformanceProvider.ScaleSuffixes
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes
  GUPS.EasyPerformanceMonitor.String:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.String
        name: String
        nameWithType: String
        qualifiedName: String
        isExternal: true
      VB:
      - id: GUPS.EasyPerformanceMonitor.String
        name: String
        nameWithType: String
        qualifiedName: String
        isExternal: true
    isDefinition: true
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit*
        name: Unit
        nameWithType: APerformanceProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit*
        name: Unit
        nameWithType: APerformanceProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
  GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit
        name: Unit
        nameWithType: IPerformanceProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit
        name: Unit
        nameWithType: IPerformanceProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake
        name: Awake
        nameWithType: AProvider<TProvidedData>.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake
        name: Awake
        nameWithType: AProvider(Of TProvidedData).Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake
  GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Awake:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake
        name: Awake
        nameWithType: AProvider<PerformanceData>.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<GUPS.EasyPerformanceMonitor.Provider.PerformanceData>.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake
        name: Awake
        nameWithType: AProvider(Of PerformanceData).Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of GUPS.EasyPerformanceMonitor.Provider.PerformanceData).Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake
    parent: GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}
    commentId: M:GUPS.EasyPerformanceMonitor.Provider.AProvider{GUPS.EasyPerformanceMonitor.Provider.PerformanceData}.Awake
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake*
        name: Awake
        nameWithType: APerformanceProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake*
        name: Awake
        nameWithType: APerformanceProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update*
        name: Update
        nameWithType: APerformanceProvider.Update
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update*
        name: Update
        nameWithType: APerformanceProvider.Update
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue*
        name: GetNextValue
        nameWithType: APerformanceProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue*
        name: GetNextValue
        nameWithType: APerformanceProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh*
        name: Refresh
        nameWithType: APerformanceProvider.Refresh
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh*
        name: Refresh
        nameWithType: APerformanceProvider.Refresh
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
        name: APerformanceProvider
        nameWithType: APerformanceProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
        name: APerformanceProvider
        nameWithType: APerformanceProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
  GUPS.EasyPerformanceMonitor.List{IObserver{IProvidedData}}:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.IObserver`1
        name: IObserver
        nameWithType: IObserver
        qualifiedName: IObserver
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.IProvidedData
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.IObserver`1
        name: IObserver
        nameWithType: IObserver
        qualifiedName: IObserver
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.IProvidedData
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.List`1
    commentId: '!:GUPS.EasyPerformanceMonitor.List{IObserver{IProvidedData}}'
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList*
        name: ObserverList
        nameWithType: AProvider<TProvidedData>.ObserverList
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.ObserverList
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList*
        name: ObserverList
        nameWithType: AProvider(Of TProvidedData).ObserverList
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).ObserverList
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name*
        name: Name
        nameWithType: AProvider<TProvidedData>.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name*
        name: Name
        nameWithType: AProvider(Of TProvidedData).Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).Name
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name
  GUPS.EasyPerformanceMonitor.Provider.IProvider.Name:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.Name
        name: Name
        nameWithType: IProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.Name
        name: Name
        nameWithType: IProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider.Name
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider.IProvider
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.IProvider.Name
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported*
        name: IsSupported
        nameWithType: AProvider<TProvidedData>.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported*
        name: IsSupported
        nameWithType: AProvider(Of TProvidedData).IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).IsSupported
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported
        name: IsSupported
        nameWithType: IProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported
        name: IsSupported
        nameWithType: IProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider.IProvider
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive*
        name: IsActive
        nameWithType: AProvider<TProvidedData>.IsActive
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.IsActive
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive*
        name: IsActive
        nameWithType: AProvider(Of TProvidedData).IsActive
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).IsActive
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive
  GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive
        name: IsActive
        nameWithType: IProvider.IsActive
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive
        name: IsActive
        nameWithType: IProvider.IsActive
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider.IProvider
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive
  GUPS.EasyPerformanceMonitor.Type:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Type
        name: Type
        nameWithType: Type
        qualifiedName: Type
        isExternal: true
      VB:
      - id: GUPS.EasyPerformanceMonitor.Type
        name: Type
        nameWithType: Type
        qualifiedName: Type
        isExternal: true
    isDefinition: true
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType*
        name: ProvidedDataType
        nameWithType: AProvider<TProvidedData>.ProvidedDataType
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.ProvidedDataType
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType*
        name: ProvidedDataType
        nameWithType: AProvider(Of TProvidedData).ProvidedDataType
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).ProvidedDataType
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType
  GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType
        name: ProvidedDataType
        nameWithType: IProvider.ProvidedDataType
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType
        name: ProvidedDataType
        nameWithType: IProvider.ProvidedDataType
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider.IProvider
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake*
        name: Awake
        nameWithType: AProvider<TProvidedData>.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake*
        name: Awake
        nameWithType: AProvider(Of TProvidedData).Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake
  GUPS.EasyPerformanceMonitor.IObserver`1:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.IObserver`1
        name: IObserver
        nameWithType: IObserver
        qualifiedName: IObserver
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.IObserver`1
        name: IObserver
        nameWithType: IObserver
        qualifiedName: IObserver
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  GUPS.EasyPerformanceMonitor.IObserver{IProvidedData}:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.IObserver`1
        name: IObserver
        nameWithType: IObserver
        qualifiedName: IObserver
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.IProvidedData
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.IObserver`1
        name: IObserver
        nameWithType: IObserver
        qualifiedName: IObserver
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.IProvidedData
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.IObserver`1
    commentId: '!:GUPS.EasyPerformanceMonitor.IObserver{IProvidedData}'
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe*
        name: Subscribe
        nameWithType: AProvider<TProvidedData>.Subscribe
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.Subscribe
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe*
        name: Subscribe
        nameWithType: AProvider(Of TProvidedData).Subscribe
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).Subscribe
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe
  GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose*
        name: Dispose
        nameWithType: AProvider<TProvidedData>.Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<TProvidedData>.Dispose
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose*
        name: Dispose
        nameWithType: AProvider(Of TProvidedData).Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of TProvidedData).Dispose
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose
  GUPS.EasyPerformanceMonitor.Provider.PerformanceData:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.PerformanceData
  GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble*
        name: IsScaleAble
        nameWithType: IPerformanceProvider.IsScaleAble
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble*
        name: IsScaleAble
        nameWithType: IPerformanceProvider.IsScaleAble
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.IsScaleAble
  GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor*
        name: ScaleFactor
        nameWithType: IPerformanceProvider.ScaleFactor
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor*
        name: ScaleFactor
        nameWithType: IPerformanceProvider.ScaleFactor
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleFactor
  GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes*
        name: ScaleSuffixes
        nameWithType: IPerformanceProvider.ScaleSuffixes
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes*
        name: ScaleSuffixes
        nameWithType: IPerformanceProvider.ScaleSuffixes
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.ScaleSuffixes
  GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit*
        name: Unit
        nameWithType: IPerformanceProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit*
        name: Unit
        nameWithType: IPerformanceProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.IPerformanceProvider.Unit
  GUPS.EasyPerformanceMonitor.Provider.IProvider.Name*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.Name*
        name: Name
        nameWithType: IProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.Name*
        name: Name
        nameWithType: IProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider.Name
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.IProvider.Name
  GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported*
        name: IsSupported
        nameWithType: IProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported*
        name: IsSupported
        nameWithType: IProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.IProvider.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive*
        name: IsActive
        nameWithType: IProvider.IsActive
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive*
        name: IsActive
        nameWithType: IProvider.IsActive
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.IProvider.IsActive
  GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType*
        name: ProvidedDataType
        nameWithType: IProvider.ProvidedDataType
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType*
        name: ProvidedDataType
        nameWithType: IProvider.ProvidedDataType
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.IProvider.ProvidedDataType
  GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider
        name: CpuFrameTimeProvider
        nameWithType: CpuFrameTimeProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider
        name: CpuFrameTimeProvider
        nameWithType: CpuFrameTimeProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
        name: IsScaleAble
        nameWithType: APerformanceProvider.IsScaleAble
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
        name: IsScaleAble
        nameWithType: APerformanceProvider.IsScaleAble
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.IsScaleAble
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
        name: ScaleFactor
        nameWithType: APerformanceProvider.ScaleFactor
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
        name: ScaleFactor
        nameWithType: APerformanceProvider.ScaleFactor
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleFactor
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
        name: ScaleSuffixes
        nameWithType: APerformanceProvider.ScaleSuffixes
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
        name: ScaleSuffixes
        nameWithType: APerformanceProvider.ScaleSuffixes
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.ScaleSuffixes
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
        name: Update
        nameWithType: APerformanceProvider.Update
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
        name: Update
        nameWithType: APerformanceProvider.Update
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    commentId: M:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Update
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
        name: Refresh
        nameWithType: APerformanceProvider.Refresh
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
        name: Refresh
        nameWithType: APerformanceProvider.Refresh
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    commentId: M:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Refresh
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Name*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Name*
        name: Name
        nameWithType: CpuFrameTimeProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Name*
        name: Name
        nameWithType: CpuFrameTimeProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Name
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Name
  GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.IsSupported*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.IsSupported*
        name: IsSupported
        nameWithType: CpuFrameTimeProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.IsSupported*
        name: IsSupported
        nameWithType: CpuFrameTimeProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.IsSupported
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
        name: Unit
        nameWithType: APerformanceProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
        name: Unit
        nameWithType: APerformanceProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Unit
  GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Unit*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Unit*
        name: Unit
        nameWithType: CpuFrameTimeProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Unit
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Unit*
        name: Unit
        nameWithType: CpuFrameTimeProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Unit
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Unit
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
        name: Awake
        nameWithType: APerformanceProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
        name: Awake
        nameWithType: APerformanceProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    commentId: M:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.Awake
  GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Awake*
        name: Awake
        nameWithType: CpuFrameTimeProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Awake*
        name: Awake
        nameWithType: CpuFrameTimeProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.Awake
  GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
        name: GetNextValue
        nameWithType: APerformanceProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
        name: GetNextValue
        nameWithType: APerformanceProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider
    commentId: M:GUPS.EasyPerformanceMonitor.Provider.APerformanceProvider.GetNextValue
  GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.GetNextValue*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.GetNextValue*
        name: GetNextValue
        nameWithType: CpuFrameTimeProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.GetNextValue
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.GetNextValue*
        name: GetNextValue
        nameWithType: CpuFrameTimeProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.GetNextValue
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.CpuFrameTimeProvider.GetNextValue
  GUPS.EasyPerformanceMonitor.Provider.FpsProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider
        name: FpsProvider
        nameWithType: FpsProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.FpsProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider
        name: FpsProvider
        nameWithType: FpsProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.FpsProvider
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.FpsProvider
  GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Name*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Name*
        name: Name
        nameWithType: FpsProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Name*
        name: Name
        nameWithType: FpsProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Name
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Name
  GUPS.EasyPerformanceMonitor.Provider.FpsProvider.IsSupported*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.IsSupported*
        name: IsSupported
        nameWithType: FpsProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.IsSupported*
        name: IsSupported
        nameWithType: FpsProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.IsSupported
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.FpsProvider.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Unit*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Unit*
        name: Unit
        nameWithType: FpsProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Unit
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Unit*
        name: Unit
        nameWithType: FpsProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Unit
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Unit
  GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Update*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Update*
        name: Update
        nameWithType: FpsProvider.Update
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Update
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Update*
        name: Update
        nameWithType: FpsProvider.Update
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Update
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.FpsProvider.Update
  GUPS.EasyPerformanceMonitor.Provider.FpsProvider.GetNextValue*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.GetNextValue*
        name: GetNextValue
        nameWithType: FpsProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.GetNextValue
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.GetNextValue*
        name: GetNextValue
        nameWithType: FpsProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.FpsProvider.GetNextValue
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.FpsProvider.GetNextValue
  GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider
        name: GpuFrameTimeProvider
        nameWithType: GpuFrameTimeProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider
        name: GpuFrameTimeProvider
        nameWithType: GpuFrameTimeProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider
  GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Name*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Name*
        name: Name
        nameWithType: GpuFrameTimeProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Name*
        name: Name
        nameWithType: GpuFrameTimeProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Name
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Name
  GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.IsSupported*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.IsSupported*
        name: IsSupported
        nameWithType: GpuFrameTimeProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.IsSupported*
        name: IsSupported
        nameWithType: GpuFrameTimeProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.IsSupported
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Unit*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Unit*
        name: Unit
        nameWithType: GpuFrameTimeProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Unit
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Unit*
        name: Unit
        nameWithType: GpuFrameTimeProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Unit
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Unit
  GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Awake*
        name: Awake
        nameWithType: GpuFrameTimeProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Awake*
        name: Awake
        nameWithType: GpuFrameTimeProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Awake
  GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Update*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Update*
        name: Update
        nameWithType: GpuFrameTimeProvider.Update
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Update
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Update*
        name: Update
        nameWithType: GpuFrameTimeProvider.Update
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Update
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.Update
  GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.GetNextValue*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.GetNextValue*
        name: GetNextValue
        nameWithType: GpuFrameTimeProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.GetNextValue
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.GetNextValue*
        name: GetNextValue
        nameWithType: GpuFrameTimeProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.GetNextValue
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuFrameTimeProvider.GetNextValue
  GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Name*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Name*
        name: Name
        nameWithType: GpuDrawCallsProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Name*
        name: Name
        nameWithType: GpuDrawCallsProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Name
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Name
  GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.IsSupported*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.IsSupported*
        name: IsSupported
        nameWithType: GpuDrawCallsProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.IsSupported*
        name: IsSupported
        nameWithType: GpuDrawCallsProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.IsSupported
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Unit*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Unit*
        name: Unit
        nameWithType: GpuDrawCallsProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Unit
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Unit*
        name: Unit
        nameWithType: GpuDrawCallsProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Unit
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Unit
  GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Awake*
        name: Awake
        nameWithType: GpuDrawCallsProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Awake*
        name: Awake
        nameWithType: GpuDrawCallsProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.Awake
  GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.GetNextValue*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.GetNextValue*
        name: GetNextValue
        nameWithType: GpuDrawCallsProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.GetNextValue
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.GetNextValue*
        name: GetNextValue
        nameWithType: GpuDrawCallsProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.GetNextValue
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider.GetNextValue
  GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider
        name: GpuDrawCallsProvider
        nameWithType: GpuDrawCallsProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider
        name: GpuDrawCallsProvider
        nameWithType: GpuDrawCallsProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.GpuDrawCallsProvider
  GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider
        name: GpuTrianglesProvider
        nameWithType: GpuTrianglesProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider
        name: GpuTrianglesProvider
        nameWithType: GpuTrianglesProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider
  GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Name*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Name*
        name: Name
        nameWithType: GpuTrianglesProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Name*
        name: Name
        nameWithType: GpuTrianglesProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Name
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Name
  GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.IsSupported*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.IsSupported*
        name: IsSupported
        nameWithType: GpuTrianglesProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.IsSupported*
        name: IsSupported
        nameWithType: GpuTrianglesProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.IsSupported
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Unit*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Unit*
        name: Unit
        nameWithType: GpuTrianglesProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Unit
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Unit*
        name: Unit
        nameWithType: GpuTrianglesProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Unit
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Unit
  GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Awake*
        name: Awake
        nameWithType: GpuTrianglesProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Awake*
        name: Awake
        nameWithType: GpuTrianglesProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.Awake
  GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.GetNextValue*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.GetNextValue*
        name: GetNextValue
        nameWithType: GpuTrianglesProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.GetNextValue
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.GetNextValue*
        name: GetNextValue
        nameWithType: GpuTrianglesProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.GetNextValue
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuTrianglesProvider.GetNextValue
  GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider
        name: GpuVerticesProvider
        nameWithType: GpuVerticesProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider
        name: GpuVerticesProvider
        nameWithType: GpuVerticesProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider
  GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Name*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Name*
        name: Name
        nameWithType: GpuVerticesProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Name*
        name: Name
        nameWithType: GpuVerticesProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Name
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Name
  GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.IsSupported*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.IsSupported*
        name: IsSupported
        nameWithType: GpuVerticesProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.IsSupported*
        name: IsSupported
        nameWithType: GpuVerticesProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.IsSupported
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Unit*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Unit*
        name: Unit
        nameWithType: GpuVerticesProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Unit
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Unit*
        name: Unit
        nameWithType: GpuVerticesProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Unit
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Unit
  GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Awake*
        name: Awake
        nameWithType: GpuVerticesProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Awake*
        name: Awake
        nameWithType: GpuVerticesProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.Awake
  GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.GetNextValue*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.GetNextValue*
        name: GetNextValue
        nameWithType: GpuVerticesProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.GetNextValue
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.GetNextValue*
        name: GetNextValue
        nameWithType: GpuVerticesProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.GetNextValue
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GpuVerticesProvider.GetNextValue
  GUPS.EasyPerformanceMonitor.Provider.MemoryProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider
        name: MemoryProvider
        nameWithType: MemoryProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider
        name: MemoryProvider
        nameWithType: MemoryProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.MemoryProvider
  GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Name*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Name*
        name: Name
        nameWithType: MemoryProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Name*
        name: Name
        nameWithType: MemoryProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Name
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Name
  GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.IsSupported*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.IsSupported*
        name: IsSupported
        nameWithType: MemoryProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.IsSupported*
        name: IsSupported
        nameWithType: MemoryProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.IsSupported
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Unit*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Unit*
        name: Unit
        nameWithType: MemoryProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Unit
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Unit*
        name: Unit
        nameWithType: MemoryProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Unit
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.Unit
  GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.GetNextValue*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.GetNextValue*
        name: GetNextValue
        nameWithType: MemoryProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.GetNextValue
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.GetNextValue*
        name: GetNextValue
        nameWithType: MemoryProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.GetNextValue
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.MemoryProvider.GetNextValue
  GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider
        name: DownloadSpeedProvider
        nameWithType: DownloadSpeedProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider
        name: DownloadSpeedProvider
        nameWithType: DownloadSpeedProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider
  GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Name*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Name*
        name: Name
        nameWithType: DownloadSpeedProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Name*
        name: Name
        nameWithType: DownloadSpeedProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Name
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Name
  GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.IsSupported*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.IsSupported*
        name: IsSupported
        nameWithType: DownloadSpeedProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.IsSupported*
        name: IsSupported
        nameWithType: DownloadSpeedProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.IsSupported
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Unit*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Unit*
        name: Unit
        nameWithType: DownloadSpeedProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Unit
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Unit*
        name: Unit
        nameWithType: DownloadSpeedProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Unit
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Unit
  GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Awake*
        name: Awake
        nameWithType: DownloadSpeedProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Awake*
        name: Awake
        nameWithType: DownloadSpeedProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.Awake
  GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.GetNextValue*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.GetNextValue*
        name: GetNextValue
        nameWithType: DownloadSpeedProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.GetNextValue
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.GetNextValue*
        name: GetNextValue
        nameWithType: DownloadSpeedProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.GetNextValue
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.DownloadSpeedProvider.GetNextValue
  GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider
        name: UploadSpeedProvider
        nameWithType: UploadSpeedProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider
        name: UploadSpeedProvider
        nameWithType: UploadSpeedProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider
  GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Name*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Name*
        name: Name
        nameWithType: UploadSpeedProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Name*
        name: Name
        nameWithType: UploadSpeedProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Name
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Name
  GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.IsSupported*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.IsSupported*
        name: IsSupported
        nameWithType: UploadSpeedProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.IsSupported*
        name: IsSupported
        nameWithType: UploadSpeedProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.IsSupported
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Unit*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Unit*
        name: Unit
        nameWithType: UploadSpeedProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Unit
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Unit*
        name: Unit
        nameWithType: UploadSpeedProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Unit
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Unit
  GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Awake*
        name: Awake
        nameWithType: UploadSpeedProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Awake*
        name: Awake
        nameWithType: UploadSpeedProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.Awake
  GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.GetNextValue*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.GetNextValue*
        name: GetNextValue
        nameWithType: UploadSpeedProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.GetNextValue
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.GetNextValue*
        name: GetNextValue
        nameWithType: UploadSpeedProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.GetNextValue
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.UploadSpeedProvider.GetNextValue
  GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider
        name: GameObjectTagCountProvider
        nameWithType: GameObjectTagCountProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider
        name: GameObjectTagCountProvider
        nameWithType: GameObjectTagCountProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider
  GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Name*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Name*
        name: Name
        nameWithType: GameObjectTagCountProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Name*
        name: Name
        nameWithType: GameObjectTagCountProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Name
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Name
  GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.IsSupported*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.IsSupported*
        name: IsSupported
        nameWithType: GameObjectTagCountProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.IsSupported*
        name: IsSupported
        nameWithType: GameObjectTagCountProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.IsSupported
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Unit*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Unit*
        name: Unit
        nameWithType: GameObjectTagCountProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Unit
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Unit*
        name: Unit
        nameWithType: GameObjectTagCountProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Unit
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Unit
  GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Awake*
        name: Awake
        nameWithType: GameObjectTagCountProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Awake*
        name: Awake
        nameWithType: GameObjectTagCountProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.Awake
  GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.GetNextValue*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.GetNextValue*
        name: GetNextValue
        nameWithType: GameObjectTagCountProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.GetNextValue
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.GetNextValue*
        name: GetNextValue
        nameWithType: GameObjectTagCountProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.GetNextValue
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.GameObjectTagCountProvider.GetNextValue
  GUPS.EasyPerformanceMonitor.IProvidedData`1:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.IProvidedData`1
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.IProvidedData`1
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:GUPS.EasyPerformanceMonitor.IProvidedData`1'
  GUPS.EasyPerformanceMonitor.IProvidedData{System.Single}:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.IProvidedData`1
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.IProvidedData`1
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.IProvidedData`1
    commentId: '!:GUPS.EasyPerformanceMonitor.IProvidedData{System.Single}'
  GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Sender*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Sender*
        name: Sender
        nameWithType: PerformanceData.Sender
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Sender
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Sender*
        name: Sender
        nameWithType: PerformanceData.Sender
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Sender
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Sender
  GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Value*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Value*
        name: Value
        nameWithType: PerformanceData.Value
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Value
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Value*
        name: Value
        nameWithType: PerformanceData.Value
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Value
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.PerformanceData.Value
  GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MinValue*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MinValue*
        name: MinValue
        nameWithType: PerformanceData.MinValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MinValue
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MinValue*
        name: MinValue
        nameWithType: PerformanceData.MinValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MinValue
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MinValue
  GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MeanValue*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MeanValue*
        name: MeanValue
        nameWithType: PerformanceData.MeanValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MeanValue
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MeanValue*
        name: MeanValue
        nameWithType: PerformanceData.MeanValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MeanValue
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MeanValue
  GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MaxValue*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MaxValue*
        name: MaxValue
        nameWithType: PerformanceData.MaxValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MaxValue
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MaxValue*
        name: MaxValue
        nameWithType: PerformanceData.MaxValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MaxValue
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.PerformanceData.MaxValue
  GUPS.EasyPerformanceMonitor.Provider.PerformanceData.ValueCount*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.ValueCount*
        name: ValueCount
        nameWithType: PerformanceData.ValueCount
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.ValueCount
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.ValueCount*
        name: ValueCount
        nameWithType: PerformanceData.ValueCount
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.ValueCount
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.PerformanceData.ValueCount
  GUPS.EasyPerformanceMonitor.Provider.PerformanceData.#ctor*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.#ctor*
        name: PerformanceData
        nameWithType: PerformanceData.PerformanceData
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.PerformanceData
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.#ctor*
        name: PerformanceData
        nameWithType: PerformanceData.PerformanceData
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.PerformanceData.PerformanceData
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.PerformanceData.#ctor
  GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory
        name: ProfilingCategory
        nameWithType: ProfilingCategory
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory
        name: ProfilingCategory
        nameWithType: ProfilingCategory
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory
  GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.AvailableCategories:
    commentId: F:GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.AvailableCategories
  GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Category*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Category*
        name: Category
        nameWithType: ProfilingCategory.Category
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Category
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Category*
        name: Category
        nameWithType: ProfilingCategory.Category
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Category
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Category
  GUPS.EasyPerformanceMonitor.List{String}:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.String
        name: String
        nameWithType: String
        qualifiedName: String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.String
        name: String
        nameWithType: String
        qualifiedName: String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.List`1
    commentId: '!:GUPS.EasyPerformanceMonitor.List{String}'
  GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Status*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Status*
        name: Status
        nameWithType: ProfilingCategory.Status
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Status
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Status*
        name: Status
        nameWithType: ProfilingCategory.Status
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Status
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.Status
  GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.#ctor*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.#ctor*
        name: ProfilingCategory
        nameWithType: ProfilingCategory.ProfilingCategory
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.ProfilingCategory
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.#ctor*
        name: ProfilingCategory
        nameWithType: ProfilingCategory.ProfilingCategory
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.ProfilingCategory
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory.#ctor
  GUPS.EasyPerformanceMonitor.List{GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory}:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory
        name: ProfilingCategory
        nameWithType: ProfilingCategory
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory
        name: ProfilingCategory
        nameWithType: ProfilingCategory
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.List`1
    commentId: '!:GUPS.EasyPerformanceMonitor.List{GUPS.EasyPerformanceMonitor.Provider.ProfilingCategory}'
  GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Name*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Name*
        name: Name
        nameWithType: UnityProfilerProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Name*
        name: Name
        nameWithType: UnityProfilerProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Name
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Name
  GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.IsSupported*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.IsSupported*
        name: IsSupported
        nameWithType: UnityProfilerProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.IsSupported*
        name: IsSupported
        nameWithType: UnityProfilerProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.IsSupported
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Unit*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Unit*
        name: Unit
        nameWithType: UnityProfilerProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Unit
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Unit*
        name: Unit
        nameWithType: UnityProfilerProvider.Unit
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Unit
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Unit
  GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Awake*
        name: Awake
        nameWithType: UnityProfilerProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Awake*
        name: Awake
        nameWithType: UnityProfilerProvider.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Awake
  GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.GetNextValue*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.GetNextValue*
        name: GetNextValue
        nameWithType: UnityProfilerProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.GetNextValue
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.GetNextValue*
        name: GetNextValue
        nameWithType: UnityProfilerProvider.GetNextValue
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.GetNextValue
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.GetNextValue
  GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Refresh*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Refresh*
        name: Refresh
        nameWithType: UnityProfilerProvider.Refresh
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Refresh
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Refresh*
        name: Refresh
        nameWithType: UnityProfilerProvider.Refresh
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Refresh
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider.Refresh
  GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider
        name: UnityProfilerProvider
        nameWithType: UnityProfilerProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider
        name: UnityProfilerProvider
        nameWithType: UnityProfilerProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.UnityProfilerProvider
  GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1
        name: AProvider
        nameWithType: AProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.IProvidedData`1
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.String
        name: String
        nameWithType: String
        qualifiedName: String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1
        name: AProvider
        nameWithType: AProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.IProvidedData`1
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.String
        name: String
        nameWithType: String
        qualifiedName: String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1
    parent: GUPS.EasyPerformanceMonitor.Provider
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}
  GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.ObserverList:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList
        name: ObserverList
        nameWithType: AProvider<IProvidedData<String>>.ObserverList
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<IProvidedData<String>>.ObserverList
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList
        name: ObserverList
        nameWithType: AProvider(Of IProvidedData(Of String)).ObserverList
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of IProvidedData(Of String)).ObserverList
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ObserverList
    parent: GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.ObserverList
  GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.IsActive:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive
        name: IsActive
        nameWithType: AProvider<IProvidedData<String>>.IsActive
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<IProvidedData<String>>.IsActive
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive
        name: IsActive
        nameWithType: AProvider(Of IProvidedData(Of String)).IsActive
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of IProvidedData(Of String)).IsActive
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsActive
    parent: GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.IsActive
  GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.ProvidedDataType:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType
        name: ProvidedDataType
        nameWithType: AProvider<IProvidedData<String>>.ProvidedDataType
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<IProvidedData<String>>.ProvidedDataType
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType
        name: ProvidedDataType
        nameWithType: AProvider(Of IProvidedData(Of String)).ProvidedDataType
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of IProvidedData(Of String)).ProvidedDataType
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.ProvidedDataType
    parent: GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.ProvidedDataType
  GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.Awake:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake
        name: Awake
        nameWithType: AProvider<IProvidedData<String>>.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<IProvidedData<String>>.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake
        name: Awake
        nameWithType: AProvider(Of IProvidedData(Of String)).Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of IProvidedData(Of String)).Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Awake
    parent: GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}
    commentId: M:GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.Awake
  GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.Subscribe(IObserver{IProvidedData}):
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe(IObserver{IProvidedData})
        name: Subscribe
        nameWithType: AProvider<IProvidedData<String>>.Subscribe
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<IProvidedData<String>>.Subscribe
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.IObserver`1
        name: IObserver
        nameWithType: IObserver
        qualifiedName: IObserver
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.IProvidedData
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe(IObserver{IProvidedData})
        name: Subscribe
        nameWithType: AProvider(Of IProvidedData(Of String)).Subscribe
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of IProvidedData(Of String)).Subscribe
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.IObserver`1
        name: IObserver
        nameWithType: IObserver
        qualifiedName: IObserver
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.IProvidedData
        name: IProvidedData
        nameWithType: IProvidedData
        qualifiedName: IProvidedData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Subscribe(IObserver{IProvidedData})
    parent: GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}
    commentId: M:GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.Subscribe(IObserver{IProvidedData})
  GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.Dispose:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose
        name: Dispose
        nameWithType: AProvider<IProvidedData<String>>.Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<IProvidedData<String>>.Dispose
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose
        name: Dispose
        nameWithType: AProvider(Of IProvidedData(Of String)).Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of IProvidedData(Of String)).Dispose
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Dispose
    parent: GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}
    commentId: M:GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.Dispose
  GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.Name:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name
        name: Name
        nameWithType: AProvider<IProvidedData<String>>.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<IProvidedData<String>>.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name
        name: Name
        nameWithType: AProvider(Of IProvidedData(Of String)).Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of IProvidedData(Of String)).Name
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.Name
    parent: GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.Name
  GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Name*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Name*
        name: Name
        nameWithType: OperatingSystemProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Name*
        name: Name
        nameWithType: OperatingSystemProvider.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Name
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Name
  GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.IsSupported:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported
        name: IsSupported
        nameWithType: AProvider<IProvidedData<String>>.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider<IProvidedData<String>>.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported
        name: IsSupported
        nameWithType: AProvider(Of IProvidedData(Of String)).IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.AProvider(Of IProvidedData(Of String)).IsSupported
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Provider.AProvider`1.IsSupported
    parent: GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}
    commentId: P:GUPS.EasyPerformanceMonitor.Provider.AProvider{IProvidedData{String}}.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.IsSupported*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.IsSupported*
        name: IsSupported
        nameWithType: OperatingSystemProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.IsSupported
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.IsSupported*
        name: IsSupported
        nameWithType: OperatingSystemProvider.IsSupported
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.IsSupported
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.IsSupported
  GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Start*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Start*
        name: Start
        nameWithType: OperatingSystemProvider.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Start
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Start*
        name: Start
        nameWithType: OperatingSystemProvider.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Start
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider.Start
  GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider
        name: OperatingSystemProvider
        nameWithType: OperatingSystemProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider
        name: OperatingSystemProvider
        nameWithType: OperatingSystemProvider
        qualifiedName: GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Provider.OperatingSystemProvider
  GUPS.EasyPerformanceMonitor.List{IProvider}:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.IProvider
        name: IProvider
        nameWithType: IProvider
        qualifiedName: IProvider
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.IProvider
        name: IProvider
        nameWithType: IProvider
        qualifiedName: IProvider
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.List`1
    commentId: '!:GUPS.EasyPerformanceMonitor.List{IProvider}'
  GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider*
        name: Provider
        nameWithType: IRenderer.Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider*
        name: Provider
        nameWithType: IRenderer.Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
  GUPS.EasyPerformanceMonitor.Renderer.IRenderer:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IRenderer
        name: IRenderer
        nameWithType: IRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IRenderer
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IRenderer
        name: IRenderer
        nameWithType: IRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.IRenderer
  GUPS.EasyPerformanceMonitor.Renderer.BarRenderer:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer
        name: BarRenderer
        nameWithType: BarRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer
        name: BarRenderer
        nameWithType: BarRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer
  GUPS.EasyPerformanceMonitor.Renderer:
    name:
      CSharp:
      - name: GUPS.EasyPerformanceMonitor.Renderer
        nameWithType: GUPS.EasyPerformanceMonitor.Renderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer
      VB:
      - name: GUPS.EasyPerformanceMonitor.Renderer
        nameWithType: GUPS.EasyPerformanceMonitor.Renderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer
    isDefinition: true
    commentId: N:GUPS.EasyPerformanceMonitor.Renderer
  GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer
        name: IBarRenderer
        nameWithType: IBarRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer
        name: IBarRenderer
        nameWithType: IBarRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer
  GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Provider*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Provider*
        name: Provider
        nameWithType: BarRenderer.Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Provider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Provider*
        name: Provider
        nameWithType: BarRenderer.Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Provider
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Provider
  GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
        name: Provider
        nameWithType: IRenderer.Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
        name: Provider
        nameWithType: IRenderer.Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.IRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.IRenderer.Provider
  GUPS.EasyPerformanceMonitor.UnityEngine.UI.Text:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Text
        name: UnityEngine.UI.Text
        nameWithType: UnityEngine.UI.Text
        qualifiedName: UnityEngine.UI.Text
        isExternal: true
      VB:
      - id: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Text
        name: UnityEngine.UI.Text
        nameWithType: UnityEngine.UI.Text
        qualifiedName: UnityEngine.UI.Text
        isExternal: true
    isDefinition: true
  GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Awake*
        name: Awake
        nameWithType: BarRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Awake*
        name: Awake
        nameWithType: BarRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Awake
  GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Start*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Start*
        name: Start
        nameWithType: BarRenderer.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Start
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Start*
        name: Start
        nameWithType: BarRenderer.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Start
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Start
  GUPS.EasyPerformanceMonitor.PerformanceData:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: PerformanceData
        isExternal: true
      VB:
      - id: GUPS.EasyPerformanceMonitor.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: PerformanceData
        isExternal: true
    isDefinition: true
  GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnNext*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnNext*
        name: OnNext
        nameWithType: BarRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnNext
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnNext*
        name: OnNext
        nameWithType: BarRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnNext
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnNext
  GUPS.EasyPerformanceMonitor.Exception:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      VB:
      - id: GUPS.EasyPerformanceMonitor.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
    isDefinition: true
  GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnError*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnError*
        name: OnError
        nameWithType: BarRenderer.OnError
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnError
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnError*
        name: OnError
        nameWithType: BarRenderer.OnError
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnError
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnError
  GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnCompleted*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnCompleted*
        name: OnCompleted
        nameWithType: BarRenderer.OnCompleted
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnCompleted
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnCompleted*
        name: OnCompleted
        nameWithType: BarRenderer.OnCompleted
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnCompleted
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnCompleted
  GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Dispose*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Dispose*
        name: Dispose
        nameWithType: BarRenderer.Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Dispose
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Dispose*
        name: Dispose
        nameWithType: BarRenderer.Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Dispose
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.Dispose
  GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnDestroy*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnDestroy*
        name: OnDestroy
        nameWithType: BarRenderer.OnDestroy
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnDestroy
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnDestroy*
        name: OnDestroy
        nameWithType: BarRenderer.OnDestroy
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnDestroy
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.OnDestroy
  GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.RefreshBar*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.RefreshBar*
        name: RefreshBar
        nameWithType: BarRenderer.RefreshBar
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.RefreshBar
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.RefreshBar*
        name: RefreshBar
        nameWithType: BarRenderer.RefreshBar
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.RefreshBar
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.BarRenderer.RefreshBar
  GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar
        name: RefreshBar
        nameWithType: IBarRenderer.RefreshBar
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar
        name: RefreshBar
        nameWithType: IBarRenderer.RefreshBar
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar
  GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar*
        name: RefreshBar
        nameWithType: IBarRenderer.RefreshBar
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar*
        name: RefreshBar
        nameWithType: IBarRenderer.RefreshBar
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.IBarRenderer.RefreshBar
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
        name: AGraphRenderer
        nameWithType: AGraphRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
        name: AGraphRenderer
        nameWithType: AGraphRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
  GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
        name: IGraphRenderer
        nameWithType: IGraphRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
        name: IGraphRenderer
        nameWithType: IGraphRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider*
        name: Provider
        nameWithType: AGraphRenderer.Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider*
        name: Provider
        nameWithType: AGraphRenderer.Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
  GUPS.EasyPerformanceMonitor.UnityEngine.UI.Image:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Image
        name: UnityEngine.UI.Image
        nameWithType: UnityEngine.UI.Image
        qualifiedName: UnityEngine.UI.Image
        isExternal: true
      VB:
      - id: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Image
        name: UnityEngine.UI.Image
        nameWithType: UnityEngine.UI.Image
        qualifiedName: UnityEngine.UI.Image
        isExternal: true
    isDefinition: true
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target*
        name: Target
        nameWithType: AGraphRenderer.Target
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target*
        name: Target
        nameWithType: AGraphRenderer.Target
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
  GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target
        name: Target
        nameWithType: IGraphRenderer.Target
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target
        name: Target
        nameWithType: IGraphRenderer.Target
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target
  GUPS.EasyPerformanceMonitor.Shader:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Shader
        name: Shader
        nameWithType: Shader
        qualifiedName: Shader
        isExternal: true
      VB:
      - id: GUPS.EasyPerformanceMonitor.Shader
        name: Shader
        nameWithType: Shader
        qualifiedName: Shader
        isExternal: true
    isDefinition: true
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader*
        name: GraphShader
        nameWithType: AGraphRenderer.GraphShader
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader*
        name: GraphShader
        nameWithType: AGraphRenderer.GraphShader
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
  GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader
        name: GraphShader
        nameWithType: IGraphRenderer.GraphShader
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader
        name: GraphShader
        nameWithType: IGraphRenderer.GraphShader
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine*
        name: IsLine
        nameWithType: AGraphRenderer.IsLine
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine*
        name: IsLine
        nameWithType: AGraphRenderer.IsLine
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
  GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine
        name: IsLine
        nameWithType: IGraphRenderer.IsLine
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine
        name: IsLine
        nameWithType: IGraphRenderer.IsLine
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth*
        name: IsSmooth
        nameWithType: AGraphRenderer.IsSmooth
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth*
        name: IsSmooth
        nameWithType: AGraphRenderer.IsSmooth
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
  GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth
        name: IsSmooth
        nameWithType: IGraphRenderer.IsSmooth
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth
        name: IsSmooth
        nameWithType: IGraphRenderer.IsSmooth
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing*
        name: HasAntiAliasing
        nameWithType: AGraphRenderer.HasAntiAliasing
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing*
        name: HasAntiAliasing
        nameWithType: AGraphRenderer.HasAntiAliasing
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
  GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing
        name: HasAntiAliasing
        nameWithType: IGraphRenderer.HasAntiAliasing
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing
        name: HasAntiAliasing
        nameWithType: IGraphRenderer.HasAntiAliasing
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues*
        name: GraphValues
        nameWithType: AGraphRenderer.GraphValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues*
        name: GraphValues
        nameWithType: AGraphRenderer.GraphValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
  GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues
        name: GraphValues
        nameWithType: IGraphRenderer.GraphValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues
        name: GraphValues
        nameWithType: IGraphRenderer.GraphValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake*
        name: Awake
        nameWithType: AGraphRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake*
        name: Awake
        nameWithType: AGraphRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start*
        name: Start
        nameWithType: AGraphRenderer.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start*
        name: Start
        nameWithType: AGraphRenderer.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph*
        name: InitializeGraph
        nameWithType: AGraphRenderer.InitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph*
        name: InitializeGraph
        nameWithType: AGraphRenderer.InitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph*
        name: OnInitializeGraph
        nameWithType: AGraphRenderer.OnInitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph*
        name: OnInitializeGraph
        nameWithType: AGraphRenderer.OnInitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph*
        name: RefreshGraph
        nameWithType: AGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph*
        name: RefreshGraph
        nameWithType: AGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph
  GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph
        name: RefreshGraph
        nameWithType: IGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph
        name: RefreshGraph
        nameWithType: IGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext*
        name: OnNext
        nameWithType: AGraphRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext*
        name: OnNext
        nameWithType: AGraphRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError*
        name: OnError
        nameWithType: AGraphRenderer.OnError
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError*
        name: OnError
        nameWithType: AGraphRenderer.OnError
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted*
        name: OnCompleted
        nameWithType: AGraphRenderer.OnCompleted
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted*
        name: OnCompleted
        nameWithType: AGraphRenderer.OnCompleted
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose*
        name: Dispose
        nameWithType: AGraphRenderer.Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose*
        name: Dispose
        nameWithType: AGraphRenderer.Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy*
        name: OnDestroy
        nameWithType: AGraphRenderer.OnDestroy
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy*
        name: OnDestroy
        nameWithType: AGraphRenderer.OnDestroy
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
        name: AMultiGraphRenderer
        nameWithType: AMultiGraphRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
        name: AMultiGraphRenderer
        nameWithType: AMultiGraphRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
        name: Provider
        nameWithType: AGraphRenderer.Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
        name: Provider
        nameWithType: AGraphRenderer.Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Provider
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
        name: Target
        nameWithType: AGraphRenderer.Target
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
        name: Target
        nameWithType: AGraphRenderer.Target
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Target
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
        name: GraphShader
        nameWithType: AGraphRenderer.GraphShader
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
        name: GraphShader
        nameWithType: AGraphRenderer.GraphShader
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphShader
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
        name: IsLine
        nameWithType: AGraphRenderer.IsLine
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
        name: IsLine
        nameWithType: AGraphRenderer.IsLine
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsLine
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
        name: IsSmooth
        nameWithType: AGraphRenderer.IsSmooth
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
        name: IsSmooth
        nameWithType: AGraphRenderer.IsSmooth
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.IsSmooth
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
        name: HasAntiAliasing
        nameWithType: AGraphRenderer.HasAntiAliasing
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
        name: HasAntiAliasing
        nameWithType: AGraphRenderer.HasAntiAliasing
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.HasAntiAliasing
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValues:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValues
        name: CMaxGraphValues
        nameWithType: AGraphRenderer.CMaxGraphValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValues
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValues
        name: CMaxGraphValues
        nameWithType: AGraphRenderer.CMaxGraphValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValues
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: F:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValues
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValuesMobile:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValuesMobile
        name: CMaxGraphValuesMobile
        nameWithType: AGraphRenderer.CMaxGraphValuesMobile
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValuesMobile
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValuesMobile
        name: CMaxGraphValuesMobile
        nameWithType: AGraphRenderer.CMaxGraphValuesMobile
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValuesMobile
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: F:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.CMaxGraphValuesMobile
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
        name: GraphValues
        nameWithType: AGraphRenderer.GraphValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
        name: GraphValues
        nameWithType: AGraphRenderer.GraphValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.GraphValues
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.LinePropertyId:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.LinePropertyId
        name: LinePropertyId
        nameWithType: AGraphRenderer.LinePropertyId
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.LinePropertyId
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.LinePropertyId
        name: LinePropertyId
        nameWithType: AGraphRenderer.LinePropertyId
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.LinePropertyId
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: F:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.LinePropertyId
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.SmoothPropertyId:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.SmoothPropertyId
        name: SmoothPropertyId
        nameWithType: AGraphRenderer.SmoothPropertyId
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.SmoothPropertyId
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.SmoothPropertyId
        name: SmoothPropertyId
        nameWithType: AGraphRenderer.SmoothPropertyId
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.SmoothPropertyId
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: F:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.SmoothPropertyId
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.AntiAliasingPropertyId:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.AntiAliasingPropertyId
        name: AntiAliasingPropertyId
        nameWithType: AGraphRenderer.AntiAliasingPropertyId
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.AntiAliasingPropertyId
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.AntiAliasingPropertyId
        name: AntiAliasingPropertyId
        nameWithType: AGraphRenderer.AntiAliasingPropertyId
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.AntiAliasingPropertyId
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: F:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.AntiAliasingPropertyId
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValuesPropertyId:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValuesPropertyId
        name: ValuesPropertyId
        nameWithType: AGraphRenderer.ValuesPropertyId
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValuesPropertyId
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValuesPropertyId
        name: ValuesPropertyId
        nameWithType: AGraphRenderer.ValuesPropertyId
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValuesPropertyId
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: F:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValuesPropertyId
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValueCountPropertyId:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValueCountPropertyId
        name: ValueCountPropertyId
        nameWithType: AGraphRenderer.ValueCountPropertyId
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValueCountPropertyId
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValueCountPropertyId
        name: ValueCountPropertyId
        nameWithType: AGraphRenderer.ValueCountPropertyId
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValueCountPropertyId
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: F:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.ValueCountPropertyId
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start
        name: Start
        nameWithType: AGraphRenderer.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start
        name: Start
        nameWithType: AGraphRenderer.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Start
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph(Shader):
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph(Shader)
        name: InitializeGraph
        nameWithType: AGraphRenderer.InitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.Shader
        name: Shader
        nameWithType: Shader
        qualifiedName: Shader
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph(Shader)
        name: InitializeGraph
        nameWithType: AGraphRenderer.InitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.Shader
        name: Shader
        nameWithType: Shader
        qualifiedName: Shader
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.InitializeGraph(Shader)
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError(Exception):
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError(Exception)
        name: OnError
        nameWithType: AGraphRenderer.OnError
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError(Exception)
        name: OnError
        nameWithType: AGraphRenderer.OnError
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnError(Exception)
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted
        name: OnCompleted
        nameWithType: AGraphRenderer.OnCompleted
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted
        name: OnCompleted
        nameWithType: AGraphRenderer.OnCompleted
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnCompleted
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose
        name: Dispose
        nameWithType: AGraphRenderer.Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose
        name: Dispose
        nameWithType: AGraphRenderer.Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Dispose
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy
        name: OnDestroy
        nameWithType: AGraphRenderer.OnDestroy
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy
        name: OnDestroy
        nameWithType: AGraphRenderer.OnDestroy
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnDestroy
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked*
        name: IsStacked
        nameWithType: AMultiGraphRenderer.IsStacked
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked*
        name: IsStacked
        nameWithType: AMultiGraphRenderer.IsStacked
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked
  GUPS.EasyPerformanceMonitor.List{UnityEngine.UI.Image}:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Image
        name: UnityEngine.UI.Image
        nameWithType: UnityEngine.UI.Image
        qualifiedName: UnityEngine.UI.Image
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Image
        name: UnityEngine.UI.Image
        nameWithType: UnityEngine.UI.Image
        qualifiedName: UnityEngine.UI.Image
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.List`1
    commentId: '!:GUPS.EasyPerformanceMonitor.List{UnityEngine.UI.Image}'
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages*
        name: LegendImages
        nameWithType: AMultiGraphRenderer.LegendImages
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages*
        name: LegendImages
        nameWithType: AMultiGraphRenderer.LegendImages
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages
  System.Single[,]:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '[,]'
        nameWithType: '[,]'
        qualifiedName: '[,]'
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: (,)
        nameWithType: (,)
        qualifiedName: (,)
    isDefinition: false
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values*
        name: Values
        nameWithType: AMultiGraphRenderer.Values
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values*
        name: Values
        nameWithType: AMultiGraphRenderer.Values
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values
  System.Single[]:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues*
        name: MinValues
        nameWithType: AMultiGraphRenderer.MinValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues*
        name: MinValues
        nameWithType: AMultiGraphRenderer.MinValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues*
        name: MaxValues
        nameWithType: AMultiGraphRenderer.MaxValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues*
        name: MaxValues
        nameWithType: AMultiGraphRenderer.MaxValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues*
        name: MeanValues
        nameWithType: AMultiGraphRenderer.MeanValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues*
        name: MeanValues
        nameWithType: AMultiGraphRenderer.MeanValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake
        name: Awake
        nameWithType: AGraphRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake
        name: Awake
        nameWithType: AGraphRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.Awake
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake*
        name: Awake
        nameWithType: AMultiGraphRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake*
        name: Awake
        nameWithType: AMultiGraphRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph(Shader):
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph(Shader)
        name: OnInitializeGraph
        nameWithType: AGraphRenderer.OnInitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.Shader
        name: Shader
        nameWithType: Shader
        qualifiedName: Shader
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph(Shader)
        name: OnInitializeGraph
        nameWithType: AGraphRenderer.OnInitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.Shader
        name: Shader
        nameWithType: Shader
        qualifiedName: Shader
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnInitializeGraph(Shader)
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph*
        name: OnInitializeGraph
        nameWithType: AMultiGraphRenderer.OnInitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph*
        name: OnInitializeGraph
        nameWithType: AMultiGraphRenderer.OnInitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph
        name: RefreshGraph
        nameWithType: AGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph
        name: RefreshGraph
        nameWithType: AGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.RefreshGraph
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph*
        name: RefreshGraph
        nameWithType: AMultiGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph*
        name: RefreshGraph
        nameWithType: AMultiGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph
  GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext(PerformanceData):
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext(PerformanceData)
        name: OnNext
        nameWithType: AGraphRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: PerformanceData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext(PerformanceData)
        name: OnNext
        nameWithType: AGraphRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: PerformanceData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AGraphRenderer.OnNext(PerformanceData)
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext*
        name: OnNext
        nameWithType: AMultiGraphRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext*
        name: OnNext
        nameWithType: AMultiGraphRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph*
        name: UpdateGraph
        nameWithType: AMultiGraphRenderer.UpdateGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph*
        name: UpdateGraph
        nameWithType: AMultiGraphRenderer.UpdateGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph
  GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer
        name: ASingleGraphRenderer
        nameWithType: ASingleGraphRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer
        name: ASingleGraphRenderer
        nameWithType: ASingleGraphRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer
  GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage*
        name: LegendImage
        nameWithType: ASingleGraphRenderer.LegendImage
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage*
        name: LegendImage
        nameWithType: ASingleGraphRenderer.LegendImage
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage
  GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target*
        name: Target
        nameWithType: IGraphRenderer.Target
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target*
        name: Target
        nameWithType: IGraphRenderer.Target
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.Target
  GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader*
        name: GraphShader
        nameWithType: IGraphRenderer.GraphShader
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader*
        name: GraphShader
        nameWithType: IGraphRenderer.GraphShader
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphShader
  GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine*
        name: IsLine
        nameWithType: IGraphRenderer.IsLine
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine*
        name: IsLine
        nameWithType: IGraphRenderer.IsLine
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsLine
  GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth*
        name: IsSmooth
        nameWithType: IGraphRenderer.IsSmooth
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth*
        name: IsSmooth
        nameWithType: IGraphRenderer.IsSmooth
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.IsSmooth
  GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing*
        name: HasAntiAliasing
        nameWithType: IGraphRenderer.HasAntiAliasing
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing*
        name: HasAntiAliasing
        nameWithType: IGraphRenderer.HasAntiAliasing
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.HasAntiAliasing
  GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues*
        name: GraphValues
        nameWithType: IGraphRenderer.GraphValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues*
        name: GraphValues
        nameWithType: IGraphRenderer.GraphValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.GraphValues
  GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph*
        name: RefreshGraph
        nameWithType: IGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph*
        name: RefreshGraph
        nameWithType: IGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.IGraphRenderer.RefreshGraph
  GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer
        name: ColoredMultiGraphRenderer
        nameWithType: ColoredMultiGraphRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer
        name: ColoredMultiGraphRenderer
        nameWithType: ColoredMultiGraphRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked
        name: IsStacked
        nameWithType: AMultiGraphRenderer.IsStacked
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked
        name: IsStacked
        nameWithType: AMultiGraphRenderer.IsStacked
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.IsStacked
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages
        name: LegendImages
        nameWithType: AMultiGraphRenderer.LegendImages
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages
        name: LegendImages
        nameWithType: AMultiGraphRenderer.LegendImages
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.LegendImages
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values
        name: Values
        nameWithType: AMultiGraphRenderer.Values
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values
        name: Values
        nameWithType: AMultiGraphRenderer.Values
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Values
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues
        name: MinValues
        nameWithType: AMultiGraphRenderer.MinValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues
        name: MinValues
        nameWithType: AMultiGraphRenderer.MinValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MinValues
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues
        name: MaxValues
        nameWithType: AMultiGraphRenderer.MaxValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues
        name: MaxValues
        nameWithType: AMultiGraphRenderer.MaxValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MaxValues
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues
        name: MeanValues
        nameWithType: AMultiGraphRenderer.MeanValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues
        name: MeanValues
        nameWithType: AMultiGraphRenderer.MeanValues
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.MeanValues
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.StackedPropertyId:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.StackedPropertyId
        name: StackedPropertyId
        nameWithType: AMultiGraphRenderer.StackedPropertyId
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.StackedPropertyId
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.StackedPropertyId
        name: StackedPropertyId
        nameWithType: AMultiGraphRenderer.StackedPropertyId
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.StackedPropertyId
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    commentId: F:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.StackedPropertyId
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake
        name: Awake
        nameWithType: AMultiGraphRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake
        name: Awake
        nameWithType: AMultiGraphRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.Awake
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph
        name: UpdateGraph
        nameWithType: AMultiGraphRenderer.UpdateGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph
        name: UpdateGraph
        nameWithType: AMultiGraphRenderer.UpdateGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.UpdateGraph
  GUPS.EasyPerformanceMonitor.List{Color}:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.List`1
    commentId: '!:GUPS.EasyPerformanceMonitor.List{Color}'
  GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors*
        name: Colors
        nameWithType: ColoredMultiGraphRenderer.Colors
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors*
        name: Colors
        nameWithType: ColoredMultiGraphRenderer.Colors
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph(Shader):
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph(Shader)
        name: OnInitializeGraph
        nameWithType: AMultiGraphRenderer.OnInitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.Shader
        name: Shader
        nameWithType: Shader
        qualifiedName: Shader
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph(Shader)
        name: OnInitializeGraph
        nameWithType: AMultiGraphRenderer.OnInitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.Shader
        name: Shader
        nameWithType: Shader
        qualifiedName: Shader
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnInitializeGraph(Shader)
  GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph*
        name: OnInitializeGraph
        nameWithType: ColoredMultiGraphRenderer.OnInitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph*
        name: OnInitializeGraph
        nameWithType: ColoredMultiGraphRenderer.OnInitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph
        name: RefreshGraph
        nameWithType: AMultiGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph
        name: RefreshGraph
        nameWithType: AMultiGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.RefreshGraph
  GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph*
        name: RefreshGraph
        nameWithType: ColoredMultiGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph*
        name: RefreshGraph
        nameWithType: ColoredMultiGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph
  GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext(PerformanceData):
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext(PerformanceData)
        name: OnNext
        nameWithType: AMultiGraphRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: PerformanceData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext(PerformanceData)
        name: OnNext
        nameWithType: AMultiGraphRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: PerformanceData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.AMultiGraphRenderer.OnNext(PerformanceData)
  GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext*
        name: OnNext
        nameWithType: ColoredMultiGraphRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext*
        name: OnNext
        nameWithType: ColoredMultiGraphRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext
  GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer
        name: ColoredSingleGraphRenderer
        nameWithType: ColoredSingleGraphRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer
        name: ColoredSingleGraphRenderer
        nameWithType: ColoredSingleGraphRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer
  GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage
        name: LegendImage
        nameWithType: ASingleGraphRenderer.LegendImage
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage
        name: LegendImage
        nameWithType: ASingleGraphRenderer.LegendImage
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.ASingleGraphRenderer.LegendImage
  GUPS.EasyPerformanceMonitor.Color:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      VB:
      - id: GUPS.EasyPerformanceMonitor.Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
    isDefinition: true
    commentId: '!:GUPS.EasyPerformanceMonitor.Color'
  GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Color*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Color*
        name: Color
        nameWithType: ColoredSingleGraphRenderer.Color
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Color
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Color*
        name: Color
        nameWithType: ColoredSingleGraphRenderer.Color
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Color
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Color
  GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Awake*
        name: Awake
        nameWithType: ColoredSingleGraphRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Awake*
        name: Awake
        nameWithType: ColoredSingleGraphRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.Awake
  GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnInitializeGraph*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnInitializeGraph*
        name: OnInitializeGraph
        nameWithType: ColoredSingleGraphRenderer.OnInitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnInitializeGraph
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnInitializeGraph*
        name: OnInitializeGraph
        nameWithType: ColoredSingleGraphRenderer.OnInitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnInitializeGraph
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnInitializeGraph
  GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.RefreshGraph*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.RefreshGraph*
        name: RefreshGraph
        nameWithType: ColoredSingleGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.RefreshGraph
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.RefreshGraph*
        name: RefreshGraph
        nameWithType: ColoredSingleGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.RefreshGraph
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.RefreshGraph
  GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnNext*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnNext*
        name: OnNext
        nameWithType: ColoredSingleGraphRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnNext
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnNext*
        name: OnNext
        nameWithType: ColoredSingleGraphRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnNext
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ColoredSingleGraphRenderer.OnNext
  GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer
        name: NormalizedMultiGraphRenderer
        nameWithType: NormalizedMultiGraphRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer
        name: NormalizedMultiGraphRenderer
        nameWithType: NormalizedMultiGraphRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer
  GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors
        name: Colors
        nameWithType: ColoredMultiGraphRenderer.Colors
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors
        name: Colors
        nameWithType: ColoredMultiGraphRenderer.Colors
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.Colors
  GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphColorsPropertyId:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphColorsPropertyId
        name: GraphColorsPropertyId
        nameWithType: ColoredMultiGraphRenderer.GraphColorsPropertyId
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphColorsPropertyId
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphColorsPropertyId
        name: GraphColorsPropertyId
        nameWithType: ColoredMultiGraphRenderer.GraphColorsPropertyId
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphColorsPropertyId
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer
    commentId: F:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphColorsPropertyId
  GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphCountPropertyId:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphCountPropertyId
        name: GraphCountPropertyId
        nameWithType: ColoredMultiGraphRenderer.GraphCountPropertyId
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphCountPropertyId
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphCountPropertyId
        name: GraphCountPropertyId
        nameWithType: ColoredMultiGraphRenderer.GraphCountPropertyId
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphCountPropertyId
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer
    commentId: F:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.GraphCountPropertyId
  GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph(Shader):
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph(Shader)
        name: OnInitializeGraph
        nameWithType: ColoredMultiGraphRenderer.OnInitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.Shader
        name: Shader
        nameWithType: Shader
        qualifiedName: Shader
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph(Shader)
        name: OnInitializeGraph
        nameWithType: ColoredMultiGraphRenderer.OnInitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.Shader
        name: Shader
        nameWithType: Shader
        qualifiedName: Shader
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnInitializeGraph(Shader)
  GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph
        name: RefreshGraph
        nameWithType: ColoredMultiGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph
        name: RefreshGraph
        nameWithType: ColoredMultiGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.RefreshGraph
  GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext(PerformanceData):
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext(PerformanceData)
        name: OnNext
        nameWithType: ColoredMultiGraphRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: PerformanceData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext(PerformanceData)
        name: OnNext
        nameWithType: ColoredMultiGraphRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: PerformanceData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ColoredMultiGraphRenderer.OnNext(PerformanceData)
  GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer.UpdateGraph*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer.UpdateGraph*
        name: UpdateGraph
        nameWithType: NormalizedMultiGraphRenderer.UpdateGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer.UpdateGraph
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer.UpdateGraph*
        name: UpdateGraph
        nameWithType: NormalizedMultiGraphRenderer.UpdateGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer.UpdateGraph
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.NormalizedMultiGraphRenderer.UpdateGraph
  GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.HighIsGood*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.HighIsGood*
        name: HighIsGood
        nameWithType: RatedSingleGraphRenderer.HighIsGood
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.HighIsGood
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.HighIsGood*
        name: HighIsGood
        nameWithType: RatedSingleGraphRenderer.HighIsGood
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.HighIsGood
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.HighIsGood
  GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.GoodColor*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.GoodColor*
        name: GoodColor
        nameWithType: RatedSingleGraphRenderer.GoodColor
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.GoodColor
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.GoodColor*
        name: GoodColor
        nameWithType: RatedSingleGraphRenderer.GoodColor
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.GoodColor
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.GoodColor
  GUPS.EasyPerformanceMonitor.List{System.Single}:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.List`1
        name: List
        nameWithType: List
        qualifiedName: List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.List`1
    commentId: '!:GUPS.EasyPerformanceMonitor.List{System.Single}'
  GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.DesktopThresholds*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.DesktopThresholds*
        name: DesktopThresholds
        nameWithType: RatedSingleGraphRenderer.DesktopThresholds
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.DesktopThresholds
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.DesktopThresholds*
        name: DesktopThresholds
        nameWithType: RatedSingleGraphRenderer.DesktopThresholds
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.DesktopThresholds
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.DesktopThresholds
  GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.MobileThresholds*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.MobileThresholds*
        name: MobileThresholds
        nameWithType: RatedSingleGraphRenderer.MobileThresholds
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.MobileThresholds
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.MobileThresholds*
        name: MobileThresholds
        nameWithType: RatedSingleGraphRenderer.MobileThresholds
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.MobileThresholds
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.MobileThresholds
  GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ConsoleThresholds*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ConsoleThresholds*
        name: ConsoleThresholds
        nameWithType: RatedSingleGraphRenderer.ConsoleThresholds
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ConsoleThresholds
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ConsoleThresholds*
        name: ConsoleThresholds
        nameWithType: RatedSingleGraphRenderer.ConsoleThresholds
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ConsoleThresholds
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.ConsoleThresholds
  GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.Awake*
        name: Awake
        nameWithType: RatedSingleGraphRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.Awake*
        name: Awake
        nameWithType: RatedSingleGraphRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.Awake
  GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnInitializeGraph*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnInitializeGraph*
        name: OnInitializeGraph
        nameWithType: RatedSingleGraphRenderer.OnInitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnInitializeGraph
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnInitializeGraph*
        name: OnInitializeGraph
        nameWithType: RatedSingleGraphRenderer.OnInitializeGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnInitializeGraph
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnInitializeGraph
  GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.RefreshGraph*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.RefreshGraph*
        name: RefreshGraph
        nameWithType: RatedSingleGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.RefreshGraph
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.RefreshGraph*
        name: RefreshGraph
        nameWithType: RatedSingleGraphRenderer.RefreshGraph
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.RefreshGraph
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.RefreshGraph
  GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnNext*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnNext*
        name: OnNext
        nameWithType: RatedSingleGraphRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnNext
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnNext*
        name: OnNext
        nameWithType: RatedSingleGraphRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnNext
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer.OnNext
  GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer
        name: RatedSingleGraphRenderer
        nameWithType: RatedSingleGraphRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer
        name: RatedSingleGraphRenderer
        nameWithType: RatedSingleGraphRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.RatedSingleGraphRenderer
  GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer
        name: ITextRenderer
        nameWithType: ITextRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer
        name: ITextRenderer
        nameWithType: ITextRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Provider*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Provider*
        name: Provider
        nameWithType: ATextRenderer<TProvidedData>.Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.Provider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Provider*
        name: Provider
        nameWithType: ATextRenderer(Of TProvidedData).Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).Provider
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Provider
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Scale*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Scale*
        name: Scale
        nameWithType: ATextRenderer<TProvidedData>.Scale
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.Scale
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Scale*
        name: Scale
        nameWithType: ATextRenderer(Of TProvidedData).Scale
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).Scale
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Scale
  GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale
        name: Scale
        nameWithType: ITextRenderer.Scale
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale
        name: Scale
        nameWithType: ITextRenderer.Scale
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Awake*
        name: Awake
        nameWithType: ATextRenderer<TProvidedData>.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Awake*
        name: Awake
        nameWithType: ATextRenderer(Of TProvidedData).Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Awake
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.RefreshText*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.RefreshText*
        name: RefreshText
        nameWithType: ATextRenderer<TProvidedData>.RefreshText
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.RefreshText
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.RefreshText*
        name: RefreshText
        nameWithType: ATextRenderer(Of TProvidedData).RefreshText
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).RefreshText
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.RefreshText
  GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText
        name: RefreshText
        nameWithType: ITextRenderer.RefreshText
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText
        name: RefreshText
        nameWithType: ITextRenderer.RefreshText
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText
  TProvidedData:
    name:
      CSharp:
      - name: TProvidedData
        nameWithType: TProvidedData
        qualifiedName: TProvidedData
      VB:
      - name: TProvidedData
        nameWithType: TProvidedData
        qualifiedName: TProvidedData
    isDefinition: true
    commentId: '!:TProvidedData'
  '{TProvidedData}':
    name:
      CSharp:
      - name: TProvidedData
        nameWithType: TProvidedData
        qualifiedName: TProvidedData
      VB:
      - name: TProvidedData
        nameWithType: TProvidedData
        qualifiedName: TProvidedData
    isDefinition: false
    definition: TProvidedData
    commentId: '!:TProvidedData'
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnNext*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnNext*
        name: OnNext
        nameWithType: ATextRenderer<TProvidedData>.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.OnNext
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnNext*
        name: OnNext
        nameWithType: ATextRenderer(Of TProvidedData).OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).OnNext
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnNext
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnError*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnError*
        name: OnError
        nameWithType: ATextRenderer<TProvidedData>.OnError
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.OnError
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnError*
        name: OnError
        nameWithType: ATextRenderer(Of TProvidedData).OnError
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).OnError
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnError
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnCompleted*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnCompleted*
        name: OnCompleted
        nameWithType: ATextRenderer<TProvidedData>.OnCompleted
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.OnCompleted
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnCompleted*
        name: OnCompleted
        nameWithType: ATextRenderer(Of TProvidedData).OnCompleted
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).OnCompleted
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnCompleted
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Dispose*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Dispose*
        name: Dispose
        nameWithType: ATextRenderer<TProvidedData>.Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.Dispose
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Dispose*
        name: Dispose
        nameWithType: ATextRenderer(Of TProvidedData).Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).Dispose
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Dispose
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnDestroy*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnDestroy*
        name: OnDestroy
        nameWithType: ATextRenderer<TProvidedData>.OnDestroy
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.OnDestroy
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnDestroy*
        name: OnDestroy
        nameWithType: ATextRenderer(Of TProvidedData).OnDestroy
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).OnDestroy
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnDestroy
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1
        name: ATextRenderer
        nameWithType: ATextRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TProvidedData
        nameWithType: TProvidedData
        qualifiedName: TProvidedData
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1
        name: ATextRenderer
        nameWithType: ATextRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TProvidedData
        nameWithType: TProvidedData
        qualifiedName: TProvidedData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1
  GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale*
        name: Scale
        nameWithType: ITextRenderer.Scale
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale*
        name: Scale
        nameWithType: ITextRenderer.Scale
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.Scale
  GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText*
        name: RefreshText
        nameWithType: ITextRenderer.RefreshText
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText*
        name: RefreshText
        nameWithType: ITextRenderer.RefreshText
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.ITextRenderer.RefreshText
  GUPS.EasyPerformanceMonitor.Renderer.ColoredTextRenderer:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredTextRenderer
        name: ColoredTextRenderer
        nameWithType: ColoredTextRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredTextRenderer
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ColoredTextRenderer
        name: ColoredTextRenderer
        nameWithType: ColoredTextRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ColoredTextRenderer
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.ColoredTextRenderer
  GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer
        name: RatedTextRenderer
        nameWithType: RatedTextRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer
        name: RatedTextRenderer
        nameWithType: RatedTextRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer
  GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern
        name: Pattern
        nameWithType: RatedTextRenderer.Pattern
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern
        name: Pattern
        nameWithType: RatedTextRenderer.Pattern
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern
  GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake
        name: Awake
        nameWithType: RatedTextRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake
        name: Awake
        nameWithType: RatedTextRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake
  GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext(PerformanceData):
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext(PerformanceData)
        name: OnNext
        nameWithType: RatedTextRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: PerformanceData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext(PerformanceData)
        name: OnNext
        nameWithType: RatedTextRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: PerformanceData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext(PerformanceData)
  GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText
        name: RefreshText
        nameWithType: RatedTextRenderer.RefreshText
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText
        name: RefreshText
        nameWithType: RatedTextRenderer.RefreshText
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1
        name: ATextRenderer
        nameWithType: ATextRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GUPS.EasyPerformanceMonitor.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: PerformanceData
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1
        name: ATextRenderer
        nameWithType: ATextRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GUPS.EasyPerformanceMonitor.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: PerformanceData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1
    parent: GUPS.EasyPerformanceMonitor.Renderer
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Provider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Provider
        name: Provider
        nameWithType: ATextRenderer<TProvidedData>.Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.Provider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Provider
        name: Provider
        nameWithType: ATextRenderer(Of TProvidedData).Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).Provider
    isDefinition: true
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Provider
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Provider:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Provider
        name: Provider
        nameWithType: ATextRenderer<PerformanceData>.Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<PerformanceData>.Provider
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Provider
        name: Provider
        nameWithType: ATextRenderer(Of PerformanceData).Provider
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of PerformanceData).Provider
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Provider
    parent: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Provider
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Scale:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Scale
        name: Scale
        nameWithType: ATextRenderer<TProvidedData>.Scale
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.Scale
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Scale
        name: Scale
        nameWithType: ATextRenderer(Of TProvidedData).Scale
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).Scale
    isDefinition: true
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Scale
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Scale:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Scale
        name: Scale
        nameWithType: ATextRenderer<PerformanceData>.Scale
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<PerformanceData>.Scale
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Scale
        name: Scale
        nameWithType: ATextRenderer(Of PerformanceData).Scale
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of PerformanceData).Scale
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Scale
    parent: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}
    commentId: P:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Scale
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnError(Exception):
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnError(Exception)
        name: OnError
        nameWithType: ATextRenderer<TProvidedData>.OnError
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.OnError
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnError(Exception)
        name: OnError
        nameWithType: ATextRenderer(Of TProvidedData).OnError
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).OnError
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnError(Exception)
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnError(Exception):
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnError(Exception)
        name: OnError
        nameWithType: ATextRenderer<PerformanceData>.OnError
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<PerformanceData>.OnError
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnError(Exception)
        name: OnError
        nameWithType: ATextRenderer(Of PerformanceData).OnError
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of PerformanceData).OnError
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.Exception
        name: Exception
        nameWithType: Exception
        qualifiedName: Exception
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnError(Exception)
    parent: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnError(Exception)
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnCompleted:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnCompleted
        name: OnCompleted
        nameWithType: ATextRenderer<TProvidedData>.OnCompleted
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.OnCompleted
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnCompleted
        name: OnCompleted
        nameWithType: ATextRenderer(Of TProvidedData).OnCompleted
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).OnCompleted
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnCompleted
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnCompleted:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnCompleted
        name: OnCompleted
        nameWithType: ATextRenderer<PerformanceData>.OnCompleted
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<PerformanceData>.OnCompleted
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnCompleted
        name: OnCompleted
        nameWithType: ATextRenderer(Of PerformanceData).OnCompleted
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of PerformanceData).OnCompleted
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnCompleted
    parent: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnCompleted
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Dispose:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Dispose
        name: Dispose
        nameWithType: ATextRenderer<TProvidedData>.Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.Dispose
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Dispose
        name: Dispose
        nameWithType: ATextRenderer(Of TProvidedData).Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).Dispose
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Dispose
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Dispose:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Dispose
        name: Dispose
        nameWithType: ATextRenderer<PerformanceData>.Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<PerformanceData>.Dispose
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Dispose
        name: Dispose
        nameWithType: ATextRenderer(Of PerformanceData).Dispose
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of PerformanceData).Dispose
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Dispose
    parent: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Dispose
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnDestroy:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnDestroy
        name: OnDestroy
        nameWithType: ATextRenderer<TProvidedData>.OnDestroy
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.OnDestroy
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnDestroy
        name: OnDestroy
        nameWithType: ATextRenderer(Of TProvidedData).OnDestroy
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).OnDestroy
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnDestroy
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnDestroy:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnDestroy
        name: OnDestroy
        nameWithType: ATextRenderer<PerformanceData>.OnDestroy
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<PerformanceData>.OnDestroy
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnDestroy
        name: OnDestroy
        nameWithType: ATextRenderer(Of PerformanceData).OnDestroy
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of PerformanceData).OnDestroy
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnDestroy
    parent: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnDestroy
  GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Pattern*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Pattern*
        name: Pattern
        nameWithType: NormalizedTextRenderer.Pattern
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Pattern
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Pattern*
        name: Pattern
        nameWithType: NormalizedTextRenderer.Pattern
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Pattern
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Pattern
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Awake:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Awake
        name: Awake
        nameWithType: ATextRenderer<TProvidedData>.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Awake
        name: Awake
        nameWithType: ATextRenderer(Of TProvidedData).Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Awake
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Awake:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Awake
        name: Awake
        nameWithType: ATextRenderer<PerformanceData>.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<PerformanceData>.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Awake
        name: Awake
        nameWithType: ATextRenderer(Of PerformanceData).Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of PerformanceData).Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.Awake
    parent: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.Awake
  GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Awake*
        name: Awake
        nameWithType: NormalizedTextRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Awake*
        name: Awake
        nameWithType: NormalizedTextRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.Awake
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnNext(`0):
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnNext(`0)
        name: OnNext
        nameWithType: ATextRenderer<TProvidedData>.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.OnNext
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TProvidedData
        nameWithType: TProvidedData
        qualifiedName: TProvidedData
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnNext(`0)
        name: OnNext
        nameWithType: ATextRenderer(Of TProvidedData).OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).OnNext
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: TProvidedData
        nameWithType: TProvidedData
        qualifiedName: TProvidedData
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnNext(`0)
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnNext(PerformanceData):
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnNext(`0)
        name: OnNext
        nameWithType: ATextRenderer<PerformanceData>.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<PerformanceData>.OnNext
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: PerformanceData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnNext(`0)
        name: OnNext
        nameWithType: ATextRenderer(Of PerformanceData).OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of PerformanceData).OnNext
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: GUPS.EasyPerformanceMonitor.PerformanceData
        name: PerformanceData
        nameWithType: PerformanceData
        qualifiedName: PerformanceData
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.OnNext(`0)
    parent: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.OnNext(PerformanceData)
  GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.OnNext*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.OnNext*
        name: OnNext
        nameWithType: NormalizedTextRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.OnNext
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.OnNext*
        name: OnNext
        nameWithType: NormalizedTextRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.OnNext
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.OnNext
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.RefreshText:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.RefreshText
        name: RefreshText
        nameWithType: ATextRenderer<TProvidedData>.RefreshText
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<TProvidedData>.RefreshText
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.RefreshText
        name: RefreshText
        nameWithType: ATextRenderer(Of TProvidedData).RefreshText
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of TProvidedData).RefreshText
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.RefreshText
  GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.RefreshText:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.RefreshText
        name: RefreshText
        nameWithType: ATextRenderer<PerformanceData>.RefreshText
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer<PerformanceData>.RefreshText
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.RefreshText
        name: RefreshText
        nameWithType: ATextRenderer(Of PerformanceData).RefreshText
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer(Of PerformanceData).RefreshText
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer`1.RefreshText
    parent: GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}
    commentId: M:GUPS.EasyPerformanceMonitor.Renderer.ATextRenderer{PerformanceData}.RefreshText
  GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.RefreshText*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.RefreshText*
        name: RefreshText
        nameWithType: NormalizedTextRenderer.RefreshText
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.RefreshText
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.RefreshText*
        name: RefreshText
        nameWithType: NormalizedTextRenderer.RefreshText
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.RefreshText
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer.RefreshText
  GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer
        name: NormalizedTextRenderer
        nameWithType: NormalizedTextRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer
        name: NormalizedTextRenderer
        nameWithType: NormalizedTextRenderer
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Renderer.NormalizedTextRenderer
  GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern*
        name: Pattern
        nameWithType: RatedTextRenderer.Pattern
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern*
        name: Pattern
        nameWithType: RatedTextRenderer.Pattern
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Pattern
  GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake*
        name: Awake
        nameWithType: RatedTextRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake*
        name: Awake
        nameWithType: RatedTextRenderer.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.Awake
  GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext*
        name: OnNext
        nameWithType: RatedTextRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext*
        name: OnNext
        nameWithType: RatedTextRenderer.OnNext
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.OnNext
  GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText*
        name: RefreshText
        nameWithType: RatedTextRenderer.RefreshText
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText
      VB:
      - id: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText*
        name: RefreshText
        nameWithType: RatedTextRenderer.RefreshText
        qualifiedName: GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Renderer.RatedTextRenderer.RefreshText
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
    commentId: '!:T'
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Singleton*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Singleton*
        name: Singleton
        nameWithType: PersistentSingleton<T>.Singleton
        qualifiedName: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton<T>.Singleton
      VB:
      - id: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Singleton*
        name: Singleton
        nameWithType: PersistentSingleton(Of T).Singleton
        qualifiedName: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton(Of T).Singleton
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Singleton
  GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Exists*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Exists*
        name: Exists
        nameWithType: PersistentSingleton<T>.Exists
        qualifiedName: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton<T>.Exists
      VB:
      - id: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Exists*
        name: Exists
        nameWithType: PersistentSingleton(Of T).Exists
        qualifiedName: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton(Of T).Exists
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Exists
  GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Awake*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Awake*
        name: Awake
        nameWithType: PersistentSingleton<T>.Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton<T>.Awake
      VB:
      - id: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Awake*
        name: Awake
        nameWithType: PersistentSingleton(Of T).Awake
        qualifiedName: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton(Of T).Awake
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1.Awake
  GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1
        name: PersistentSingleton
        nameWithType: PersistentSingleton
        qualifiedName: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1
        name: PersistentSingleton
        nameWithType: PersistentSingleton
        qualifiedName: GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Singleton.PersistentSingleton`1
  GUPS.EasyPerformanceMonitor.Singleton:
    name:
      CSharp:
      - name: GUPS.EasyPerformanceMonitor.Singleton
        nameWithType: GUPS.EasyPerformanceMonitor.Singleton
        qualifiedName: GUPS.EasyPerformanceMonitor.Singleton
      VB:
      - name: GUPS.EasyPerformanceMonitor.Singleton
        nameWithType: GUPS.EasyPerformanceMonitor.Singleton
        qualifiedName: GUPS.EasyPerformanceMonitor.Singleton
    isDefinition: true
    commentId: N:GUPS.EasyPerformanceMonitor.Singleton
  GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
        name: EMonitorWindowPosition
        nameWithType: EMonitorWindowPosition
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
        name: EMonitorWindowPosition
        nameWithType: EMonitorWindowPosition
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window
    commentId: T:GUPS.EasyPerformanceMonitor.Window.EMonitorWindowPosition
  GUPS.EasyPerformanceMonitor.Window:
    name:
      CSharp:
      - name: GUPS.EasyPerformanceMonitor.Window
        nameWithType: GUPS.EasyPerformanceMonitor.Window
        qualifiedName: GUPS.EasyPerformanceMonitor.Window
      VB:
      - name: GUPS.EasyPerformanceMonitor.Window
        nameWithType: GUPS.EasyPerformanceMonitor.Window
        qualifiedName: GUPS.EasyPerformanceMonitor.Window
    isDefinition: true
    commentId: N:GUPS.EasyPerformanceMonitor.Window
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
        name: MonitorWindow
        nameWithType: MonitorWindow
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
        name: MonitorWindow
        nameWithType: MonitorWindow
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window
    commentId: T:GUPS.EasyPerformanceMonitor.Window.MonitorWindow
  GUPS.EasyPerformanceMonitor.Canvas:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Canvas
        name: Canvas
        nameWithType: Canvas
        qualifiedName: Canvas
        isExternal: true
      VB:
      - id: GUPS.EasyPerformanceMonitor.Canvas
        name: Canvas
        nameWithType: Canvas
        qualifiedName: Canvas
        isExternal: true
    isDefinition: true
    commentId: '!:GUPS.EasyPerformanceMonitor.Canvas'
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable*
        name: OnEnable
        nameWithType: MonitorWindow.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable*
        name: OnEnable
        nameWithType: MonitorWindow.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start*
        name: Start
        nameWithType: MonitorWindow.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start*
        name: Start
        nameWithType: MonitorWindow.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update*
        name: Update
        nameWithType: MonitorWindow.Update
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update*
        name: Update
        nameWithType: MonitorWindow.Update
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle*
        name: Toggle
        nameWithType: MonitorWindow.Toggle
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle*
        name: Toggle
        nameWithType: MonitorWindow.Toggle
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements*
        name: PlaceMonitorElements
        nameWithType: MonitorWindow.PlaceMonitorElements
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements*
        name: PlaceMonitorElements
        nameWithType: MonitorWindow.PlaceMonitorElements
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable*
        name: OnDisable
        nameWithType: MonitorWindow.OnDisable
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable*
        name: OnDisable
        nameWithType: MonitorWindow.OnDisable
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable
  GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow
        name: LogMonitorWindow
        nameWithType: LogMonitorWindow
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow
        name: LogMonitorWindow
        nameWithType: LogMonitorWindow
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Name:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Name
        name: Name
        nameWithType: MonitorWindow.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Name
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Name
        name: Name
        nameWithType: MonitorWindow.Name
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Name
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    commentId: F:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Name
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorCanvas:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorCanvas
        name: MonitorCanvas
        nameWithType: MonitorWindow.MonitorCanvas
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorCanvas
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorCanvas
        name: MonitorCanvas
        nameWithType: MonitorWindow.MonitorCanvas
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorCanvas
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    commentId: F:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorCanvas
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorPosition:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorPosition
        name: MonitorPosition
        nameWithType: MonitorWindow.MonitorPosition
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorPosition
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorPosition
        name: MonitorPosition
        nameWithType: MonitorWindow.MonitorPosition
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorPosition
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    commentId: F:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.MonitorPosition
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetX:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetX
        name: InitialOffsetX
        nameWithType: MonitorWindow.InitialOffsetX
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetX
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetX
        name: InitialOffsetX
        nameWithType: MonitorWindow.InitialOffsetX
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetX
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    commentId: F:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetX
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetY:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetY
        name: InitialOffsetY
        nameWithType: MonitorWindow.InitialOffsetY
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetY
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetY
        name: InitialOffsetY
        nameWithType: MonitorWindow.InitialOffsetY
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetY
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    commentId: F:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.InitialOffsetY
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementWidth:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementWidth
        name: ElementWidth
        nameWithType: MonitorWindow.ElementWidth
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementWidth
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementWidth
        name: ElementWidth
        nameWithType: MonitorWindow.ElementWidth
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementWidth
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    commentId: F:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementWidth
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementHeight:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementHeight
        name: ElementHeight
        nameWithType: MonitorWindow.ElementHeight
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementHeight
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementHeight
        name: ElementHeight
        nameWithType: MonitorWindow.ElementHeight
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementHeight
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    commentId: F:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementHeight
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementSpacing:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementSpacing
        name: ElementSpacing
        nameWithType: MonitorWindow.ElementSpacing
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementSpacing
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementSpacing
        name: ElementSpacing
        nameWithType: MonitorWindow.ElementSpacing
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementSpacing
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    commentId: F:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.ElementSpacing
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle
        name: Toggle
        nameWithType: MonitorWindow.Toggle
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle
        name: Toggle
        nameWithType: MonitorWindow.Toggle
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    commentId: M:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle(System.Boolean):
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle(System.Boolean)
        name: Toggle
        nameWithType: MonitorWindow.Toggle
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle(System.Boolean)
        name: Toggle
        nameWithType: MonitorWindow.Toggle
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    commentId: M:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Toggle(System.Boolean)
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements
        name: PlaceMonitorElements
        nameWithType: MonitorWindow.PlaceMonitorElements
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements
        name: PlaceMonitorElements
        nameWithType: MonitorWindow.PlaceMonitorElements
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    commentId: M:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.PlaceMonitorElements
  GUPS.EasyPerformanceMonitor.UnityEngine.UI.Scrollbar:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Scrollbar
        name: UnityEngine.UI.Scrollbar
        nameWithType: UnityEngine.UI.Scrollbar
        qualifiedName: UnityEngine.UI.Scrollbar
        isExternal: true
      VB:
      - id: GUPS.EasyPerformanceMonitor.UnityEngine.UI.Scrollbar
        name: UnityEngine.UI.Scrollbar
        nameWithType: UnityEngine.UI.Scrollbar
        qualifiedName: UnityEngine.UI.Scrollbar
        isExternal: true
    isDefinition: true
    commentId: '!:GUPS.EasyPerformanceMonitor.UnityEngine.UI.Scrollbar'
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable
        name: OnEnable
        nameWithType: MonitorWindow.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable
        name: OnEnable
        nameWithType: MonitorWindow.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    commentId: M:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnEnable
  GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnEnable*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnEnable*
        name: OnEnable
        nameWithType: LogMonitorWindow.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnEnable
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnEnable*
        name: OnEnable
        nameWithType: LogMonitorWindow.OnEnable
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnEnable
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnEnable
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start
        name: Start
        nameWithType: MonitorWindow.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start
        name: Start
        nameWithType: MonitorWindow.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    commentId: M:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Start
  GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Start*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Start*
        name: Start
        nameWithType: LogMonitorWindow.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Start
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Start*
        name: Start
        nameWithType: LogMonitorWindow.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Start
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Start
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update
        name: Update
        nameWithType: MonitorWindow.Update
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update
        name: Update
        nameWithType: MonitorWindow.Update
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    commentId: M:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.Update
  GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Update*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Update*
        name: Update
        nameWithType: LogMonitorWindow.Update
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Update
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Update*
        name: Update
        nameWithType: LogMonitorWindow.Update
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Update
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.Update
  GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable
        name: OnDisable
        nameWithType: MonitorWindow.OnDisable
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable
        name: OnDisable
        nameWithType: MonitorWindow.OnDisable
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: GUPS.EasyPerformanceMonitor.Window.MonitorWindow
    commentId: M:GUPS.EasyPerformanceMonitor.Window.MonitorWindow.OnDisable
  GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnDisable*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnDisable*
        name: OnDisable
        nameWithType: LogMonitorWindow.OnDisable
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnDisable
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnDisable*
        name: OnDisable
        nameWithType: LogMonitorWindow.OnDisable
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnDisable
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Window.LogMonitorWindow.OnDisable
  GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow
        name: PerformanceMonitorWindow
        nameWithType: PerformanceMonitorWindow
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow
        name: PerformanceMonitorWindow
        nameWithType: PerformanceMonitorWindow
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow
  GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow.Start*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow.Start*
        name: Start
        nameWithType: PerformanceMonitorWindow.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow.Start
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow.Start*
        name: Start
        nameWithType: PerformanceMonitorWindow.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow.Start
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Window.PerformanceMonitorWindow.Start
  GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow
        name: SystemMonitorWindow
        nameWithType: SystemMonitorWindow
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow
        name: SystemMonitorWindow
        nameWithType: SystemMonitorWindow
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow
    isDefinition: true
    commentId: T:GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow
  GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.Start*:
    name:
      CSharp:
      - id: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.Start*
        name: Start
        nameWithType: SystemMonitorWindow.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.Start
      VB:
      - id: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.Start*
        name: Start
        nameWithType: SystemMonitorWindow.Start
        qualifiedName: GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.Start
    isDefinition: true
    commentId: Overload:GUPS.EasyPerformanceMonitor.Window.SystemMonitorWindow.Start
